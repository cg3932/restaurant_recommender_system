/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI_Layout.java
 *
 * Created on Nov 29, 2009, 2:53:01 PM
 */
package g9_rest_recommender_final;

import javax.swing.*;
import java.io.*;
import javax.swing.plaf.basic.BasicButtonUI;
import java.awt.*;
import java.awt.event.*;
import entities.*;
import ratings.RatingControl;
import search.SearchControl;
import users.UserControl;
import java.util.Hashtable;
import java.sql.*;



import networkInterface.*;

import login.*;

/**
 *
 * @author Christian
 */
public class GUI_Layout extends javax.swing.JDialog {

    // Declare File Chooser
    JFileChooser fc;
    // Create usage arrays
    int[] restaurant_tab_used = new int[3];
    int[] restaurant_tab_index = new int[3];
    int[] user_tab_used = new int[3];
    int[] user_tab_index = new int[3];
    private User loggedUser;
    private Restaurant restaurant1;
    private Restaurant restaurant2;
    private Restaurant restaurant3;
    int r1_index;
    int r2_index; //Indices for comment numbers
    int r3_index;
    Rating[] r1_ratings;
    Rating[] r2_ratings;
    Rating[] r3_ratings;
    // Add object arrays for system lists
    DBStatsControl stats;
    Restaurant[] home_l_0_pop;
    Restaurant[] home_l_1_pop;
    Restaurant[] home_l_2_pop;
    Restaurant[] acc_l_0_pop;
    Restaurant[] acc_l_1_pop;
    Restaurant[] acc_l_2_pop;
    Restaurant[] admin_l_0_pop;
    Rating reviewed_comment;
    User[] admin_l_1_pop;
    Rating[] admin_l_2_pop;
    User[] admin_l_3_pop;
    private User user1;
    private User user2;
    private User user3;
    private Rating newRating;
    private Restaurant[] RestaurantSearchResultSet;
    private User[] UserSearchResultSet;
    // Declare global tab count
    int global_tab_count = 3;
    // demo variables
    int demo_count = 0;
    // Restaurant web addresses
    String R1_Webaddress = "http://www.google.ca";
    String R2_Webaddress = "http://www.google.ca";
    String R3_Webaddress = "http://www.google.ca";
    String ad1_web = "http://www.restaurantsu.com";
    String ad2_web = "http://www.miyukisushibar.com";
    String ad3_web = "http://www.tabledhot.com/tavolgrande/";
    String ad4_web = "http://www.baretboeuf.com";
    DBRestaurantControl dbrc;
    // Declare List Modifiers
    DefaultListModel listMod_home_l_0;
    DefaultListModel listMod_home_l_1;
    DefaultListModel listMod_home_l_2;
    DefaultListModel listMod_search_l_0;
    DefaultListModel listMod_acc_l_0;
    DefaultListModel listMod_acc_l_1;
    DefaultListModel listMod_acc_l_2;
    DefaultListModel listMod_admin_l_0;
    DefaultListModel listMod_admin_l_1;
    DefaultListModel listMod_admin_l_2;
    DefaultListModel listMod_admin_l_3;
    DefaultListModel listMod_u1_user_l_0;
    DefaultListModel listMod_u2_user_l_0;
    DefaultListModel listMod_u3_user_l_0;
    boolean loggingOut = false;
    int x = 0;
    // Add Resource Map
    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(GUI_Layout.class);

    /** Creates new form GUI_Layout */
    public GUI_Layout(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init_tab_components();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

      		// Add File Chooser
        fc = new JFileChooser();

 
        // Declare Main GUI Image Paths
        String main_path = "images/main_background.gif";
        String home_path = "images/home_tab_background.gif";
        String search_path = "images/search_tab_background.gif";
        String add_path = "images/add_tab_background.gif";
        String restaurant_path = "images/restaurant_tab_background.gif";
        String account_path = "images/account_tab_background.gif";
        String admin_path = "images/admin_tab_background.gif";
        String user_path = "images/user_tab_background.gif";
        String advertisements_path = "images/advertisements_tab_background.gif";
        String about_path = "images/about_tab_background.gif";
        String photo_preview_path = "images/photo_preview.gif";
        String r1_photo_path = "images/restaurant_photo.gif";
        String r2_photo_path = "images/restaurant_photo.gif";
        String r3_photo_path = "images/restaurant_photo.gif";
        String ad1_path = "images/add1.gif";
        String ad2_path = "images/add2.gif";
        String ad3_path = "images/add3.gif";
        String ad4_path = "images/add4.gif";
		
		// Declare Dialog Screen Image Paths
		String add_comment_path = "images/add_comment.gif";
		String change_password_path = "images/change_password.gif";
		String registration_form_path = "images/registration_form.gif";
		String review_comment_path = "images/review_comment.gif";

        // Initialize List Modifiers
        listMod_home_l_0=new DefaultListModel();
        listMod_home_l_1=new DefaultListModel();
        listMod_home_l_2=new DefaultListModel();
        listMod_search_l_0=new DefaultListModel();
        listMod_acc_l_0=new DefaultListModel();
        listMod_acc_l_1=new DefaultListModel();
        listMod_acc_l_2=new DefaultListModel();
        listMod_admin_l_0=new DefaultListModel();
        listMod_admin_l_1=new DefaultListModel();
        listMod_admin_l_2=new DefaultListModel();
	  listMod_admin_l_3=new DefaultListModel();
        listMod_u1_user_l_0 = new DefaultListModel();
        listMod_u2_user_l_0 = new DefaultListModel();
        listMod_u3_user_l_0 = new DefaultListModel();

        add_comment = new javax.swing.JDialog();
        panel_add_comment = new ImagePanel(add_comment_path);
        jScrollPane27 = new javax.swing.JScrollPane();
        add_comment_ta_0 = new javax.swing.JTextArea();
        add_comment_dm_0 = new javax.swing.JComboBox();
        add_comment_b_0 = new javax.swing.JButton();
        change_password = new javax.swing.JDialog();
        panel_change_password = new ImagePanel(change_password_path);
        change_password_tf_0 = new javax.swing.JTextField();
        change_password_tf_1 = new javax.swing.JPasswordField();
        change_password_tf_2 = new javax.swing.JPasswordField();
        change_password_b_0 = new javax.swing.JButton();
        registration_form = new javax.swing.JDialog();
        panel_registration = new ImagePanel(registration_form_path);
        registration_tf_0 = new javax.swing.JTextField();
        registration_tf_1 = new javax.swing.JTextField();
        registration_tf_2 = new javax.swing.JPasswordField();
        registration_tf_3 = new javax.swing.JPasswordField();
        registration_b_0 = new javax.swing.JButton();
        review_comment = new javax.swing.JDialog();
        panel_review_comment = new ImagePanel(review_comment_path);
        jScrollPane28 = new javax.swing.JScrollPane();
        review_comment_ta_0 = new javax.swing.JTextArea();
        review_comment_dm_0 = new javax.swing.JComboBox();
        review_comment_b_0 = new javax.swing.JButton();
        review_comment_b_1 = new javax.swing.JButton();
        panel_main = new ImagePanel(main_path);
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panel_home = new ImagePanel(home_path);
        home_tf_0 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        home_l_0 = new javax.swing.JList(listMod_home_l_0);
        home_b_0 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        home_l_1 = new javax.swing.JList(listMod_home_l_1);
        jScrollPane3 = new javax.swing.JScrollPane();
        home_l_2 = new javax.swing.JList(listMod_home_l_2);
        panel_search = new ImagePanel(search_path);;
        search_tf_0 = new javax.swing.JTextField();
        search_tf_8 = new javax.swing.JTextField();
        search_tf_1 = new javax.swing.JTextField();
        search_tf_2 = new javax.swing.JTextField();
        search_tf_9 = new javax.swing.JTextField();
        search_b_0 = new javax.swing.JButton();
        search_b_1 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        search_l_0 = new javax.swing.JList(listMod_search_l_0);
        search_dm_0 = new javax.swing.JComboBox();
        search_dm_1 = new javax.swing.JComboBox();
        search_dm_2 = new javax.swing.JComboBox();
        search_tf_3 = new javax.swing.JTextField();
        search_dm_3 = new javax.swing.JComboBox();
        search_tf_4 = new javax.swing.JTextField();
        search_tf_5 = new javax.swing.JTextField();
        search_tf_6 = new javax.swing.JTextField();
        search_tf_7 = new javax.swing.JTextField();
        search_dm_4 = new javax.swing.JComboBox();
        panel_add = new ImagePanel(add_path);
        add_tf_11 = new javax.swing.JTextField();
        add_b_1 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        add_ta_0 = new javax.swing.JTextArea();
        jScrollPane16 = new javax.swing.JScrollPane();
        add_ta_1 = new javax.swing.JTextArea();
        add_b_3 = new javax.swing.JButton();
        add_b_2 = new javax.swing.JButton();
        add_tf_0 = new javax.swing.JTextField();
        add_tf_1 = new javax.swing.JTextField();
        add_dm_0 = new javax.swing.JComboBox();
        add_tf_5 = new javax.swing.JTextField();
        add_dm_2 = new javax.swing.JComboBox();
        add_tf_4 = new javax.swing.JTextField();
        add_dm_1 = new javax.swing.JComboBox();
        add_tf_3 = new javax.swing.JTextField();
        add_tf_6 = new javax.swing.JTextField();
        add_tf_7 = new javax.swing.JTextField();
        add_tf_9 = new javax.swing.JTextField();
        add_dm_3 = new javax.swing.JComboBox();
        add_tf_10 = new javax.swing.JTextField();
        add_tf_8 = new javax.swing.JTextField();
        add_tf_2 = new javax.swing.JTextField();
        add_b_0 = new javax.swing.JButton();
        panel_photo_preview = new ImagePanel(photo_preview_path);
        panel_r1_restaurant = new ImagePanel(restaurant_path);
        r1_rest_tf_7 = new javax.swing.JTextField();
        r1_rest_tf_4 = new javax.swing.JTextField();
        r1_rest_tf_8 = new javax.swing.JTextField();
        r1_rest_tf_9 = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        r1_rest_ta_0 = new javax.swing.JTextArea();
        r1_rest_tf_2 = new javax.swing.JTextField();
        r1_rest_tf_0 = new javax.swing.JTextField();
        r1_rest_tf_1 = new javax.swing.JTextField();
        jScrollPane12 = new javax.swing.JScrollPane();
        r1_rest_ta_1 = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        r1_rest_ta_2 = new javax.swing.JTextArea();
        r1_rest_b_4 = new javax.swing.JButton();
        r1_rest_b_5 = new javax.swing.JButton();
        r1_rest_b_3 = new javax.swing.JButton();
        r1_rest_b_1 = new javax.swing.JButton();
        r1_rest_b_2 = new javax.swing.JButton();
        r1_rest_b_0 = new javax.swing.JButton();
        r1_rest_tf_11 = new javax.swing.JTextField();
        r1_rest_tf_13 = new javax.swing.JTextField();
        r1_rest_tf_3 = new javax.swing.JTextField();
        r1_rest_tf_5 = new javax.swing.JTextField();
        r1_rest_dm_0 = new javax.swing.JComboBox();
        r1_rest_tf_6 = new javax.swing.JTextField();
        r1_rest_dm_1 = new javax.swing.JComboBox();
        r1_rest_tf_12 = new javax.swing.JTextField();
        r1_rest_tf_14 = new javax.swing.JTextField();
        r1_rest_tf_10 = new javax.swing.JTextField();
        panel_R1_photo = new ImagePanel(r1_photo_path);
        panel_account = new ImagePanel(account_path);
        acc_tf_0 = new javax.swing.JTextField();
        acc_tf_1 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        acc_ta_0 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        acc_l_0 = new javax.swing.JList(listMod_acc_l_0);
        jScrollPane6 = new javax.swing.JScrollPane();
        acc_l_1 = new javax.swing.JList(listMod_acc_l_1);
        jScrollPane7 = new javax.swing.JScrollPane();
        acc_l_2 = new javax.swing.JList(listMod_acc_l_2);
        acc_b_0 = new javax.swing.JButton();
        acc_b_1 = new javax.swing.JButton();
        panel_about = new ImagePanel(about_path);
        panel_admin = new ImagePanel(admin_path);
        jScrollPane8 = new javax.swing.JScrollPane();
        admin_l_0 = new javax.swing.JList(listMod_admin_l_0);
        jScrollPane9 = new javax.swing.JScrollPane();
        admin_l_1 = new javax.swing.JList(listMod_admin_l_1);
        jScrollPane10 = new javax.swing.JScrollPane();
        admin_l_2 = new javax.swing.JList(listMod_admin_l_2);
        admin_tf_0 = new javax.swing.JTextField();
        admin_tf_2 = new javax.swing.JTextField();
        admin_tf_1 = new javax.swing.JTextField();
        admin_tf_3 = new javax.swing.JTextField();
        admin_tf_4 = new javax.swing.JTextField();
        admin_b_0 = new javax.swing.JButton();
        jScrollPane26 = new javax.swing.JScrollPane();
        admin_l_3 = new javax.swing.JList(listMod_admin_l_3);
        panel_u1_user = new ImagePanel(user_path);
        u1_user_tf_0 = new javax.swing.JTextField();
        u1_user_tf_1 = new javax.swing.JTextField();
        u1_user_tf_2 = new javax.swing.JTextField();
        u1_user_b_0 = new javax.swing.JButton();
        u1_user_b_1 = new javax.swing.JButton();
        u1_user_b_2 = new javax.swing.JButton();
        jScrollPane17 = new javax.swing.JScrollPane();
        u1_user_l_0 = new javax.swing.JList(listMod_u1_user_l_0);
        u1_user_b_3 = new javax.swing.JButton();
        panel_ads = new ImagePanel(advertisements_path);
        ads_tf_0 = new javax.swing.JTextField();
        ads_tf_1 = new javax.swing.JTextField();
        ads_tf_2 = new javax.swing.JTextField();
        ads_tf_3 = new javax.swing.JTextField();
        ads_tf_6 = new javax.swing.JTextField();
        ads_tf_8 = new javax.swing.JTextField();
        ads_tf_10 = new javax.swing.JTextField();
        ads_b_1 = new javax.swing.JButton();
        ads_b_2 = new javax.swing.JButton();
        ads_b_3 = new javax.swing.JButton();
        ads_tf_4 = new javax.swing.JTextField();
        ads_b_0 = new javax.swing.JButton();
        ads_tf_5 = new javax.swing.JTextField();
        ads_tf_7 = new javax.swing.JTextField();
        ads_tf_9 = new javax.swing.JTextField();
        ads_tf_11 = new javax.swing.JTextField();
        ads_b_4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panel_r2_restaurant = new ImagePanel(restaurant_path);
        r2_rest_tf_7 = new javax.swing.JTextField();
        r2_rest_tf_4 = new javax.swing.JTextField();
        r2_rest_tf_8 = new javax.swing.JTextField();
        r2_rest_tf_9 = new javax.swing.JTextField();
        jScrollPane18 = new javax.swing.JScrollPane();
        r2_rest_ta_0 = new javax.swing.JTextArea();
        r2_rest_tf_2 = new javax.swing.JTextField();
        r2_rest_tf_0 = new javax.swing.JTextField();
        r2_rest_tf_1 = new javax.swing.JTextField();
        jScrollPane19 = new javax.swing.JScrollPane();
        r2_rest_ta_1 = new javax.swing.JTextArea();
        jScrollPane20 = new javax.swing.JScrollPane();
        r2_rest_ta_2 = new javax.swing.JTextArea();
        r2_rest_b_4 = new javax.swing.JButton();
        r2_rest_b_5 = new javax.swing.JButton();
        r2_rest_b_3 = new javax.swing.JButton();
        r2_rest_b_1 = new javax.swing.JButton();
        r2_rest_b_2 = new javax.swing.JButton();
        r2_rest_b_0 = new javax.swing.JButton();
        r2_rest_tf_11 = new javax.swing.JTextField();
        r2_rest_tf_13 = new javax.swing.JTextField();
        r2_rest_tf_3 = new javax.swing.JTextField();
        r2_rest_tf_5 = new javax.swing.JTextField();
        r2_rest_dm_0 = new javax.swing.JComboBox();
        r2_rest_tf_6 = new javax.swing.JTextField();
        r2_rest_dm_1 = new javax.swing.JComboBox();
        r2_rest_tf_12 = new javax.swing.JTextField();
        r2_rest_tf_14 = new javax.swing.JTextField();
        r2_rest_tf_10 = new javax.swing.JTextField();
        panel_R2_photo = new ImagePanel(r2_photo_path);
        jPanel2 = new javax.swing.JPanel();
        panel_r3_restaurant = new ImagePanel(restaurant_path);
        r3_rest_tf_7 = new javax.swing.JTextField();
        r3_rest_tf_4 = new javax.swing.JTextField();
        r3_rest_tf_8 = new javax.swing.JTextField();
        r3_rest_tf_9 = new javax.swing.JTextField();
        jScrollPane21 = new javax.swing.JScrollPane();
        r3_rest_ta_0 = new javax.swing.JTextArea();
        r3_rest_tf_2 = new javax.swing.JTextField();
        r3_rest_tf_0 = new javax.swing.JTextField();
        r3_rest_tf_1 = new javax.swing.JTextField();
        jScrollPane22 = new javax.swing.JScrollPane();
        r3_rest_ta_1 = new javax.swing.JTextArea();
        jScrollPane23 = new javax.swing.JScrollPane();
        r3_rest_ta_2 = new javax.swing.JTextArea();
        r3_rest_b_4 = new javax.swing.JButton();
        r3_rest_b_5 = new javax.swing.JButton();
        r3_rest_b_3 = new javax.swing.JButton();
        r3_rest_b_1 = new javax.swing.JButton();
        r3_rest_b_2 = new javax.swing.JButton();
        r3_rest_b_0 = new javax.swing.JButton();
        r3_rest_tf_11 = new javax.swing.JTextField();
        r3_rest_tf_13 = new javax.swing.JTextField();
        r3_rest_tf_3 = new javax.swing.JTextField();
        r3_rest_tf_5 = new javax.swing.JTextField();
        r3_rest_dm_0 = new javax.swing.JComboBox();
        r3_rest_tf_6 = new javax.swing.JTextField();
        r3_rest_dm_1 = new javax.swing.JComboBox();
        r3_rest_tf_12 = new javax.swing.JTextField();
        r3_rest_tf_14 = new javax.swing.JTextField();
        r3_rest_tf_10 = new javax.swing.JTextField();
        panel_R3_photo = new ImagePanel(r3_photo_path);
        jPanel3 = new javax.swing.JPanel();
        panel_u2_user = new ImagePanel(user_path);
        u2_user_tf_0 = new javax.swing.JTextField();
        u2_user_tf_1 = new javax.swing.JTextField();
        u2_user_tf_2 = new javax.swing.JTextField();
        u2_user_b_0 = new javax.swing.JButton();
        u2_user_b_1 = new javax.swing.JButton();
        u2_user_b_2 = new javax.swing.JButton();
        jScrollPane24 = new javax.swing.JScrollPane();
        u2_user_l_0 = new javax.swing.JList(listMod_u2_user_l_0 );
        u2_user_b_3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        panel_u3_user = new ImagePanel(user_path);
        u3_user_tf_0 = new javax.swing.JTextField();
        u3_user_tf_1 = new javax.swing.JTextField();
        u3_user_tf_2 = new javax.swing.JTextField();
        u3_user_b_0 = new javax.swing.JButton();
        u3_user_b_1 = new javax.swing.JButton();
        u3_user_b_2 = new javax.swing.JButton();
        jScrollPane25 = new javax.swing.JScrollPane();
        u3_user_l_0 = new javax.swing.JList(listMod_u3_user_l_0 );
        u4_user_b_3 = new javax.swing.JButton();
        panel_ad_1 = new ImagePanel(ad1_path);
        panel_ad_2 = new ImagePanel(ad2_path);
        panel_ad_3 = new ImagePanel(ad3_path);
        panel_ad_4 = new ImagePanel(ad4_path);
        main_tf_0 = new javax.swing.JTextField();
        main_tf_1 = new javax.swing.JPasswordField();
        main_b_0 = new javax.swing.JButton();
        main_b_1 = new javax.swing.JButton();
        main_b_2 = new javax.swing.JButton();
        main_b_3 = new javax.swing.JButton();


        add_comment.setAlwaysOnTop(true);
        add_comment.setModal(true);
        add_comment.setName("add_comment"); // NOI18N

        panel_add_comment.setName("panel_add_comment"); // NOI18N

        jScrollPane27.setName("jScrollPane27"); // NOI18N

        add_comment_ta_0.setColumns(20);
        add_comment_ta_0.setRows(5);
        add_comment_ta_0.setName("add_comment_ta_0"); // NOI18N
        jScrollPane27.setViewportView(add_comment_ta_0);

        add_comment_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Rating", "1", "2", "3", "4", "5" }));
        add_comment_dm_0.setName("add_comment_dm_0"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(GUI_Layout.class);
        add_comment_b_0.setText(resourceMap.getString("add_comment_b_0.text")); // NOI18N
        add_comment_b_0.setName("add_comment_b_0"); // NOI18N
        add_comment_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_comment_b_0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_add_commentLayout = new javax.swing.GroupLayout(panel_add_comment);
        panel_add_comment.setLayout(panel_add_commentLayout);
        panel_add_commentLayout.setHorizontalGroup(
            panel_add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_add_commentLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(panel_add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_comment_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_comment_b_0))
                .addGap(43, 43, 43))
        );
        panel_add_commentLayout.setVerticalGroup(
            panel_add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_add_commentLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(panel_add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_add_commentLayout.createSequentialGroup()
                        .addComponent(add_comment_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(add_comment_b_0))
                    .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout add_commentLayout = new javax.swing.GroupLayout(add_comment.getContentPane());
        add_comment.getContentPane().setLayout(add_commentLayout);
        add_commentLayout.setHorizontalGroup(
            add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addComponent(panel_add_comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        add_commentLayout.setVerticalGroup(
            add_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
            .addComponent(panel_add_comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        change_password.setAlwaysOnTop(true);
        change_password.setModal(true);
        change_password.setName("change_password"); // NOI18N

        panel_change_password.setName("panel_change_password"); // NOI18N

        change_password_tf_0.setName("change_password_tf_0"); // NOI18N

        change_password_tf_1.setName("change_password_tf_1"); // NOI18N

        change_password_tf_2.setName("change_password_tf_2"); // NOI18N

        change_password_b_0.setText(resourceMap.getString("change_password_b_0.text")); // NOI18N
        change_password_b_0.setName("change_password_b_0"); // NOI18N
        change_password_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                change_password_b_0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_change_passwordLayout = new javax.swing.GroupLayout(panel_change_password);
        panel_change_password.setLayout(panel_change_passwordLayout);
        panel_change_passwordLayout.setHorizontalGroup(
            panel_change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_change_passwordLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(panel_change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(change_password_tf_2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(change_password_tf_1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(change_password_tf_0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(change_password_b_0)
                .addGap(46, 46, 46))
        );
        panel_change_passwordLayout.setVerticalGroup(
            panel_change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_change_passwordLayout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(change_password_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(change_password_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(change_password_b_0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(change_password_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout change_passwordLayout = new javax.swing.GroupLayout(change_password.getContentPane());
        change_password.getContentPane().setLayout(change_passwordLayout);
        change_passwordLayout.setHorizontalGroup(
            change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addComponent(panel_change_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        change_passwordLayout.setVerticalGroup(
            change_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
            .addComponent(panel_change_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        registration_form.setAlwaysOnTop(true);
        registration_form.setModal(true);
        registration_form.setName("registration_form"); // NOI18N

        panel_registration.setName("panel_registration"); // NOI18N

        registration_tf_0.setName("registration_tf_0"); // NOI18N

        registration_tf_1.setName("registration_tf_1"); // NOI18N

        registration_tf_2.setName("registration_tf_2"); // NOI18N

        registration_tf_3.setName("registration_tf_3"); // NOI18N

        registration_b_0.setText(resourceMap.getString("registration_b_0.text")); // NOI18N
        registration_b_0.setName("registration_b_0"); // NOI18N
        registration_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registration_b_0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_registrationLayout = new javax.swing.GroupLayout(panel_registration);
        panel_registration.setLayout(panel_registrationLayout);
        panel_registrationLayout.setHorizontalGroup(
            panel_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registrationLayout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addGroup(panel_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(registration_tf_3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registration_tf_2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registration_tf_1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(registration_tf_0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(registration_b_0)
                .addGap(49, 49, 49))
        );
        panel_registrationLayout.setVerticalGroup(
            panel_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registrationLayout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(panel_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registrationLayout.createSequentialGroup()
                        .addComponent(registration_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registration_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registration_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(registration_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_registrationLayout.createSequentialGroup()
                        .addComponent(registration_b_0)
                        .addGap(41, 41, 41)))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout registration_formLayout = new javax.swing.GroupLayout(registration_form.getContentPane());
        registration_form.getContentPane().setLayout(registration_formLayout);
        registration_formLayout.setHorizontalGroup(
            registration_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addComponent(panel_registration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        registration_formLayout.setVerticalGroup(
            registration_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
            .addComponent(panel_registration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        review_comment.setAlwaysOnTop(true);
        review_comment.setModal(true);
        review_comment.setName("review_comment"); // NOI18N

        panel_review_comment.setName("panel_review_comment"); // NOI18N

        jScrollPane28.setName("jScrollPane28"); // NOI18N

        review_comment_ta_0.setColumns(20);
        review_comment_ta_0.setRows(5);
        review_comment_ta_0.setName("review_comment_ta_0"); // NOI18N
        jScrollPane28.setViewportView(review_comment_ta_0);

        review_comment_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Rating", "1", "2", "3", "4", "5" }));
        review_comment_dm_0.setName("review_comment_dm_0"); // NOI18N

        review_comment_b_0.setText(resourceMap.getString("review_comment_b_0.text")); // NOI18N
        review_comment_b_0.setName("review_comment_b_0"); // NOI18N
        review_comment_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                review_comment_b_0ActionPerformed(evt);
            }
        });

        review_comment_b_1.setText(resourceMap.getString("review_comment_b_1.text")); // NOI18N
        review_comment_b_1.setName("review_comment_b_1"); // NOI18N
        review_comment_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                review_comment_b_1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_review_commentLayout = new javax.swing.GroupLayout(panel_review_comment);
        panel_review_comment.setLayout(panel_review_commentLayout);
        panel_review_commentLayout.setHorizontalGroup(
            panel_review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_review_commentLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel_review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_review_commentLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(review_comment_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_review_commentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(panel_review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(review_comment_b_1)
                            .addComponent(review_comment_b_0))
                        .addGap(56, 56, 56))))
        );
        panel_review_commentLayout.setVerticalGroup(
            panel_review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_review_commentLayout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(panel_review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_review_commentLayout.createSequentialGroup()
                        .addComponent(review_comment_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(review_comment_b_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(review_comment_b_1))
                    .addComponent(jScrollPane28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout review_commentLayout = new javax.swing.GroupLayout(review_comment.getContentPane());
        review_comment.getContentPane().setLayout(review_commentLayout);
        review_commentLayout.setHorizontalGroup(
            review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 527, Short.MAX_VALUE)
            .addComponent(panel_review_comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        review_commentLayout.setVerticalGroup(
            review_commentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
            .addComponent(panel_review_comment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        panel_main.setName("panel_main"); // NOI18N

        jTabbedPane1.setFont(resourceMap.getFont("jTabbedPane1.font")); // NOI18N
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        panel_home.setName("panel_home"); // NOI18N

        home_tf_0.setName("home_tf_0"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        home_l_0.setName("home_l_0"); // NOI18N
        home_l_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_l_0MouseClicked(evt);
            }
        });
        home_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                home_l_0ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(home_l_0);

        home_b_0.setText(resourceMap.getString("home_b_0.text")); // NOI18N
        home_b_0.setName("home_b_0"); // NOI18N
        home_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_b_0ActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        home_l_1.setName("home_l_1"); // NOI18N
        home_l_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_l_1MouseClicked(evt);
            }
        });
        home_l_1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                home_l_1ValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(home_l_1);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        home_l_2.setName("home_l_2"); // NOI18N
        home_l_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_l_2MouseClicked(evt);
            }
        });
        home_l_2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                home_l_2ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(home_l_2);

        javax.swing.GroupLayout panel_homeLayout = new javax.swing.GroupLayout(panel_home);
        panel_home.setLayout(panel_homeLayout);
        panel_homeLayout.setHorizontalGroup(
            panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_homeLayout.createSequentialGroup()
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_homeLayout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(home_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(home_b_0))
                    .addGroup(panel_homeLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panel_homeLayout.setVerticalGroup(
            panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_homeLayout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home_b_0))
                .addGap(77, 77, 77)
                .addGroup(panel_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_home.TabConstraints.tabTitle"), panel_home); // NOI18N

        panel_search.setName("panel_search"); // NOI18N

        search_tf_0.setName("search_tf_0"); // NOI18N

        search_tf_8.setName("search_tf_8"); // NOI18N

        search_tf_1.setName("search_tf_1"); // NOI18N
        search_tf_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_tf_1ActionPerformed(evt);
            }
        });

        search_tf_2.setName("search_tf_2"); // NOI18N
        search_tf_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_tf_2ActionPerformed(evt);
            }
        });

        search_tf_9.setName("search_tf_9"); // NOI18N

        search_b_0.setText(resourceMap.getString("search_b_0.text")); // NOI18N
        search_b_0.setName("search_b_0"); // NOI18N
        search_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_b_0ActionPerformed(evt);
            }
        });

        search_b_1.setText(resourceMap.getString("search_b_1.text")); // NOI18N
        search_b_1.setName("search_b_1"); // NOI18N
        search_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_b_1ActionPerformed(evt);
            }
        });

        jScrollPane14.setName("jScrollPane14"); // NOI18N

        search_l_0.setName("search_l_0"); // NOI18N
        search_l_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_l_0MouseClicked(evt);
            }
        });
        search_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                search_l_0ValueChanged(evt);
            }
        });
        jScrollPane14.setViewportView(search_l_0);

        search_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Cuisine", "American", "Breakfast", "Canadian", "Chinese", "Coffee", "Deli", "French", "German", "Italian", "Japanese", "Mexican", "Seafood", "Tapas", "Thai", "Vegetarian", "Other" }));
        search_dm_0.setName("search_dm_0"); // NOI18N

        search_dm_1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Rating", "1", "2", "3", "4", "5" }));
        search_dm_1.setName("search_dm_1"); // NOI18N

        search_dm_2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        search_dm_2.setName("search_dm_2"); // NOI18N

        search_tf_3.setName("search_tf_3"); // NOI18N

        search_dm_3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PM", "AM" }));
        search_dm_3.setName("search_dm_3"); // NOI18N

        search_tf_4.setName("search_tf_4"); // NOI18N

        search_tf_5.setName("search_tf_5"); // NOI18N

        search_tf_6.setName("search_tf_6"); // NOI18N

        search_tf_7.setName("search_tf_7"); // NOI18N

        search_dm_4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Payment", "Credit Card", "Debit Card", "Cash" }));
        search_dm_4.setName("search_dm_4"); // NOI18N

        javax.swing.GroupLayout panel_searchLayout = new javax.swing.GroupLayout(panel_search);
        panel_search.setLayout(panel_searchLayout);
        panel_searchLayout.setHorizontalGroup(
            panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_searchLayout.createSequentialGroup()
                .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_searchLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_searchLayout.createSequentialGroup()
                                .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(search_tf_0, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(search_dm_0, 0, 140, Short.MAX_VALUE)
                                    .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(search_dm_4, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(search_tf_8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                                .addGap(68, 68, 68))
                            .addGroup(panel_searchLayout.createSequentialGroup()
                                .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(search_tf_5, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                    .addComponent(search_tf_2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(search_dm_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_searchLayout.createSequentialGroup()
                                        .addComponent(search_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(search_dm_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(search_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(search_tf_9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(search_dm_1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(search_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(search_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(search_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(search_b_0))
                        .addGap(24, 24, 24))
                    .addGroup(panel_searchLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, 89)
                .addComponent(search_b_1)
                .addGap(130, 130, 130))
        );
        panel_searchLayout.setVerticalGroup(
            panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_searchLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_searchLayout.createSequentialGroup()
                        .addComponent(search_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_dm_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_dm_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(search_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_searchLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(search_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(search_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(search_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search_dm_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search_b_0))))
                .addGap(103, 103, 103)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_searchLayout.createSequentialGroup()
                .addContainerGap(399, Short.MAX_VALUE)
                .addComponent(search_b_1)
                .addGap(97, 97, 97))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_search.TabConstraints.tabTitle"), panel_search); // NOI18N

        panel_add.setName("panel_add"); // NOI18N

        add_tf_11.setName("add_tf_11"); // NOI18N
        add_tf_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tf_11ActionPerformed(evt);
            }
        });

        add_b_1.setText(resourceMap.getString("add_b_1.text")); // NOI18N
        add_b_1.setName("add_b_1"); // NOI18N
        add_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_b_1ActionPerformed(evt);
            }
        });

        jScrollPane15.setName("jScrollPane15"); // NOI18N

        add_ta_0.setColumns(20);
        add_ta_0.setRows(5);
        add_ta_0.setName("add_ta_0"); // NOI18N
        jScrollPane15.setViewportView(add_ta_0);

        jScrollPane16.setName("jScrollPane16"); // NOI18N

        add_ta_1.setColumns(20);
        add_ta_1.setRows(5);
        add_ta_1.setName("add_ta_1"); // NOI18N
        jScrollPane16.setViewportView(add_ta_1);

        add_b_3.setText(resourceMap.getString("add_b_3.text")); // NOI18N
        add_b_3.setName("add_b_3"); // NOI18N
        add_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_b_3ActionPerformed(evt);
            }
        });

        add_b_2.setText(resourceMap.getString("add_b_2.text")); // NOI18N
        add_b_2.setName("add_b_2"); // NOI18N
        add_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_b_2ActionPerformed(evt);
            }
        });

        add_tf_0.setName("add_tf_0"); // NOI18N

        add_tf_1.setName("add_tf_1"); // NOI18N
        add_tf_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tf_1ActionPerformed(evt);
            }
        });

        add_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Cuisine", "American", "Breakfast", "Canadian", "Chinese", "Coffee", "Deli", "French", "German", "Italian", "Japanese", "Mexican", "Seafood", "Tapas", "Thai", "Vegetarian", "Other" }));
        add_dm_0.setName("add_dm_0"); // NOI18N

        add_tf_5.setName("add_tf_5"); // NOI18N

        add_dm_2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PM", "AM" }));
        add_dm_2.setName("add_dm_2"); // NOI18N

        add_tf_4.setName("add_tf_4"); // NOI18N

        add_dm_1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        add_dm_1.setName("add_dm_1"); // NOI18N

        add_tf_3.setName("add_tf_3"); // NOI18N
        add_tf_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tf_3ActionPerformed(evt);
            }
        });

        add_tf_6.setName("add_tf_6"); // NOI18N

        add_tf_7.setName("add_tf_7"); // NOI18N

        add_tf_9.setName("add_tf_9"); // NOI18N

        add_dm_3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Payment", "Credit Card", "Debit Card", "Cash" }));
        add_dm_3.setName("add_dm_3"); // NOI18N

        add_tf_10.setName("add_tf_10"); // NOI18N

        add_tf_8.setName("add_tf_8"); // NOI18N

        add_tf_2.setName("add_tf_2"); // NOI18N

        add_b_0.setText(resourceMap.getString("add_b_0.text")); // NOI18N
        add_b_0.setName("add_b_0"); // NOI18N
        add_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_b_0ActionPerformed(evt);
            }
        });

        panel_photo_preview.setName("panel_photo_preview"); // NOI18N

        javax.swing.GroupLayout panel_photo_previewLayout = new javax.swing.GroupLayout(panel_photo_preview);
        panel_photo_preview.setLayout(panel_photo_previewLayout);
        panel_photo_previewLayout.setHorizontalGroup(
            panel_photo_previewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        panel_photo_previewLayout.setVerticalGroup(
            panel_photo_previewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_addLayout = new javax.swing.GroupLayout(panel_add);
        panel_add.setLayout(panel_addLayout);
        panel_addLayout.setHorizontalGroup(
            panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_addLayout.createSequentialGroup()
                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_addLayout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addComponent(add_b_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add_b_3))
                    .addGroup(panel_addLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_addLayout.createSequentialGroup()
                                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_addLayout.createSequentialGroup()
                                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(add_tf_0, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                            .addComponent(add_dm_0, 0, 145, Short.MAX_VALUE)
                                            .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(add_dm_3, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(add_tf_9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)))
                                        .addGap(68, 68, 68))
                                    .addGroup(panel_addLayout.createSequentialGroup()
                                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(add_tf_6, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                            .addComponent(add_tf_3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(add_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panel_addLayout.createSequentialGroup()
                                                .addComponent(add_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(add_dm_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(add_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(add_tf_10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(add_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(add_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(add_tf_2)
                                            .addComponent(add_tf_1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))
                                    .addComponent(add_b_0)))
                            .addGroup(panel_addLayout.createSequentialGroup()
                                .addComponent(add_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(add_b_1)))))
                .addGap(26, 26, 26)
                .addComponent(panel_photo_preview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        panel_addLayout.setVerticalGroup(
            panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_addLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_addLayout.createSequentialGroup()
                        .addComponent(add_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_dm_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(add_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_addLayout.createSequentialGroup()
                        .addComponent(add_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(add_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(add_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(add_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add_dm_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_b_0))))
                .addGap(76, 76, 76)
                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_b_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(panel_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_b_3)
                    .addComponent(add_b_2))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_addLayout.createSequentialGroup()
                .addContainerGap(264, Short.MAX_VALUE)
                .addComponent(panel_photo_preview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_add.TabConstraints.tabTitle"), panel_add); // NOI18N

        panel_r1_restaurant.setName("panel_r1_restaurant"); // NOI18N

        r1_rest_tf_7.setText(resourceMap.getString("r1_rest_tf_7.text")); // NOI18N
        r1_rest_tf_7.setName("r1_rest_tf_7"); // NOI18N
        r1_rest_tf_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_tf_7ActionPerformed(evt);
            }
        });

        r1_rest_tf_4.setText(resourceMap.getString("r1_rest_tf_4.text")); // NOI18N
        r1_rest_tf_4.setName("r1_rest_tf_4"); // NOI18N

        r1_rest_tf_8.setName("r1_rest_tf_8"); // NOI18N
        r1_rest_tf_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_tf_8ActionPerformed(evt);
            }
        });

        r1_rest_tf_9.setName("r1_rest_tf_9"); // NOI18N

        jScrollPane11.setName("jScrollPane11"); // NOI18N

        r1_rest_ta_0.setColumns(20);
        r1_rest_ta_0.setRows(5);
        r1_rest_ta_0.setText(resourceMap.getString("r1_rest_ta_0.text")); // NOI18N
        r1_rest_ta_0.setName("r1_rest_ta_0"); // NOI18N
        jScrollPane11.setViewportView(r1_rest_ta_0);

        r1_rest_tf_2.setText(resourceMap.getString("r1_rest_tf_2.text")); // NOI18N
        r1_rest_tf_2.setName("r1_rest_tf_2"); // NOI18N

        r1_rest_tf_0.setText(resourceMap.getString("r1_rest_tf_0.text")); // NOI18N
        r1_rest_tf_0.setName("r1_rest_tf_0"); // NOI18N
        r1_rest_tf_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_tf_0ActionPerformed(evt);
            }
        });

        r1_rest_tf_1.setText(resourceMap.getString("r1_rest_tf_1.text")); // NOI18N
        r1_rest_tf_1.setName("r1_rest_tf_1"); // NOI18N

        jScrollPane12.setName("jScrollPane12"); // NOI18N

        r1_rest_ta_1.setColumns(20);
        r1_rest_ta_1.setRows(5);
        r1_rest_ta_1.setName("r1_rest_ta_1"); // NOI18N
        jScrollPane12.setViewportView(r1_rest_ta_1);

        jScrollPane13.setName("jScrollPane13"); // NOI18N

        r1_rest_ta_2.setColumns(20);
        r1_rest_ta_2.setRows(5);
        r1_rest_ta_2.setName("r1_rest_ta_2"); // NOI18N
        jScrollPane13.setViewportView(r1_rest_ta_2);

        r1_rest_b_4.setText(resourceMap.getString("r1_rest_b_4.text")); // NOI18N
        r1_rest_b_4.setName("r1_rest_b_4"); // NOI18N
        r1_rest_b_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_4ActionPerformed(evt);
            }
        });

        r1_rest_b_5.setText(resourceMap.getString("r1_rest_b_5.text")); // NOI18N
        r1_rest_b_5.setName("r1_rest_b_5"); // NOI18N
        r1_rest_b_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_5ActionPerformed(evt);
            }
        });

        r1_rest_b_3.setText(resourceMap.getString("r1_rest_b_3.text")); // NOI18N
        r1_rest_b_3.setName("r1_rest_b_3"); // NOI18N
        r1_rest_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_3ActionPerformed(evt);
            }
        });

        r1_rest_b_1.setText(resourceMap.getString("r1_rest_b_1.text")); // NOI18N
        r1_rest_b_1.setName("r1_rest_b_1"); // NOI18N
        r1_rest_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_1ActionPerformed(evt);
            }
        });

        r1_rest_b_2.setText(resourceMap.getString("r1_rest_b_2.text")); // NOI18N
        r1_rest_b_2.setName("r1_rest_b_2"); // NOI18N
        r1_rest_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_2ActionPerformed(evt);
            }
        });

        r1_rest_b_0.setText(resourceMap.getString("r1_rest_b_0.text")); // NOI18N
        r1_rest_b_0.setName("r1_rest_b_0"); // NOI18N
        r1_rest_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_b_0ActionPerformed(evt);
            }
        });

        r1_rest_tf_11.setName("r1_rest_tf_11"); // NOI18N

        r1_rest_tf_13.setName("r1_rest_tf_13"); // NOI18N

        r1_rest_tf_3.setText(resourceMap.getString("r1_rest_tf_3.text")); // NOI18N
        r1_rest_tf_3.setName("r1_rest_tf_3"); // NOI18N

        r1_rest_tf_5.setText(resourceMap.getString("r1_rest_tf_5.text")); // NOI18N
        r1_rest_tf_5.setName("r1_rest_tf_5"); // NOI18N
        r1_rest_tf_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1_rest_tf_5ActionPerformed(evt);
            }
        });

        r1_rest_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        r1_rest_dm_0.setName("r1_rest_dm_0"); // NOI18N

        r1_rest_tf_6.setText(resourceMap.getString("r1_rest_tf_6.text")); // NOI18N
        r1_rest_tf_6.setName("r1_rest_tf_6"); // NOI18N

        r1_rest_dm_1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PM", "AM" }));
        r1_rest_dm_1.setName("r1_rest_dm_1"); // NOI18N

        r1_rest_tf_12.setName("r1_rest_tf_12"); // NOI18N

        r1_rest_tf_14.setName("r1_rest_tf_14"); // NOI18N

        r1_rest_tf_10.setName("r1_rest_tf_10"); // NOI18N

        panel_R1_photo.setName("panel_R1_photo"); // NOI18N

        javax.swing.GroupLayout panel_R1_photoLayout = new javax.swing.GroupLayout(panel_R1_photo);
        panel_R1_photo.setLayout(panel_R1_photoLayout);
        panel_R1_photoLayout.setHorizontalGroup(
            panel_R1_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        panel_R1_photoLayout.setVerticalGroup(
            panel_R1_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_r1_restaurantLayout = new javax.swing.GroupLayout(panel_r1_restaurant);
        panel_r1_restaurant.setLayout(panel_r1_restaurantLayout);
        panel_r1_restaurantLayout.setHorizontalGroup(
            panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r1_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(r1_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r1_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addComponent(r1_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r1_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addComponent(r1_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r1_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r1_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r1_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(r1_rest_b_0, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                                .addComponent(r1_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r1_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)
                        .addComponent(panel_R1_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(r1_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(486, 486, 486)
                        .addComponent(r1_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(r1_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(r1_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_r1_restaurantLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(r1_rest_b_1)
                                .addGap(6, 6, 6)
                                .addComponent(r1_rest_b_2)
                                .addGap(153, 153, 153)
                                .addComponent(r1_rest_b_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r1_rest_b_4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_r1_restaurantLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(r1_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1_rest_b_5)
                            .addComponent(r1_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        panel_r1_restaurantLayout.setVerticalGroup(
            panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(r1_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_b_0))
                        .addGap(8, 8, 8)
                        .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r1_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panel_R1_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r1_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r1_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r1_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r1_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r1_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r1_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r1_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r1_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r1_rest_b_4)
                        .addComponent(r1_rest_b_5))
                    .addComponent(r1_rest_b_1)
                    .addComponent(r1_rest_b_2)
                    .addComponent(r1_rest_b_3)))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_r1_restaurant.TabConstraints.tabTitle"), panel_r1_restaurant); // NOI18N

        panel_account.setName("panel_account"); // NOI18N

        acc_tf_0.setText(resourceMap.getString("acc_tf_0.text")); // NOI18N
        acc_tf_0.setName("acc_tf_0"); // NOI18N

        acc_tf_1.setText(resourceMap.getString("acc_tf_1.text")); // NOI18N
        acc_tf_1.setName("acc_tf_1"); // NOI18N
        acc_tf_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acc_tf_1ActionPerformed(evt);
            }
        });

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        acc_ta_0.setColumns(20);
        acc_ta_0.setRows(5);
        acc_ta_0.setText(resourceMap.getString("acc_ta_0.text")); // NOI18N
        acc_ta_0.setName("acc_ta_0"); // NOI18N
        jScrollPane4.setViewportView(acc_ta_0);

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        acc_l_0.setName("acc_l_0"); // NOI18N
        acc_l_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_l_0MouseClicked(evt);
            }
        });
        acc_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                acc_l_0ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(acc_l_0);

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        acc_l_1.setName("acc_l_1"); // NOI18N
        acc_l_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_l_1MouseClicked(evt);
            }
        });
        acc_l_1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                acc_l_1ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(acc_l_1);

        jScrollPane7.setName("jScrollPane7"); // NOI18N

        acc_l_2.setName("acc_l_2"); // NOI18N
        acc_l_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_l_2MouseClicked(evt);
            }
        });
        acc_l_2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                acc_l_2ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(acc_l_2);

        acc_b_0.setText(resourceMap.getString("acc_b_0.text")); // NOI18N
        acc_b_0.setName("acc_b_0"); // NOI18N
        acc_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acc_b_0ActionPerformed(evt);
            }
        });

        acc_b_1.setText(resourceMap.getString("acc_b_1.text")); // NOI18N
        acc_b_1.setName("acc_b_1"); // NOI18N
        acc_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acc_b_1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_accountLayout = new javax.swing.GroupLayout(panel_account);
        panel_account.setLayout(panel_accountLayout);
        panel_accountLayout.setHorizontalGroup(
            panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_accountLayout.createSequentialGroup()
                .addGroup(panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_accountLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_accountLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addGroup(panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_accountLayout.createSequentialGroup()
                                .addComponent(acc_b_0)
                                .addGap(49, 49, 49)
                                .addComponent(acc_b_1))
                            .addGroup(panel_accountLayout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(acc_tf_1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(acc_tf_0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panel_accountLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        panel_accountLayout.setVerticalGroup(
            panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_accountLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(acc_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acc_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acc_b_0)
                    .addComponent(acc_b_1))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addGroup(panel_accountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_account.TabConstraints.tabTitle"), panel_account); // NOI18N

        panel_about.setName("panel_about"); // NOI18N

        javax.swing.GroupLayout panel_aboutLayout = new javax.swing.GroupLayout(panel_about);
        panel_about.setLayout(panel_aboutLayout);
        panel_aboutLayout.setHorizontalGroup(
            panel_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
        );
        panel_aboutLayout.setVerticalGroup(
            panel_aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_about.TabConstraints.tabTitle"), panel_about); // NOI18N

        panel_admin.setName("panel_admin"); // NOI18N

        jScrollPane8.setName("jScrollPane8"); // NOI18N

        admin_l_0.setName("admin_l_0"); // NOI18N
        admin_l_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_l_0MouseClicked(evt);
            }
        });
        admin_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_l_0ValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(admin_l_0);

        jScrollPane9.setName("jScrollPane9"); // NOI18N

        admin_l_1.setName("admin_l_1"); // NOI18N
        admin_l_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_l_1MouseClicked(evt);
            }
        });
        admin_l_1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_l_1ValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(admin_l_1);

        jScrollPane10.setName("jScrollPane10"); // NOI18N

        admin_l_2.setName("admin_l_2"); // NOI18N
        admin_l_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_l_2MouseClicked(evt);
            }
        });
        admin_l_2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_l_2ValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(admin_l_2);

        admin_tf_0.setText(resourceMap.getString("admin_tf_0.text")); // NOI18N
        admin_tf_0.setName("admin_tf_0"); // NOI18N

        admin_tf_2.setText(resourceMap.getString("admin_tf_2.text")); // NOI18N
        admin_tf_2.setName("admin_tf_2"); // NOI18N

        admin_tf_1.setText(resourceMap.getString("admin_tf_1.text")); // NOI18N
        admin_tf_1.setName("admin_tf_1"); // NOI18N

        admin_tf_3.setText(resourceMap.getString("admin_tf_3.text")); // NOI18N
        admin_tf_3.setName("admin_tf_3"); // NOI18N
        admin_tf_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_tf_3ActionPerformed(evt);
            }
        });

        admin_tf_4.setName("admin_tf_4"); // NOI18N

        admin_b_0.setText(resourceMap.getString("admin_b_0.text")); // NOI18N
        admin_b_0.setName("admin_b_0"); // NOI18N
        admin_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_b_0ActionPerformed(evt);
            }
        });

        jScrollPane26.setName("jScrollPane26"); // NOI18N

        admin_l_3.setName("admin_l_3"); // NOI18N
        admin_l_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_l_3MouseClicked(evt);
            }
        });
        admin_l_3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_l_3ValueChanged(evt);
            }
        });
        jScrollPane26.setViewportView(admin_l_3);

        javax.swing.GroupLayout panel_adminLayout = new javax.swing.GroupLayout(panel_admin);
        panel_admin.setLayout(panel_adminLayout);
        panel_adminLayout.setHorizontalGroup(
            panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(admin_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155)
                .addComponent(admin_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(admin_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155)
                .addComponent(admin_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(admin_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(admin_b_0))
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel_adminLayout.setVerticalGroup(
            panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adminLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_adminLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(admin_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(admin_b_0))
                .addGap(95, 95, 95)
                .addGroup(panel_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane26, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_admin.TabConstraints.tabTitle"), panel_admin); // NOI18N

        panel_u1_user.setName("panel_u1_user"); // NOI18N

        u1_user_tf_0.setText(resourceMap.getString("u1_user_tf_0.text")); // NOI18N
        u1_user_tf_0.setName("u1_user_tf_0"); // NOI18N

        u1_user_tf_1.setText(resourceMap.getString("u1_user_tf_1.text")); // NOI18N
        u1_user_tf_1.setName("u1_user_tf_1"); // NOI18N

        u1_user_tf_2.setText(resourceMap.getString("u1_user_tf_2.text")); // NOI18N
        u1_user_tf_2.setName("u1_user_tf_2"); // NOI18N

        u1_user_b_0.setText(resourceMap.getString("u1_user_b_0.text")); // NOI18N
        u1_user_b_0.setName("u1_user_b_0"); // NOI18N
        u1_user_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u1_user_b_0ActionPerformed(evt);
            }
        });

        u1_user_b_1.setText(resourceMap.getString("u1_user_b_1.text")); // NOI18N
        u1_user_b_1.setName("u1_user_b_1"); // NOI18N
        u1_user_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u1_user_b_1ActionPerformed(evt);
            }
        });

        u1_user_b_2.setText(resourceMap.getString("u1_user_b_2.text")); // NOI18N
        u1_user_b_2.setName("u1_user_b_2"); // NOI18N
        u1_user_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u1_user_b_2ActionPerformed(evt);
            }
        });

        jScrollPane17.setName("jScrollPane17"); // NOI18N

        u1_user_l_0.setName("u1_user_l_0"); // NOI18N
        u1_user_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                u1_user_l_0ValueChanged(evt);
            }
        });
        jScrollPane17.setViewportView(u1_user_l_0);

        u1_user_b_3.setText(resourceMap.getString("u1_user_b_3.text")); // NOI18N
        u1_user_b_3.setName("u1_user_b_3"); // NOI18N

        javax.swing.GroupLayout panel_u1_userLayout = new javax.swing.GroupLayout(panel_u1_user);
        panel_u1_user.setLayout(panel_u1_userLayout);
        panel_u1_userLayout.setHorizontalGroup(
            panel_u1_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u1_userLayout.createSequentialGroup()
                .addGroup(panel_u1_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_u1_userLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(panel_u1_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(u1_user_tf_1)
                            .addComponent(u1_user_tf_2)
                            .addComponent(u1_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_u1_userLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(u1_user_b_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u1_user_b_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u1_user_b_2))
                    .addGroup(panel_u1_userLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_u1_userLayout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addComponent(u1_user_b_3)
                .addGap(325, 325, 325))
        );
        panel_u1_userLayout.setVerticalGroup(
            panel_u1_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u1_userLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(u1_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u1_user_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u1_user_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(panel_u1_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(u1_user_b_0)
                    .addComponent(u1_user_b_1)
                    .addComponent(u1_user_b_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(u1_user_b_3)
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_u1_user.TabConstraints.tabTitle"), panel_u1_user); // NOI18N

        panel_ads.setName("panel_ads"); // NOI18N

        ads_tf_0.setText(resourceMap.getString("ads_tf_0.text")); // NOI18N
        ads_tf_0.setName("ads_tf_0"); // NOI18N

        ads_tf_1.setText(resourceMap.getString("ads_tf_1.text")); // NOI18N
        ads_tf_1.setName("ads_tf_1"); // NOI18N

        ads_tf_2.setText(resourceMap.getString("ads_tf_2.text")); // NOI18N
        ads_tf_2.setName("ads_tf_2"); // NOI18N

        ads_tf_3.setText(resourceMap.getString("ads_tf_3.text")); // NOI18N
        ads_tf_3.setName("ads_tf_3"); // NOI18N

        ads_tf_6.setText(resourceMap.getString("ads_tf_6.text")); // NOI18N
        ads_tf_6.setName("ads_tf_6"); // NOI18N
        ads_tf_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_tf_6ActionPerformed(evt);
            }
        });

        ads_tf_8.setText(resourceMap.getString("ads_tf_8.text")); // NOI18N
        ads_tf_8.setName("ads_tf_8"); // NOI18N

        ads_tf_10.setText(resourceMap.getString("ads_tf_10.text")); // NOI18N
        ads_tf_10.setName("ads_tf_10"); // NOI18N

        ads_b_1.setText(resourceMap.getString("ads_b_1.text")); // NOI18N
        ads_b_1.setName("ads_b_1"); // NOI18N
        ads_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_b_1ActionPerformed(evt);
            }
        });

        ads_b_2.setText(resourceMap.getString("ads_b_2.text")); // NOI18N
        ads_b_2.setName("ads_b_2"); // NOI18N
        ads_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_b_2ActionPerformed(evt);
            }
        });

        ads_b_3.setText(resourceMap.getString("ads_b_3.text")); // NOI18N
        ads_b_3.setName("ads_b_3"); // NOI18N
        ads_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_b_3ActionPerformed(evt);
            }
        });

        ads_tf_4.setText(resourceMap.getString("ads_tf_4.text")); // NOI18N
        ads_tf_4.setName("ads_tf_4"); // NOI18N

        ads_b_0.setText(resourceMap.getString("ads_b_0.text")); // NOI18N
        ads_b_0.setName("ads_b_0"); // NOI18N
        ads_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_b_0ActionPerformed(evt);
            }
        });

        ads_tf_5.setText(resourceMap.getString("ads_tf_5.text")); // NOI18N
        ads_tf_5.setName("ads_tf_5"); // NOI18N

        ads_tf_7.setText(resourceMap.getString("ads_tf_7.text")); // NOI18N
        ads_tf_7.setName("ads_tf_7"); // NOI18N

        ads_tf_9.setText(resourceMap.getString("ads_tf_9.text")); // NOI18N
        ads_tf_9.setName("ads_tf_9"); // NOI18N

        ads_tf_11.setText(resourceMap.getString("ads_tf_11.text")); // NOI18N
        ads_tf_11.setName("ads_tf_11"); // NOI18N

        ads_b_4.setText(resourceMap.getString("ads_b_4.text")); // NOI18N
        ads_b_4.setName("ads_b_4"); // NOI18N
        ads_b_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ads_b_4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_adsLayout = new javax.swing.GroupLayout(panel_ads);
        panel_ads.setLayout(panel_adsLayout);
        panel_adsLayout.setHorizontalGroup(
            panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adsLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(ads_tf_1)
                    .addComponent(ads_tf_2)
                    .addComponent(ads_tf_3)
                    .addComponent(ads_tf_0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(339, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_adsLayout.createSequentialGroup()
                .addContainerGap(237, Short.MAX_VALUE)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ads_b_4)
                    .addGroup(panel_adsLayout.createSequentialGroup()
                        .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ads_tf_8)
                            .addComponent(ads_tf_10)
                            .addComponent(ads_tf_6)
                            .addComponent(ads_tf_4, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ads_b_0)
                            .addComponent(ads_b_1)
                            .addComponent(ads_b_2)
                            .addComponent(ads_b_3))
                        .addGap(83, 83, 83)
                        .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ads_tf_11)
                            .addComponent(ads_tf_9)
                            .addComponent(ads_tf_7)
                            .addComponent(ads_tf_5, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))))
                .addGap(91, 91, 91))
        );
        panel_adsLayout.setVerticalGroup(
            panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_adsLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(ads_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(ads_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ads_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ads_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ads_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ads_b_0)
                    .addComponent(ads_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ads_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ads_b_1)
                    .addComponent(ads_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ads_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ads_b_2)
                    .addComponent(ads_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_adsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ads_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ads_b_3)
                    .addComponent(ads_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(ads_b_4)
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("panel_ads.TabConstraints.tabTitle"), panel_ads); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        panel_r2_restaurant.setName("panel_r2_restaurant"); // NOI18N

        r2_rest_tf_7.setText(resourceMap.getString("r2_rest_tf_7.text")); // NOI18N
        r2_rest_tf_7.setName("r2_rest_tf_7"); // NOI18N
        r2_rest_tf_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_tf_7ActionPerformed(evt);
            }
        });

        r2_rest_tf_4.setText(resourceMap.getString("r2_rest_tf_4.text")); // NOI18N
        r2_rest_tf_4.setName("r2_rest_tf_4"); // NOI18N

        r2_rest_tf_8.setName("r2_rest_tf_8"); // NOI18N
        r2_rest_tf_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_tf_8ActionPerformed(evt);
            }
        });

        r2_rest_tf_9.setText(resourceMap.getString("r2_rest_tf_9.text")); // NOI18N
        r2_rest_tf_9.setName("r2_rest_tf_9"); // NOI18N

        jScrollPane18.setName("jScrollPane18"); // NOI18N

        r2_rest_ta_0.setColumns(20);
        r2_rest_ta_0.setRows(5);
        r2_rest_ta_0.setText(resourceMap.getString("r2_rest_ta_0.text")); // NOI18N
        r2_rest_ta_0.setName("r2_rest_ta_0"); // NOI18N
        jScrollPane18.setViewportView(r2_rest_ta_0);

        r2_rest_tf_2.setText(resourceMap.getString("r2_rest_tf_2.text")); // NOI18N
        r2_rest_tf_2.setName("r2_rest_tf_2"); // NOI18N

        r2_rest_tf_0.setText(resourceMap.getString("r2_rest_tf_0.text")); // NOI18N
        r2_rest_tf_0.setName("r2_rest_tf_0"); // NOI18N
        r2_rest_tf_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_tf_0ActionPerformed(evt);
            }
        });

        r2_rest_tf_1.setText(resourceMap.getString("r2_rest_tf_1.text")); // NOI18N
        r2_rest_tf_1.setName("r2_rest_tf_1"); // NOI18N

        jScrollPane19.setName("jScrollPane19"); // NOI18N

        r2_rest_ta_1.setColumns(20);
        r2_rest_ta_1.setRows(5);
        r2_rest_ta_1.setText(resourceMap.getString("r2_rest_ta_1.text")); // NOI18N
        r2_rest_ta_1.setName("r2_rest_ta_1"); // NOI18N
        jScrollPane19.setViewportView(r2_rest_ta_1);

        jScrollPane20.setName("jScrollPane20"); // NOI18N

        r2_rest_ta_2.setColumns(20);
        r2_rest_ta_2.setRows(5);
        r2_rest_ta_2.setText(resourceMap.getString("r2_rest_ta_2.text")); // NOI18N
        r2_rest_ta_2.setName("r2_rest_ta_2"); // NOI18N
        jScrollPane20.setViewportView(r2_rest_ta_2);

        r2_rest_b_4.setText(resourceMap.getString("r2_rest_b_4.text")); // NOI18N
        r2_rest_b_4.setName("r2_rest_b_4"); // NOI18N
        r2_rest_b_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_4ActionPerformed(evt);
            }
        });

        r2_rest_b_5.setText(resourceMap.getString("r2_rest_b_5.text")); // NOI18N
        r2_rest_b_5.setName("r2_rest_b_5"); // NOI18N
        r2_rest_b_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_5ActionPerformed(evt);
            }
        });

        r2_rest_b_3.setText(resourceMap.getString("r2_rest_b_3.text")); // NOI18N
        r2_rest_b_3.setName("r2_rest_b_3"); // NOI18N
        r2_rest_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_3ActionPerformed(evt);
            }
        });

        r2_rest_b_1.setText(resourceMap.getString("r2_rest_b_1.text")); // NOI18N
        r2_rest_b_1.setName("r2_rest_b_1"); // NOI18N
        r2_rest_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_1ActionPerformed(evt);
            }
        });

        r2_rest_b_2.setText(resourceMap.getString("r2_rest_b_2.text")); // NOI18N
        r2_rest_b_2.setName("r2_rest_b_2"); // NOI18N
        r2_rest_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_2ActionPerformed(evt);
            }
        });

        r2_rest_b_0.setText(resourceMap.getString("r2_rest_b_0.text")); // NOI18N
        r2_rest_b_0.setName("r2_rest_b_0"); // NOI18N
        r2_rest_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_b_0ActionPerformed(evt);
            }
        });

        r2_rest_tf_11.setText(resourceMap.getString("r2_rest_tf_11.text")); // NOI18N
        r2_rest_tf_11.setName("r2_rest_tf_11"); // NOI18N

        r2_rest_tf_13.setText(resourceMap.getString("r2_rest_tf_13.text")); // NOI18N
        r2_rest_tf_13.setName("r2_rest_tf_13"); // NOI18N

        r2_rest_tf_3.setText(resourceMap.getString("r2_rest_tf_3.text")); // NOI18N
        r2_rest_tf_3.setName("r2_rest_tf_3"); // NOI18N

        r2_rest_tf_5.setText(resourceMap.getString("r2_rest_tf_5.text")); // NOI18N
        r2_rest_tf_5.setName("r2_rest_tf_5"); // NOI18N
        r2_rest_tf_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r2_rest_tf_5ActionPerformed(evt);
            }
        });

        r2_rest_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        r2_rest_dm_0.setName("r2_rest_dm_0"); // NOI18N

        r2_rest_tf_6.setText(resourceMap.getString("r2_rest_tf_6.text")); // NOI18N
        r2_rest_tf_6.setName("r2_rest_tf_6"); // NOI18N

        r2_rest_dm_1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PM", "AM" }));
        r2_rest_dm_1.setName("r2_rest_dm_1"); // NOI18N

        r2_rest_tf_12.setText(resourceMap.getString("r2_rest_tf_12.text")); // NOI18N
        r2_rest_tf_12.setName("r2_rest_tf_12"); // NOI18N

        r2_rest_tf_14.setText(resourceMap.getString("r2_rest_tf_14.text")); // NOI18N
        r2_rest_tf_14.setName("r2_rest_tf_14"); // NOI18N

        r2_rest_tf_10.setText(resourceMap.getString("r2_rest_tf_10.text")); // NOI18N
        r2_rest_tf_10.setName("r2_rest_tf_10"); // NOI18N

        panel_R2_photo.setName("panel_R2_photo"); // NOI18N

        javax.swing.GroupLayout panel_R2_photoLayout = new javax.swing.GroupLayout(panel_R2_photo);
        panel_R2_photo.setLayout(panel_R2_photoLayout);
        panel_R2_photoLayout.setHorizontalGroup(
            panel_R2_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        panel_R2_photoLayout.setVerticalGroup(
            panel_R2_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_r2_restaurantLayout = new javax.swing.GroupLayout(panel_r2_restaurant);
        panel_r2_restaurant.setLayout(panel_r2_restaurantLayout);
        panel_r2_restaurantLayout.setHorizontalGroup(
            panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r2_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(r2_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r2_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addComponent(r2_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r2_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addComponent(r2_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r2_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r2_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r2_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(r2_rest_b_0, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addComponent(r2_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r2_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)
                        .addComponent(panel_R2_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(r2_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(486, 486, 486)
                        .addComponent(r2_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(r2_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(r2_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(r2_rest_b_1)
                                .addGap(6, 6, 6)
                                .addComponent(r2_rest_b_2)
                                .addGap(153, 153, 153)
                                .addComponent(r2_rest_b_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r2_rest_b_4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_r2_restaurantLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(r2_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r2_rest_b_5)
                            .addComponent(r2_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        panel_r2_restaurantLayout.setVerticalGroup(
            panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r2_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(r2_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r2_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r2_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_b_0))
                        .addGap(8, 8, 8)
                        .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r2_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r2_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(panel_R2_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r2_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r2_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r2_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r2_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r2_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r2_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r2_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r2_rest_b_1)
                    .addComponent(r2_rest_b_2)
                    .addComponent(r2_rest_b_3)
                    .addGroup(panel_r2_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r2_rest_b_4)
                        .addComponent(r2_rest_b_5))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_r2_restaurant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_r2_restaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        panel_r3_restaurant.setName("panel_r3_restaurant"); // NOI18N

        r3_rest_tf_7.setName("r3_rest_tf_7"); // NOI18N
        r3_rest_tf_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_tf_7ActionPerformed(evt);
            }
        });

        r3_rest_tf_4.setName("r3_rest_tf_4"); // NOI18N

        r3_rest_tf_8.setName("r3_rest_tf_8"); // NOI18N
        r3_rest_tf_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_tf_8ActionPerformed(evt);
            }
        });

        r3_rest_tf_9.setName("r3_rest_tf_9"); // NOI18N

        jScrollPane21.setName("jScrollPane21"); // NOI18N

        r3_rest_ta_0.setColumns(20);
        r3_rest_ta_0.setRows(5);
        r3_rest_ta_0.setName("r3_rest_ta_0"); // NOI18N
        jScrollPane21.setViewportView(r3_rest_ta_0);

        r3_rest_tf_2.setName("r3_rest_tf_2"); // NOI18N

        r3_rest_tf_0.setName("r3_rest_tf_0"); // NOI18N
        r3_rest_tf_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_tf_0ActionPerformed(evt);
            }
        });

        r3_rest_tf_1.setName("r3_rest_tf_1"); // NOI18N

        jScrollPane22.setName("jScrollPane22"); // NOI18N

        r3_rest_ta_1.setColumns(20);
        r3_rest_ta_1.setRows(5);
        r3_rest_ta_1.setName("r3_rest_ta_1"); // NOI18N
        jScrollPane22.setViewportView(r3_rest_ta_1);

        jScrollPane23.setName("jScrollPane23"); // NOI18N

        r3_rest_ta_2.setColumns(20);
        r3_rest_ta_2.setRows(5);
        r3_rest_ta_2.setName("r3_rest_ta_2"); // NOI18N
        jScrollPane23.setViewportView(r3_rest_ta_2);

        r3_rest_b_4.setText(resourceMap.getString("r3_rest_b_4.text")); // NOI18N
        r3_rest_b_4.setName("r3_rest_b_4"); // NOI18N
        r3_rest_b_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_4ActionPerformed(evt);
            }
        });

        r3_rest_b_5.setText(resourceMap.getString("r3_rest_b_5.text")); // NOI18N
        r3_rest_b_5.setName("r3_rest_b_5"); // NOI18N
        r3_rest_b_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_5ActionPerformed(evt);
            }
        });

        r3_rest_b_3.setText(resourceMap.getString("r3_rest_b_3.text")); // NOI18N
        r3_rest_b_3.setName("r3_rest_b_3"); // NOI18N
        r3_rest_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_3ActionPerformed(evt);
            }
        });

        r3_rest_b_1.setText(resourceMap.getString("r3_rest_b_1.text")); // NOI18N
        r3_rest_b_1.setName("r3_rest_b_1"); // NOI18N
        r3_rest_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_1ActionPerformed(evt);
            }
        });

        r3_rest_b_2.setText(resourceMap.getString("r3_rest_b_2.text")); // NOI18N
        r3_rest_b_2.setName("r3_rest_b_2"); // NOI18N
        r3_rest_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_2ActionPerformed(evt);
            }
        });

        r3_rest_b_0.setText(resourceMap.getString("r3_rest_b_0.text")); // NOI18N
        r3_rest_b_0.setName("r3_rest_b_0"); // NOI18N
        r3_rest_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_b_0ActionPerformed(evt);
            }
        });

        r3_rest_tf_11.setName("r3_rest_tf_11"); // NOI18N

        r3_rest_tf_13.setName("r3_rest_tf_13"); // NOI18N

        r3_rest_tf_3.setName("r3_rest_tf_3"); // NOI18N

        r3_rest_tf_5.setName("r3_rest_tf_5"); // NOI18N
        r3_rest_tf_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3_rest_tf_5ActionPerformed(evt);
            }
        });

        r3_rest_dm_0.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));
        r3_rest_dm_0.setName("r3_rest_dm_0"); // NOI18N

        r3_rest_tf_6.setName("r3_rest_tf_6"); // NOI18N

        r3_rest_dm_1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PM", "AM" }));
        r3_rest_dm_1.setName("r3_rest_dm_1"); // NOI18N

        r3_rest_tf_12.setName("r3_rest_tf_12"); // NOI18N

        r3_rest_tf_14.setName("r3_rest_tf_14"); // NOI18N

        r3_rest_tf_10.setName("r3_rest_tf_10"); // NOI18N

        panel_R3_photo.setName("panel_R3_photo"); // NOI18N

        javax.swing.GroupLayout panel_R3_photoLayout = new javax.swing.GroupLayout(panel_R3_photo);
        panel_R3_photo.setLayout(panel_R3_photoLayout);
        panel_R3_photoLayout.setHorizontalGroup(
            panel_R3_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        panel_R3_photoLayout.setVerticalGroup(
            panel_R3_photoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel_r3_restaurantLayout = new javax.swing.GroupLayout(panel_r3_restaurant);
        panel_r3_restaurant.setLayout(panel_r3_restaurantLayout);
        panel_r3_restaurantLayout.setHorizontalGroup(
            panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r3_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)
                                .addComponent(r3_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(r3_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addComponent(r3_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r3_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addComponent(r3_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r3_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r3_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(r3_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(r3_rest_b_0, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addComponent(r3_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)
                                .addComponent(r3_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addComponent(panel_R3_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(r3_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(486, 486, 486)
                        .addComponent(r3_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(r3_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(r3_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(r3_rest_b_1)
                                .addGap(6, 6, 6)
                                .addComponent(r3_rest_b_2)
                                .addGap(153, 153, 153)
                                .addComponent(r3_rest_b_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(r3_rest_b_4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_r3_restaurantLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(r3_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3_rest_b_5)
                            .addComponent(r3_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(39, 39, 39))
        );
        panel_r3_restaurantLayout.setVerticalGroup(
            panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3_rest_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(r3_rest_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3_rest_tf_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_tf_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3_rest_tf_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_dm_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_tf_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_dm_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_b_0))
                        .addGap(8, 8, 8)
                        .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3_rest_tf_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r3_rest_tf_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panel_R3_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3_rest_tf_9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r3_rest_tf_10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r3_rest_tf_11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r3_rest_tf_12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(r3_rest_tf_13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_r3_restaurantLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(r3_rest_tf_14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r3_rest_b_1)
                    .addComponent(r3_rest_b_2)
                    .addComponent(r3_rest_b_3)
                    .addGroup(panel_r3_restaurantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r3_rest_b_4)
                        .addComponent(r3_rest_b_5))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_r3_restaurant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_r3_restaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        panel_u2_user.setName("panel_u2_user"); // NOI18N

        u2_user_tf_0.setName("u2_user_tf_0"); // NOI18N

        u2_user_tf_1.setName("u2_user_tf_1"); // NOI18N

        u2_user_tf_2.setName("u2_user_tf_2"); // NOI18N

        u2_user_b_0.setText(resourceMap.getString("u2_user_b_0.text")); // NOI18N
        u2_user_b_0.setName("u2_user_b_0"); // NOI18N
        u2_user_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u2_user_b_0ActionPerformed(evt);
            }
        });

        u2_user_b_1.setText(resourceMap.getString("u2_user_b_1.text")); // NOI18N
        u2_user_b_1.setName("u2_user_b_1"); // NOI18N
        u2_user_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u2_user_b_1ActionPerformed(evt);
            }
        });

        u2_user_b_2.setText(resourceMap.getString("u2_user_b_2.text")); // NOI18N
        u2_user_b_2.setName("u2_user_b_2"); // NOI18N
        u2_user_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u2_user_b_2ActionPerformed(evt);
            }
        });

        jScrollPane24.setName("jScrollPane24"); // NOI18N

        u2_user_l_0.setName("u2_user_l_0"); // NOI18N
        u2_user_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                u2_user_l_0ValueChanged(evt);
            }
        });
        jScrollPane24.setViewportView(u2_user_l_0);

        u2_user_b_3.setText(resourceMap.getString("u2_user_b_3.text")); // NOI18N
        u2_user_b_3.setName("u2_user_b_3"); // NOI18N

        javax.swing.GroupLayout panel_u2_userLayout = new javax.swing.GroupLayout(panel_u2_user);
        panel_u2_user.setLayout(panel_u2_userLayout);
        panel_u2_userLayout.setHorizontalGroup(
            panel_u2_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u2_userLayout.createSequentialGroup()
                .addGroup(panel_u2_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_u2_userLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(panel_u2_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(u2_user_tf_1)
                            .addComponent(u2_user_tf_2)
                            .addComponent(u2_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_u2_userLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(u2_user_b_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u2_user_b_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u2_user_b_2))
                    .addGroup(panel_u2_userLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_u2_userLayout.createSequentialGroup()
                .addContainerGap(329, Short.MAX_VALUE)
                .addComponent(u2_user_b_3)
                .addGap(327, 327, 327))
        );
        panel_u2_userLayout.setVerticalGroup(
            panel_u2_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u2_userLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(u2_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u2_user_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u2_user_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(panel_u2_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(u2_user_b_0)
                    .addComponent(u2_user_b_1)
                    .addComponent(u2_user_b_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jScrollPane24, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(u2_user_b_3)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_u2_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_u2_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        panel_u3_user.setName("panel_u3_user"); // NOI18N

        u3_user_tf_0.setName("u3_user_tf_0"); // NOI18N

        u3_user_tf_1.setName("u3_user_tf_1"); // NOI18N

        u3_user_tf_2.setName("u3_user_tf_2"); // NOI18N

        u3_user_b_0.setText(resourceMap.getString("u3_user_b_0.text")); // NOI18N
        u3_user_b_0.setName("u3_user_b_0"); // NOI18N
        u3_user_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u3_user_b_0ActionPerformed(evt);
            }
        });

        u3_user_b_1.setText(resourceMap.getString("u3_user_b_1.text")); // NOI18N
        u3_user_b_1.setName("u3_user_b_1"); // NOI18N
        u3_user_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u3_user_b_1ActionPerformed(evt);
            }
        });

        u3_user_b_2.setText(resourceMap.getString("u3_user_b_2.text")); // NOI18N
        u3_user_b_2.setName("u3_user_b_2"); // NOI18N
        u3_user_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u3_user_b_2ActionPerformed(evt);
            }
        });

        jScrollPane25.setName("jScrollPane25"); // NOI18N

        u3_user_l_0.setName("u3_user_l_0"); // NOI18N
        u3_user_l_0.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                u3_user_l_0ValueChanged(evt);
            }
        });
        jScrollPane25.setViewportView(u3_user_l_0);

        u4_user_b_3.setText(resourceMap.getString("u4_user_b_3.text")); // NOI18N
        u4_user_b_3.setName("u4_user_b_3"); // NOI18N
        u4_user_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                u4_user_b_3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_u3_userLayout = new javax.swing.GroupLayout(panel_u3_user);
        panel_u3_user.setLayout(panel_u3_userLayout);
        panel_u3_userLayout.setHorizontalGroup(
            panel_u3_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u3_userLayout.createSequentialGroup()
                .addGroup(panel_u3_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_u3_userLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(panel_u3_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(u3_user_tf_1)
                            .addComponent(u3_user_tf_2)
                            .addComponent(u3_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_u3_userLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(u3_user_b_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u3_user_b_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(u3_user_b_2))
                    .addGroup(panel_u3_userLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_u3_userLayout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addComponent(u4_user_b_3)
                .addGap(317, 317, 317))
        );
        panel_u3_userLayout.setVerticalGroup(
            panel_u3_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_u3_userLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(u3_user_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u3_user_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(u3_user_tf_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(panel_u3_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(u3_user_b_0)
                    .addComponent(u3_user_b_1)
                    .addComponent(u3_user_b_2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                .addComponent(jScrollPane25, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(u4_user_b_3)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_u3_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 519, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panel_u3_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        panel_ad_1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_ad_1.setName("panel_ad_1"); // NOI18N
        panel_ad_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel_ad_1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_ad_1Layout = new javax.swing.GroupLayout(panel_ad_1);
        panel_ad_1.setLayout(panel_ad_1Layout);
        panel_ad_1Layout.setHorizontalGroup(
            panel_ad_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        panel_ad_1Layout.setVerticalGroup(
            panel_ad_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 101, Short.MAX_VALUE)
        );

        panel_ad_2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_ad_2.setName("panel_ad_2"); // NOI18N
        panel_ad_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel_ad_2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_ad_2Layout = new javax.swing.GroupLayout(panel_ad_2);
        panel_ad_2.setLayout(panel_ad_2Layout);
        panel_ad_2Layout.setHorizontalGroup(
            panel_ad_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );
        panel_ad_2Layout.setVerticalGroup(
            panel_ad_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        panel_ad_3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_ad_3.setName("panel_ad_3"); // NOI18N
        panel_ad_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel_ad_3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_ad_3Layout = new javax.swing.GroupLayout(panel_ad_3);
        panel_ad_3.setLayout(panel_ad_3Layout);
        panel_ad_3Layout.setHorizontalGroup(
            panel_ad_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );
        panel_ad_3Layout.setVerticalGroup(
            panel_ad_3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        panel_ad_4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_ad_4.setName("panel_ad_4"); // NOI18N
        panel_ad_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panel_ad_4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panel_ad_4Layout = new javax.swing.GroupLayout(panel_ad_4);
        panel_ad_4.setLayout(panel_ad_4Layout);
        panel_ad_4Layout.setHorizontalGroup(
            panel_ad_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );
        panel_ad_4Layout.setVerticalGroup(
            panel_ad_4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        main_tf_0.setName("main_tf_0"); // NOI18N

        main_tf_1.setName("main_tf_1"); // NOI18N

        main_b_0.setText(resourceMap.getString("main_b_0.text")); // NOI18N
        main_b_0.setName("main_b_0"); // NOI18N
        main_b_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_b_0ActionPerformed(evt);
            }
        });

        main_b_1.setText(resourceMap.getString("main_b_1.text")); // NOI18N
        main_b_1.setName("main_b_1"); // NOI18N
        main_b_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_b_1ActionPerformed(evt);
            }
        });

        main_b_2.setText(resourceMap.getString("main_b_2.text")); // NOI18N
        main_b_2.setName("main_b_2"); // NOI18N
        main_b_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_b_2ActionPerformed(evt);
            }
        });

        main_b_3.setText(resourceMap.getString("main_b_3.text")); // NOI18N
        main_b_3.setName("main_b_3"); // NOI18N
        main_b_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_b_3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_mainLayout = new javax.swing.GroupLayout(panel_main);
        panel_main.setLayout(panel_mainLayout);
        panel_mainLayout.setHorizontalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createSequentialGroup()
                        .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(main_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(main_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(main_b_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(main_b_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_mainLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panel_ad_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(panel_ad_3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(panel_ad_2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(panel_ad_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panel_mainLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(main_b_3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(main_b_2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18))))
        );
        panel_mainLayout.setVerticalGroup(
            panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_mainLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(main_tf_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(main_b_0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(main_tf_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(main_b_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(panel_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_mainLayout.createSequentialGroup()
                        .addComponent(panel_ad_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panel_ad_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panel_ad_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panel_ad_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(main_b_2)
                        .addGap(18, 18, 18)
                        .addComponent(main_b_3)
                        .addGap(21, 21, 21))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void home_l_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_l_0MouseClicked
        // Open new restaurant Tab for Top Rated (home tab)
        // by David Klein
        int list_pos = home_l_0.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(home_l_0_pop[list_pos]);

}//GEN-LAST:event_home_l_0MouseClicked

    private void home_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_home_l_0ValueChanged
      
}//GEN-LAST:event_home_l_0ValueChanged

    private void home_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_b_0ActionPerformed
        listMod_search_l_0.clear();
        RestaurantSearchResultSet = SearchControl.quickSearchRestaurant(home_tf_0.getText());

        if (RestaurantSearchResultSet == null) {
            JOptionPane.showMessageDialog(null, "Sorry, there was no restaurant found that matches your search term. Please try another one.");
        } else {
            home_tf_0.setText("");
            jTabbedPane1.setSelectedIndex(1);
            for (int i = 0; i < RestaurantSearchResultSet.length; i++) {
                listMod_search_l_0.add(i, RestaurantSearchResultSet[i].getName());
            }
        }

    }//GEN-LAST:event_home_b_0ActionPerformed

    private void home_l_1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_home_l_1ValueChanged
 
}//GEN-LAST:event_home_l_1ValueChanged

    private void home_l_2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_home_l_2ValueChanged

}//GEN-LAST:event_home_l_2ValueChanged

    private void search_tf_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_tf_1ActionPerformed
  
}//GEN-LAST:event_search_tf_1ActionPerformed

    private void search_tf_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_tf_2ActionPerformed
       
}//GEN-LAST:event_search_tf_2ActionPerformed

    private void search_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_b_0ActionPerformed
        // TODO add your handling code here:
        // Clear All Button
        // by David Klein
        UI_Handler handler = new UI_Handler();

        for (int i = 0; i < 10; i++) {
            handler.search_set_tf(i, "");
        }
        for (int i = 0; i < 5; i++) {
            handler.search_set_dm(i, 0);
        }
        listMod_search_l_0.clear();

}//GEN-LAST:event_search_b_0ActionPerformed

    private void search_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_b_1ActionPerformed
        // TODO add your handling code here
        // by David Klein
        Hashtable newSearch = new Hashtable();

        if (!(search_tf_0.getText().equals(""))) {
            newSearch.put("name", search_tf_0.getText());
        }
        if (!(search_tf_1.getText().equals(""))) {           
                try{
                if(search_tf_1.getText() != null){
                x = Integer.parseInt(search_tf_1.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for the phone number");
                    x = 0;
                    return;
                }
            newSearch.put("phone", search_tf_1.getText());
        }
        if (search_dm_0.getSelectedIndex() != 0) {
            newSearch.put("cuisine", id_to_cuisine(search_dm_0.getSelectedIndex()));
        }
        if (search_dm_1.getSelectedIndex() != 0) {
            newSearch.put("averagerating", search_dm_1.getSelectedIndex());
        }
        if (!(search_tf_2.getText().equals(""))) {
            try{
                if(search_tf_2.getText() != null){
                x = Integer.parseInt(search_tf_2.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for opening hours");
                    return;
                }
                if(x < 0 || x > 12 ){
                    JOptionPane.showMessageDialog(null, "Please use only numbers betweem 0 and 12 for opening hours");
                    x = 0;
                    return;
                }
            newSearch.put("openhours", search_tf_2.getText());
        }
        if (!(search_tf_3.getText().equals(""))) {
            try{
                if(search_tf_3.getText() != null){
                x = Integer.parseInt(search_tf_3.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for opening hours");
                    return;
                }
                if(x < 0 || x > 12 ){
                    JOptionPane.showMessageDialog(null, "Please use only numbers betweem 0 and 12 for opening hours");
                    return;
                }
            newSearch.put("closehours", search_tf_3.getText());
        }
        if (!(search_tf_4.getText().equals(""))) {
            try{
                if(search_tf_4.getText() != null){
                int x = Integer.parseInt(search_tf_4.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for the max cost");
                    return;
                }
            newSearch.put("cost", Float.valueOf(search_tf_4.getText()));
        }
        if (!(search_tf_5.getText().equals(""))) {
            try{
                if(search_tf_5.getText() != null){
                int x = Integer.parseInt(search_tf_5.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for the street number");
                    return;
                }
            newSearch.put("streetnumber", Integer.parseInt(search_tf_5.getText()));
        }
        if (!(search_tf_6.getText().equals(""))) {
            newSearch.put("streetname", search_tf_6.getText());
        }
        if (!(search_tf_7.getText().equals(""))) {
            newSearch.put("province", search_tf_7.getText());
        }
        if (!(search_tf_8.getText().equals(""))) {
            newSearch.put("country", search_tf_8.getText());
        }
        if (!(search_tf_9.getText().equals(""))) {
            newSearch.put("postalcode", search_tf_9.getText());
        }
        if (search_dm_4.getSelectedIndex() != 0) {
            newSearch.put("payment", id_to_payment(search_dm_4.getSelectedIndex()));
        }
        RestaurantSearchResultSet = SearchControl.searchRestaurant(newSearch);

        listMod_search_l_0.clear();

        if (RestaurantSearchResultSet == null) {
            JOptionPane.showMessageDialog(null, "Sorry, there was no restaurant found that matches your search term. Please try another one.");
        } else {
            for (int i = 0; i < RestaurantSearchResultSet.length; i++) {
                listMod_search_l_0.add(i, RestaurantSearchResultSet[i].getName());
            }
        }
}//GEN-LAST:event_search_b_1ActionPerformed

    private void search_l_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search_l_0MouseClicked
        // TODO add your handling code here:
        // Create new Restaurant Tab (from search tab)
        // by David Klein
        int list_pos = search_l_0.getSelectedIndex();
        if (list_pos != -1)  open_new_restaurant_tab(RestaurantSearchResultSet[list_pos]);
}//GEN-LAST:event_search_l_0MouseClicked

    private void search_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_search_l_0ValueChanged
     
}//GEN-LAST:event_search_l_0ValueChanged

    private void add_tf_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tf_11ActionPerformed

}//GEN-LAST:event_add_tf_11ActionPerformed

    private void add_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_b_1ActionPerformed
        // Open File Chooser
        int returnVal = fc.showOpenDialog(GUI_Layout.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File filename = fc.getSelectedFile();
            //This is where a real application would open the file.
            //jTextField2.setText(filename.getPath());
        } else {
            // an error has occured
        }
}//GEN-LAST:event_add_b_1ActionPerformed

    private void add_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_b_3ActionPerformed

        add_restaurant();
}//GEN-LAST:event_add_b_3ActionPerformed

    private void add_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_b_2ActionPerformed
        UI_Handler handler = new UI_Handler();

        for (int i = 0; i < 12; i++) {
            handler.add_set_tf(i, "");
        }
        for (int i = 0; i < 4; i++) {
            handler.add_set_dm(i, 0);
        }
        for (int i = 0; i < 2; i++) {
            handler.add_set_ta(i, "");
        }
}//GEN-LAST:event_add_b_2ActionPerformed

    private void add_tf_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tf_1ActionPerformed
       
}//GEN-LAST:event_add_tf_1ActionPerformed

    private void add_tf_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tf_3ActionPerformed
        
}//GEN-LAST:event_add_tf_3ActionPerformed

    private void r1_rest_tf_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_tf_7ActionPerformed
        
}//GEN-LAST:event_r1_rest_tf_7ActionPerformed

    private void r1_rest_tf_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_tf_8ActionPerformed
        
}//GEN-LAST:event_r1_rest_tf_8ActionPerformed

    private void r1_rest_tf_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_tf_0ActionPerformed
       
}//GEN-LAST:event_r1_rest_tf_0ActionPerformed

    private void r1_rest_b_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_4ActionPerformed
        //Previous button for restaurant 1
        if (r1_ratings == null) return;
        r1_index = r1_index - 2;
        if (r1_index < 1) r1_index = 0;

            r1_rest_ta_1.setText(null);
            r1_rest_tf_12.setText(null);
            r1_rest_tf_11.setText(null);
            r1_rest_ta_2.setText(null);
            r1_rest_tf_14.setText(null);
            r1_rest_tf_13.setText(null);

            if (r1_ratings.length > r1_index && r1_ratings[r1_index] != null) {
                r1_rest_tf_11.setText(RatingControl.getUsername(r1_ratings[r1_index].getUserID()) + "");
                r1_rest_tf_12.setText(r1_ratings[r1_index].getRating() + " stars");
                r1_rest_ta_1.setText(r1_ratings[r1_index].getComment());
            }
            if (r1_ratings.length > r1_index + 1 && r1_ratings[r1_index+1] != null) {
                r1_rest_tf_13.setText(RatingControl.getUsername(r1_ratings[r1_index+1].getUserID()) + "");
                r1_rest_tf_14.setText(r1_ratings[r1_index+1].getRating() + " stars");
                r1_rest_ta_2.setText(r1_ratings[r1_index+1].getComment());
            }
}//GEN-LAST:event_r1_rest_b_4ActionPerformed

    private void r1_rest_b_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_5ActionPerformed
        //Next button for restaurant 1
        if (r1_ratings == null) return;
             r1_index = r1_index + 2;

            r1_rest_ta_1.setText(null);
            r1_rest_tf_12.setText(null);
            r1_rest_tf_11.setText(null);
            r1_rest_ta_2.setText(null);
            r1_rest_tf_14.setText(null);
            r1_rest_tf_13.setText(null);

            if (r1_ratings.length > r1_index && r1_ratings[r1_index] != null) {
                r1_rest_tf_11.setText(RatingControl.getUsername(r1_ratings[r1_index].getUserID()) + "");
                r1_rest_tf_12.setText(r1_ratings[r1_index].getRating() + " stars");
                r1_rest_ta_1.setText(r1_ratings[r1_index].getComment());
            }
            if (r1_ratings.length > r1_index + 1 && r1_ratings[r1_index+1] != null) {
                r1_rest_tf_13.setText(RatingControl.getUsername(r1_ratings[r1_index+1].getUserID()) + "");
                r1_rest_tf_14.setText(r1_ratings[r1_index+1].getRating() + " stars");
                r1_rest_ta_2.setText(r1_ratings[r1_index+1].getComment());
            }
}//GEN-LAST:event_r1_rest_b_5ActionPerformed

    private void r1_rest_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_3ActionPerformed
        // Button Add Rating Restaurant 1
        // by David Klei
        if (loggedUser == null) {
            JOptionPane.showMessageDialog(null, "You must log in to rate a restaurant!");
            return;
        }

        System.out.println(loggedUser.getDisplayName());
        System.out.println(restaurant1.getName());
        newRating = RatingControl.newRating(loggedUser.getUserID(), restaurant1.getRestaurantID());
        int ratingValue = newRating.getRating();

        add_comment_dm_0.setSelectedIndex(ratingValue);
        add_comment_ta_0.setText(newRating.getComment());
        if (newRating.getRatingID() == -1) {
            add_comment_b_0.setText("Submit Rating");
        } else {
            add_comment_b_0.setText("Change Rating");
        }
        add_comment.setSize(541, 247);
        add_comment.setResizable(false);
        add_comment.setLocationRelativeTo(this.panel_main);
        add_comment.setVisible(true);
        
        // Refresh content
        populate_home_lists(loggedUser.getUserID());
        r1_ratings = RatingControl.getRestaurantRatings(restaurant1.getRestaurantID());
        restaurant1 = SearchControl.getRestaurant(restaurant1.getRestaurantID());
        r1_rest_tf_9.setText(restaurant1.getAverageRating() +"");
        r1_rest_tf_10.setText(restaurant1.getNumberOfRatings() + "");
}//GEN-LAST:event_r1_rest_b_3ActionPerformed

    private void r1_rest_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_1ActionPerformed

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r1_ratings[0].setFlagged(true);
        controller.changeRatingFlagged(r1_ratings[0]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 1 has been flagged for the admin to review.");
}//GEN-LAST:event_r1_rest_b_1ActionPerformed

    private void r1_rest_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_2ActionPerformed

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r1_ratings[1].setFlagged(true);
        controller.changeRatingFlagged(r1_ratings[1]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 2 has been flagged for the admin to review.");
}//GEN-LAST:event_r1_rest_b_2ActionPerformed

    private void r1_rest_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_b_0ActionPerformed
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(R1_Webaddress);
}//GEN-LAST:event_r1_rest_b_0ActionPerformed

    private void r1_rest_tf_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1_rest_tf_5ActionPerformed
        
}//GEN-LAST:event_r1_rest_tf_5ActionPerformed

    private void acc_tf_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acc_tf_1ActionPerformed
      
}//GEN-LAST:event_acc_tf_1ActionPerformed

    private void acc_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_acc_l_0ValueChanged
     
}//GEN-LAST:event_acc_l_0ValueChanged

    private void acc_l_1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_acc_l_1ValueChanged
        
}//GEN-LAST:event_acc_l_1ValueChanged

    private void acc_l_2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_acc_l_2ValueChanged
        
}//GEN-LAST:event_acc_l_2ValueChanged

    private void acc_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acc_b_0ActionPerformed
        // TODO add your handling code here:
        // Accout Tab: Button Save Changes;
        // by David Klein
        String result = UserControl.changeData(loggedUser, acc_tf_0.getText(), acc_tf_1.getText());
        JOptionPane.showMessageDialog(panel_main, result);
//        acc_tf_0.setText("");
//        acc_tf_1.setText("");
}//GEN-LAST:event_acc_b_0ActionPerformed

    private void acc_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acc_b_1ActionPerformed
        // TODO add your handling code here:
        // Change Password
        // By David Klein
        change_password.setSize(541, 247);
        change_password.setResizable(false);
        change_password.setLocationRelativeTo(this.panel_main);
        change_password.setVisible(true);
}//GEN-LAST:event_acc_b_1ActionPerformed

    private void admin_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_l_0ValueChanged
        
}//GEN-LAST:event_admin_l_0ValueChanged

    private void admin_l_1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_l_1ValueChanged
        
}//GEN-LAST:event_admin_l_1ValueChanged

    private void admin_l_2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_l_2ValueChanged
     
}//GEN-LAST:event_admin_l_2ValueChanged

    private void admin_tf_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_tf_3ActionPerformed
        
}//GEN-LAST:event_admin_tf_3ActionPerformed

    private void admin_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_b_0ActionPerformed
        // User Search (Admin tab)
        // by David Klein
        UserSearchResultSet = SearchControl.searchUser(admin_tf_4.getText());
        System.out.println("Userset: " + UserSearchResultSet);
        if(UserSearchResultSet == null) {
            JOptionPane.showMessageDialog(panel_admin, "The user does not exist in the system. Please retry.");
        } else {
            if(UserSearchResultSet.length == 1) {
                open_new_user_tab(UserSearchResultSet[0]);
            } else {
                JOptionPane.showMessageDialog(panel_admin, "Please enter a unique e-mail address.");
            }
        }
}//GEN-LAST:event_admin_b_0ActionPerformed

    private void admin_l_3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_l_3ValueChanged
       
}//GEN-LAST:event_admin_l_3ValueChanged

    private void u1_user_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u1_user_b_0ActionPerformed
        if (user1.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u1_user, "User is already blocked.");
        } else {
            String result = UserControl.blockUser(user1);
            JOptionPane.showMessageDialog(add_comment, result);
        }
}//GEN-LAST:event_u1_user_b_0ActionPerformed

    private void u1_user_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u1_user_b_1ActionPerformed
        // TODO add your handling code here:
        if (!user1.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u1_user, "User is already unblocked.");
        } else {
            String result = UserControl.unblockUser(user1);
            JOptionPane.showMessageDialog(add_comment, result);
        }
}//GEN-LAST:event_u1_user_b_1ActionPerformed

    private void u1_user_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u1_user_b_2ActionPerformed
        // TODO add your handling code here:
        String result = UserControl.deleteUser(user1);
        JOptionPane.showMessageDialog(add_comment, result);
        if(result.equals("The user was successfully deleted.")) {
            // User Tab needs to be closed!!
            // Update of all user lists
        }
}//GEN-LAST:event_u1_user_b_2ActionPerformed

    private void u1_user_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_u1_user_l_0ValueChanged
        
}//GEN-LAST:event_u1_user_l_0ValueChanged

    private void ads_tf_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_tf_6ActionPerformed
       
}//GEN-LAST:event_ads_tf_6ActionPerformed

    private void ads_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_b_1ActionPerformed
        // TODO add your handling code here:
        // Open File Chooser
        int returnVal = fc.showOpenDialog(GUI_Layout.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File filename = fc.getSelectedFile();
            //This is where a real application would open the file.
            //jTextField2.setText(filename.getPath());
        } else {
            // an error has occured
        }
}//GEN-LAST:event_ads_b_1ActionPerformed

    private void ads_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_b_2ActionPerformed
        // TODO add your handling code here:
        // Open File Chooser
        int returnVal = fc.showOpenDialog(GUI_Layout.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File filename = fc.getSelectedFile();
            //This is where a real application would open the file.
            //jTextField2.setText(filename.getPath());
        } else {
            // an error has occured
        }
}//GEN-LAST:event_ads_b_2ActionPerformed

    private void ads_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_b_3ActionPerformed
        // TODO add your handling code here:
        // Open File Chooser
        int returnVal = fc.showOpenDialog(GUI_Layout.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File filename = fc.getSelectedFile();
            //This is where a real application would open the file.
            //jTextField2.setText(filename.getPath());
        } else {
            // an error has occured
        }
}//GEN-LAST:event_ads_b_3ActionPerformed

    private void ads_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_b_0ActionPerformed
        // TODO add your handling code here:
        // Open File Chooser
        int returnVal = fc.showOpenDialog(GUI_Layout.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File filename = fc.getSelectedFile();
            //This is where a real application would open the file.
            //jTextField2.setText(filename.getPath());
        } else {
            // an error has occured
        }
}//GEN-LAST:event_ads_b_0ActionPerformed

    private void ads_b_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ads_b_4ActionPerformed
        // TODO Change adds:

}//GEN-LAST:event_ads_b_4ActionPerformed

    private void r2_rest_tf_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_tf_7ActionPerformed
       
}//GEN-LAST:event_r2_rest_tf_7ActionPerformed

    private void r2_rest_tf_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_tf_8ActionPerformed
       
}//GEN-LAST:event_r2_rest_tf_8ActionPerformed

    private void r2_rest_tf_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_tf_0ActionPerformed
       
}//GEN-LAST:event_r2_rest_tf_0ActionPerformed

    private void r2_rest_b_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_4ActionPerformed
        if (r2_ratings == null) return;
        r2_index = r2_index - 2;
        if (r2_index < 1) r2_index = 0;

            r2_rest_ta_1.setText(null);
            r2_rest_tf_12.setText(null);
            r2_rest_tf_11.setText(null);
            r2_rest_ta_2.setText(null);
            r2_rest_tf_14.setText(null);
            r2_rest_tf_13.setText(null);

            if (r2_ratings.length > r2_index && r2_ratings[r2_index] != null) {
                r2_rest_tf_11.setText(RatingControl.getUsername(r2_ratings[r2_index].getUserID()) + "");
                r2_rest_tf_12.setText(r2_ratings[r2_index].getRating() + " stars");
                r2_rest_ta_1.setText(r2_ratings[r2_index].getComment());
            }
            if (r2_ratings.length > r2_index + 1 && r2_ratings[r2_index+1] != null) {
                r2_rest_tf_13.setText(RatingControl.getUsername(r2_ratings[r2_index+1].getUserID()) + "");
                r2_rest_tf_14.setText(r2_ratings[r2_index+1].getRating() + " stars");
                r2_rest_ta_2.setText(r2_ratings[r2_index+1].getComment());
            }
}//GEN-LAST:event_r2_rest_b_4ActionPerformed

    private void r2_rest_b_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_5ActionPerformed

        if (r2_ratings == null) return;
        r2_index = r2_index + 2;

            r2_rest_ta_1.setText(null);
            r2_rest_tf_12.setText(null);
            r2_rest_tf_11.setText(null);
            r2_rest_ta_2.setText(null);
            r2_rest_tf_14.setText(null);
            r2_rest_tf_13.setText(null);

            if (r2_ratings.length > r2_index && r2_ratings[r2_index] != null) {
                r2_rest_tf_11.setText(RatingControl.getUsername(r2_ratings[r2_index].getUserID()) + "");
                r2_rest_tf_12.setText(r2_ratings[r2_index].getRating() + " stars");
                r2_rest_ta_1.setText(r2_ratings[r2_index].getComment());
            }
            if (r2_ratings.length > r2_index + 1 && r2_ratings[r2_index+1] != null) {
                r2_rest_tf_13.setText(RatingControl.getUsername(r2_ratings[r2_index+1].getUserID()) + "");
                r2_rest_tf_14.setText(r2_ratings[r2_index+1].getRating() + " stars");
                r2_rest_ta_2.setText(r2_ratings[r2_index+1].getComment());
            }
}//GEN-LAST:event_r2_rest_b_5ActionPerformed

    private void r2_rest_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_3ActionPerformed
        // TODO add your handling code here:
        // Button Add Rating Restaurant 2
        // by David Klein
        newRating = RatingControl.newRating(loggedUser.getUserID(), restaurant2.getRestaurantID());
        int ratingValue = newRating.getRating();

        add_comment_dm_0.setSelectedIndex(ratingValue);
        add_comment_ta_0.setText(newRating.getComment());
        if (newRating.getRatingID() == -1) {
            add_comment_b_0.setText("Submit Rating");
        } else {
            add_comment_b_0.setText("Change Rating");
        }
        add_comment.setSize(541, 247);
        add_comment.setResizable(false);
        add_comment.setLocationRelativeTo(this.panel_main);
        add_comment.setVisible(true);

        populate_home_lists(loggedUser.getUserID());
        r2_ratings = RatingControl.getRestaurantRatings(restaurant2.getRestaurantID());
        restaurant2 = SearchControl.getRestaurant(restaurant2.getRestaurantID());
        r2_rest_tf_9.setText(restaurant2.getAverageRating() +"");
        r2_rest_tf_10.setText(restaurant2.getNumberOfRatings() + "");
}//GEN-LAST:event_r2_rest_b_3ActionPerformed

    private void r2_rest_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_1ActionPerformed

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r2_ratings[0].setFlagged(true);
        controller.changeRatingFlagged(r2_ratings[0]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 1 has been flagged for the admin to review.");
}//GEN-LAST:event_r2_rest_b_1ActionPerformed

    private void r2_rest_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_2ActionPerformed

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r2_ratings[1].setFlagged(true);
        controller.changeRatingFlagged(r2_ratings[1]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 2 has been flagged for the admin to review.");

}//GEN-LAST:event_r2_rest_b_2ActionPerformed

    private void r2_rest_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_b_0ActionPerformed
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(R2_Webaddress);
}//GEN-LAST:event_r2_rest_b_0ActionPerformed

    private void r2_rest_tf_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r2_rest_tf_5ActionPerformed
      
}//GEN-LAST:event_r2_rest_tf_5ActionPerformed

    private void r3_rest_tf_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_tf_7ActionPerformed
      
}//GEN-LAST:event_r3_rest_tf_7ActionPerformed

    private void r3_rest_tf_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_tf_8ActionPerformed
        
}//GEN-LAST:event_r3_rest_tf_8ActionPerformed

    private void r3_rest_tf_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_tf_0ActionPerformed
       
}//GEN-LAST:event_r3_rest_tf_0ActionPerformed

    private void r3_rest_b_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_4ActionPerformed
         if (r3_ratings == null) return;
        r3_index = r3_index - 2;
        if (r3_index < 1) r3_index = 0;

            r3_rest_ta_1.setText(null);
            r3_rest_tf_12.setText(null);
            r3_rest_tf_11.setText(null);
            r3_rest_ta_2.setText(null);
            r3_rest_tf_14.setText(null);
            r3_rest_tf_13.setText(null);

            if (r3_ratings.length > r3_index && r3_ratings[r3_index] != null) {
                r3_rest_tf_11.setText(RatingControl.getUsername(r3_ratings[r3_index].getUserID()) + "");
                r3_rest_tf_12.setText(r3_ratings[r3_index].getRating() + " stars");
                r3_rest_ta_1.setText(r3_ratings[r3_index].getComment());
            }
            if (r3_ratings.length > r3_index + 1 && r3_ratings[r3_index+1] != null) {
                r3_rest_tf_13.setText(RatingControl.getUsername(r3_ratings[r3_index+1].getUserID()) + "");
                r3_rest_tf_14.setText(r3_ratings[r3_index+1].getRating() + " stars");
                r3_rest_ta_2.setText(r3_ratings[r3_index+1].getComment());
            }
}//GEN-LAST:event_r3_rest_b_4ActionPerformed

    private void r3_rest_b_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_5ActionPerformed

        if (r3_ratings == null) return;
        r3_index = r3_index + 2;

            r3_rest_ta_1.setText(null);
            r3_rest_tf_12.setText(null);
            r3_rest_tf_11.setText(null);
            r3_rest_ta_2.setText(null);
            r3_rest_tf_14.setText(null);
            r3_rest_tf_13.setText(null);

            if (r3_ratings.length > r3_index && r3_ratings[r3_index] != null) {
                r3_rest_tf_11.setText(RatingControl.getUsername(r3_ratings[r3_index].getUserID()) + "");
                r3_rest_tf_12.setText(r3_ratings[r3_index].getRating() + " stars");
                r3_rest_ta_1.setText(r3_ratings[r3_index].getComment());
            }
            if (r3_ratings.length > r3_index + 1 && r3_ratings[r3_index+1] != null) {
                r3_rest_tf_13.setText(RatingControl.getUsername(r3_ratings[r3_index+1].getUserID()) + "");
                r3_rest_tf_14.setText(r3_ratings[r3_index+1].getRating() + " stars");
                r3_rest_ta_2.setText(r3_ratings[r3_index+1].getComment());
            }
}//GEN-LAST:event_r3_rest_b_5ActionPerformed

    private void r3_rest_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_3ActionPerformed
        // TODO add your handling code here:
        // Button Add Rating Restaurant 3
        // by David Klein
        newRating = RatingControl.newRating(loggedUser.getUserID(), restaurant3.getRestaurantID());
        int ratingValue = newRating.getRating();

        add_comment_dm_0.setSelectedIndex(ratingValue);
        add_comment_ta_0.setText(newRating.getComment());
        if (newRating.getRatingID() == -1) {
            add_comment_b_0.setText("Submit Rating");
        } else {
            add_comment_b_0.setText("Change Rating");
        }
        add_comment.setSize(541, 247);
        add_comment.setResizable(false);
        add_comment.setLocationRelativeTo(this.panel_main);
        add_comment.setVisible(true);

        populate_home_lists(loggedUser.getUserID());
        r3_ratings = RatingControl.getRestaurantRatings(restaurant3.getRestaurantID());
        restaurant3 = SearchControl.getRestaurant(restaurant3.getRestaurantID());
        r3_rest_tf_9.setText(restaurant3.getAverageRating() +"");
        r3_rest_tf_10.setText(restaurant3.getNumberOfRatings() + "");
}//GEN-LAST:event_r3_rest_b_3ActionPerformed

    private void r3_rest_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_1ActionPerformed
        // TODO add your handling code here:

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r3_ratings[0].setFlagged(true);
        controller.changeRatingFlagged(r3_ratings[0]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 1 has been flagged for the admin to review.");
}//GEN-LAST:event_r3_rest_b_1ActionPerformed

    private void r3_rest_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_2ActionPerformed

        DBRatingsControl controller;
        try
        {
        controller = new DBRatingsControl();
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Unable to flag:" + e);
            return;
        }
        r3_ratings[1].setFlagged(true);
        controller.changeRatingFlagged(r3_ratings[1]);
        JOptionPane.showMessageDialog(null, "Thank you, Comment 2 has been flagged for the admin to review.");
}//GEN-LAST:event_r3_rest_b_2ActionPerformed

    private void r3_rest_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_b_0ActionPerformed
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(R3_Webaddress);
}//GEN-LAST:event_r3_rest_b_0ActionPerformed

    private void r3_rest_tf_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3_rest_tf_5ActionPerformed
      
}//GEN-LAST:event_r3_rest_tf_5ActionPerformed

    private void u2_user_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u2_user_b_0ActionPerformed
        // TODO add your handling code here:
        // Button Block User
        // by David Klein
        if (user2.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u2_user, "User is already blocked.");
        } else {
            String result = UserControl.blockUser(user2);
            JOptionPane.showMessageDialog(add_comment, result);
        }
}//GEN-LAST:event_u2_user_b_0ActionPerformed

    private void u2_user_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u2_user_b_1ActionPerformed
        // TODO add your handling code here:
        // Button Unblock User
        // by David Klein
        if (!user2.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u3_user, "User is already unblocked.");
        } else {
            String result = UserControl.unblockUser(user2);
            JOptionPane.showMessageDialog(add_comment, result);
        }
}//GEN-LAST:event_u2_user_b_1ActionPerformed

    private void u2_user_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u2_user_b_2ActionPerformed
        // TODO add your handling code here:
        // Button Delete User 2
        // by David Klein
        String result = UserControl.deleteUser(user2);
        JOptionPane.showMessageDialog(null, result);
        if(result.equals("The user was successfully deleted.")) {
            // User Tab needs to be closed!!
            // Update of all user lists
        }
}//GEN-LAST:event_u2_user_b_2ActionPerformed

    private void u2_user_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_u2_user_l_0ValueChanged
        
}//GEN-LAST:event_u2_user_l_0ValueChanged

    private void u3_user_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u3_user_b_0ActionPerformed
        // TODO add your handling code here:
        // Button Block User 3
        // by David Klein
        if (user3.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u3_user, "User is already blocked.");
        } else {
            String result = UserControl.blockUser(user3);
            JOptionPane.showMessageDialog(panel_u3_user, result);
        }
}//GEN-LAST:event_u3_user_b_0ActionPerformed

    private void u3_user_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u3_user_b_1ActionPerformed
        // TODO add your handling code here:
        // Button Unblock User 3
        // by David Klein
        if (!user3.getBlocked()) {
            JOptionPane.showMessageDialog(panel_u3_user, "User is already unblocked.");
        } else {
            String result = UserControl.unblockUser(user3);
            JOptionPane.showMessageDialog(panel_u3_user, result);
        }
}//GEN-LAST:event_u3_user_b_1ActionPerformed

    private void u3_user_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u3_user_b_2ActionPerformed
        // TODO add your handling code here:
        // Button Delete User 3
        // by David Klein
        String result = UserControl.deleteUser(user3);
        JOptionPane.showMessageDialog(panel_u3_user, result);
        if(result.equals("The user was successfully deleted.")) {
            // User Tab needs to be closed!!
            // Update of all user lists
        }
}//GEN-LAST:event_u3_user_b_2ActionPerformed

    private void u3_user_l_0ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_u3_user_l_0ValueChanged
        
}//GEN-LAST:event_u3_user_l_0ValueChanged

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_jTabbedPane1MouseClicked

    private void panel_ad_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel_ad_1MouseClicked
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(ad1_web);
}//GEN-LAST:event_panel_ad_1MouseClicked

    private void panel_ad_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel_ad_2MouseClicked
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(ad2_web);
    }//GEN-LAST:event_panel_ad_2MouseClicked

    private void panel_ad_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel_ad_3MouseClicked
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(ad3_web);
}//GEN-LAST:event_panel_ad_3MouseClicked

    private void panel_ad_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panel_ad_4MouseClicked
        // TODO add your handling code here:
        open_web_url to_open = new open_web_url();
        to_open.open_url(ad4_web);
}//GEN-LAST:event_panel_ad_4MouseClicked

    private void main_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_b_0ActionPerformed

        //This. IS. LOGIN!
        //LOGIN by Pierre-Alexandre
        //First get info from the right e-mail and password fields
        UI_Handler handler = new UI_Handler();

        String email = handler.main_get_tf(0);
        String password = handler.main_get_tf(1);
        Login loger = new Login(this);
        String response = loger.login(email, password);
        if (response.equals("found")) {
            //Then we want to make the login window dissapear and the logout button appear
            main_tf_0.setText("");
            main_tf_1.setText("");
            main_tf_0.setEnabled(false);
            main_tf_1.setEnabled(false);
            main_b_0.setEnabled(false);
            main_b_1.setEnabled(false);
            main_b_2.setVisible(false);
            main_b_3.setVisible(true);
            main_b_3.setEnabled(true);

            // Guest to user or admin transition changes Layout of Tabs
            if (!loggedUser.getAdmin()) {
                modify_tabs(1);
                init_list_information(2);
            } else {
                modify_tabs(2);
                init_list_information(3);
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
        }
}//GEN-LAST:event_main_b_0ActionPerformed

    private void main_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_b_1ActionPerformed
        // TODO add Register code
        registration_form.setSize(541, 247);
        registration_form.setResizable(false);
        registration_form.setLocationRelativeTo(this.panel_main);
        registration_form.setVisible(true);
}//GEN-LAST:event_main_b_1ActionPerformed

    private void main_b_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_b_2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Please contact the admin (see 'About' tab) to reset your password.");
}//GEN-LAST:event_main_b_2ActionPerformed

    private void main_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_b_3ActionPerformed
        // TODO add your handling code here:
        //Logout by David Klein

        // user or admin to guest
        if (!loggedUser.getAdmin()) {
            modify_tabs(3);
             this.loggingOut = true;
            init_list_information(0);
        } else {
            modify_tabs(5);
            this.loggingOut = true;
            init_list_information(0);  
        }
        setLoggedUser(null);

        // Enable Login Buttons, Hide Logout Button
        main_tf_0.setEnabled(true);
        main_tf_1.setEnabled(true);
        main_b_0.setEnabled(true);
        main_b_1.setEnabled(true);
        main_b_3.setVisible(false);
        main_b_2.setVisible(true);


}//GEN-LAST:event_main_b_3ActionPerformed

    private void add_comment_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_comment_b_0ActionPerformed
        // TODO add your handling code here:
        // Button Submit Rating
        // by David Klein
        int ratingValue = add_comment_dm_0.getSelectedIndex();
        if ((ratingValue == 0) || (ratingValue == -1)) {
            JOptionPane.showMessageDialog(add_comment, "Please enter a rating!");
        } else {
            newRating.setComment(add_comment_ta_0.getText());
            newRating.setRating(ratingValue);
            String message = RatingControl.addRating(newRating);
            JOptionPane.showMessageDialog(add_comment, message);
            add_comment.setVisible(false);
            add_comment.dispose();
        }
    }//GEN-LAST:event_add_comment_b_0ActionPerformed

    private void change_password_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_change_password_b_0ActionPerformed
        // TODO add your handling code here:
        String result = UserControl.changeUserPassword(loggedUser, change_password_tf_0.getText(), change_password_tf_1.getText(), change_password_tf_2.getText());
        JOptionPane.showMessageDialog(change_password, result);
        if (result.equals("The password was successfully changed.")) {
            change_password_tf_0.setText("");
            change_password_tf_1.setText("");
            change_password_tf_2.setText("");
            change_password.setVisible(false);
            change_password.dispose();
        }
}//GEN-LAST:event_change_password_b_0ActionPerformed

    private void registration_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registration_b_0ActionPerformed
        // USER REGISTRATION
        UI_Handler handler = new UI_Handler();
        String username = handler.registration_form_get_tf(0);
        String email = handler.registration_form_get_tf(1);
        String password = handler.registration_form_get_tf(2);
        String password2 = handler.registration_form_get_tf(3);

        if (!password.equals(password2))
        {
            JOptionPane.showMessageDialog(registration_form,"Passwords do not match");
            return;
        }

        Register registerer = new Register(this);
        String response = registerer.register(email, password, username);
        if (response.equals("success")) {
            for(int i = 0; i < 4; i++) {
                handler.registration_form_set_tf(i, "");
            }
             JOptionPane.showMessageDialog(registration_form, "Congratulations! You are now part of Restaurantica");
            registration_form.setVisible(false);
            registration_form.dispose();
        } else {
            JOptionPane.showMessageDialog(registration_form, response);
        }
}//GEN-LAST:event_registration_b_0ActionPerformed

    private void u4_user_b_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_u4_user_b_3ActionPerformed
        //RESET THE PASSWORD


    }//GEN-LAST:event_u4_user_b_3ActionPerformed

    private void admin_l_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_l_0MouseClicked
        int list_pos = admin_l_0.getSelectedIndex();
        if (list_pos != -1 && admin_l_0_pop[list_pos] != null) open_new_restaurant_tab(admin_l_0_pop[list_pos]);
    }//GEN-LAST:event_admin_l_0MouseClicked

    private void admin_l_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_l_1MouseClicked
        int list_pos = admin_l_1.getSelectedIndex();
        if (list_pos != -1 && admin_l_1_pop[list_pos] != null) open_new_user_tab(admin_l_1_pop[list_pos]);
    }//GEN-LAST:event_admin_l_1MouseClicked

    private void admin_l_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_l_3MouseClicked
        int list_pos = admin_l_3.getSelectedIndex();
        if (list_pos != -1 && admin_l_3_pop[list_pos] != null) open_new_user_tab(admin_l_3_pop[list_pos]);
    }//GEN-LAST:event_admin_l_3MouseClicked

    private void admin_l_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_l_2MouseClicked
        // TODO add your handling code here:
        // List Click Flagged Ratings
        // by David Klein
        int list_pos = admin_l_2.getSelectedIndex();
        if (list_pos != -1)
        {
        reviewed_comment = admin_l_2_pop[list_pos];
        review_comment_ta_0.setText(admin_l_2_pop[list_pos].getComment());
        review_comment_dm_0.setSelectedIndex(admin_l_2_pop[list_pos].getRating());
        review_comment.setSize(541, 300);
        review_comment.setResizable(false);
        review_comment.setLocationRelativeTo(this.panel_main);
        review_comment.setVisible(true);
        }
    }//GEN-LAST:event_admin_l_2MouseClicked

    private void acc_l_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_l_2MouseClicked
         int list_pos = acc_l_2.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(acc_l_2_pop[list_pos]);
    }//GEN-LAST:event_acc_l_2MouseClicked

    private void acc_l_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_l_0MouseClicked
        int list_pos = acc_l_0.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(acc_l_0_pop[list_pos]);
    }//GEN-LAST:event_acc_l_0MouseClicked

    private void acc_l_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_l_1MouseClicked
         int list_pos = acc_l_1.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(acc_l_1_pop[list_pos]);
    }//GEN-LAST:event_acc_l_1MouseClicked

    private void add_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_b_0ActionPerformed
        // TODO add your handling code here:
        //
        UI_Handler handler = new UI_Handler();

        for (int i = 0; i < 12; i++) {
            handler.add_set_tf(i, "");
        }
        for (int i = 0; i < 4; i++) {
            handler.add_set_dm(i, 0);
        }
        for (int i = 0; i < 2; i++) {
            handler.add_set_ta(i, "");
        }
    }//GEN-LAST:event_add_b_0ActionPerformed

    private void home_l_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_l_1MouseClicked
        int list_pos = home_l_1.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(home_l_1_pop[list_pos]);
    }//GEN-LAST:event_home_l_1MouseClicked

    private void home_l_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_l_2MouseClicked
        int list_pos = home_l_2.getSelectedIndex();
        if (list_pos != -1) open_new_restaurant_tab(home_l_2_pop[list_pos]);
    }//GEN-LAST:event_home_l_2MouseClicked

    private void review_comment_b_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_review_comment_b_0ActionPerformed
        RatingControl.deleteRating(reviewed_comment);
        populate_admin_lists();
        review_comment.setVisible(false);
        review_comment.dispose();        
    }//GEN-LAST:event_review_comment_b_0ActionPerformed

    private void review_comment_b_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_review_comment_b_1ActionPerformed
        reviewed_comment.setFlagged(false);
        String result = RatingControl.unflagRating(reviewed_comment);
        JOptionPane.showMessageDialog(panel_review_comment, result);
        populate_admin_lists();
        review_comment.setVisible(false);
        review_comment.dispose();
    }//GEN-LAST:event_review_comment_b_1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                GUI_Layout dialog = new GUI_Layout(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void reset_rest_tab_status(){
        if(panel_r3_restaurant.isValid()){
            restaurant_tab_used[2] = 1;
        } else {
            restaurant_tab_used[2] = 0;
        }
        if(panel_r1_restaurant.isValid()){
            restaurant_tab_used[0] = 1;
        } else {
            restaurant_tab_used[0] = 0;
        }
        if(panel_r2_restaurant.isValid()){
            restaurant_tab_used[1] = 1;
        } else {
            restaurant_tab_used[1] = 0;
        }
    }

    public void open_new_restaurant_tab(Restaurant to_open) {
        // find unused tab
        int found_rest_tab = -1;
        //reset_rest_tab_status();

        for (int find_rest_tab = 0; find_rest_tab < 3; find_rest_tab++) {
            if (restaurant_tab_used[find_rest_tab] == 0) {
                found_rest_tab = find_rest_tab;
                break;
            }
        }

        // return -1 for an error when all tabs are used, otherwise proceed to opening the free tab
        if (found_rest_tab == -1) {
            JOptionPane.showMessageDialog(null, "Only 3 Restaurant Tabs may be opened at once, please close an existing tab.");
            return;
        } else {
            found_rest_tab += 1;
        }
        
        // reset valid tabs
        //System.out.println("r1: " + restaurant_tab_used[0]);
        //System.out.println("r2: " + restaurant_tab_used[1]);
        //System.out.println("r3: " + restaurant_tab_used[2]);

        // determine which tab needs to be open and open it
        if (found_rest_tab == 1) {
            String name1 = to_open.getName();
            if(name1.length() > 6){
               name1 = name1.substring(0, 6) + "..";
            }
            add_r1_tab(name1, jTabbedPane1.getTabCount());
            restaurant_tab_used[0] = 1;
            restaurant_tab_index[0] = jTabbedPane1.getTabCount()-1;
            restaurant1 = to_open;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);

            r1_rest_ta_1.setText(null);
            r1_rest_tf_12.setText(null);
            r1_rest_tf_11.setText(null);
            r1_rest_ta_2.setText(null);
            r1_rest_tf_14.setText(null);
            r1_rest_tf_13.setText(null);

            // Display Restaurant 1 Information
            // set the text fields
            r1_rest_tf_0.setText(to_open.getName());
            r1_rest_tf_1.setText(to_open.getPhone());
            String address = to_open.getStreetNumber() + " " + to_open.getStreetName() +
                    " " + to_open.getProvince() + " " + to_open.getCountry() + " " +
                    to_open.getPostalCode();
            r1_rest_tf_2.setText(address);
            r1_rest_tf_3.setText(to_open.getCuisine());
            r1_rest_tf_4.setText(String.valueOf(to_open.getCost()));
            r1_rest_tf_5.setText(to_open.getOpenHours());
            r1_rest_tf_6.setText(to_open.getCloseHours());
            r1_rest_tf_7.setText(to_open.getPayment());
            r1_rest_tf_8.setText(" ");
            r1_rest_tf_9.setText(to_open.getAverageRating() + "");
            r1_rest_tf_10.setText(to_open.getNumberOfRatings() + "");

            // Set ratings
            r1_index = 1;
            r1_ratings = RatingControl.getRestaurantRatings(to_open.getRestaurantID());



            if (r1_ratings != null && r1_ratings[0] != null) {
                r1_rest_tf_11.setText(RatingControl.getUsername(r1_ratings[0].getUserID()) + "");
                r1_rest_tf_12.setText(r1_ratings[0].getRating() + " stars");
                r1_rest_ta_1.setText(r1_ratings[0].getComment());

            }

            if (r1_ratings != null && r1_ratings.length > 1 && r1_ratings[1] != null) {
                r1_rest_tf_13.setText(RatingControl.getUsername(r1_ratings[1].getUserID()) + "");
                r1_rest_tf_14.setText(r1_ratings[1].getRating() + " stars");
                r1_rest_ta_2.setText(r1_ratings[1].getComment());

            }

            // set the website
            R1_Webaddress = to_open.getWebaddress();

            // set the text areas
            r1_rest_ta_0.setText(to_open.getDescription());

            // set the image
            //R1_photo_path = to_open.getImagePath();

        } else if (found_rest_tab == 2) {
            // open restaurant tab 2
            String name2 = to_open.getName();
            if(name2.length() > 6){
               name2 = name2.substring(0, 6) + "..";
            }

            add_r2_tab(name2, jTabbedPane1.getTabCount());
            restaurant_tab_used[1] = 1;
            restaurant_tab_index[1] = jTabbedPane1.getTabCount()-1;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);

            restaurant2 = to_open;

            r2_rest_ta_1.setText(null);
            r2_rest_tf_12.setText(null);
            r2_rest_tf_11.setText(null);
             r2_rest_ta_2.setText(null);
            r2_rest_tf_14.setText(null);
            r2_rest_tf_13.setText(null);

            // Display Restaurant 2 Information
            // set the text fields
            r2_rest_tf_0.setText(to_open.getName());
            r2_rest_tf_1.setText(to_open.getPhone());
            String address = to_open.getStreetNumber() + " " + to_open.getStreetName() +
                    " " + to_open.getProvince() + " " + to_open.getCountry() + " " +
                    to_open.getPostalCode();
            r2_rest_tf_2.setText(address);
            r2_rest_tf_3.setText(to_open.getCuisine());
            r2_rest_tf_4.setText(String.valueOf(to_open.getCost()));
            r2_rest_tf_5.setText(to_open.getOpenHours());
            r2_rest_tf_6.setText(to_open.getCloseHours());
            r2_rest_tf_7.setText(to_open.getPayment());
            r2_rest_tf_8.setText(" ");

            r2_rest_tf_9.setText(to_open.getAverageRating() + " stars");
            r2_rest_tf_10.setText(to_open.getNumberOfRatings() + " stars");

            r2_rest_tf_9.setText(to_open.getAverageRating() + " stars");
            r2_rest_tf_10.setText(to_open.getNumberOfRatings() + " stars");

            // Set ratings

            r2_ratings = RatingControl.getRestaurantRatings(to_open.getRestaurantID());
            r2_index = 1;
            if (r2_ratings != null && r2_ratings[0] != null) {
                r2_rest_tf_11.setText(RatingControl.getUsername(r2_ratings[0].getUserID()) + "");
                r2_rest_tf_12.setText(r2_ratings[0].getRating() + " stars");
                r2_rest_ta_1.setText(r2_ratings[0].getComment());
            }
            if (r2_ratings != null && r2_ratings.length > 1 && r2_ratings[1] != null) {
                r2_rest_tf_13.setText(RatingControl.getUsername(r2_ratings[1].getUserID()) + "");
                r2_rest_tf_14.setText(r2_ratings[1].getRating() + " stars");
                r2_rest_ta_2.setText(r2_ratings[1].getComment());
            }

            // set the website
            R2_Webaddress = to_open.getWebaddress();

            // set the text areas
            r2_rest_ta_0.setText(to_open.getDescription());

            // set the image
            //R2_photo_path = to_open.getImagePath();

        } else if (found_rest_tab == 3) {
            // open restaurant tab 3
            String name3 = to_open.getName();
            if(name3.length() > 6){
               name3 = name3.substring(0, 6) + "..";
            }

            add_r3_tab(name3, jTabbedPane1.getTabCount());
            restaurant_tab_used[2] = 1;
            restaurant_tab_index[2] = jTabbedPane1.getTabCount()-1;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);

            restaurant3 = to_open;
            r3_rest_ta_1.setText(null);
            r3_rest_tf_12.setText(null);
            r3_rest_tf_11.setText(null);
            r3_rest_ta_2.setText(null);
            r3_rest_tf_14.setText(null);
            r3_rest_tf_13.setText(null);

            // Display Restaurant 3 Information
            // set the text fields
            r3_rest_tf_0.setText(to_open.getName());
            r3_rest_tf_1.setText(to_open.getPhone());
            String address = to_open.getStreetNumber() + " " + to_open.getStreetName() +
                    " " + to_open.getProvince() + " " + to_open.getCountry() + " " +
                    to_open.getPostalCode();
            r3_rest_tf_2.setText(address);
            r3_rest_tf_3.setText(to_open.getCuisine());
            r3_rest_tf_4.setText(String.valueOf(to_open.getCost()));
            r3_rest_tf_5.setText(to_open.getOpenHours());
            r3_rest_tf_6.setText(to_open.getCloseHours());
            r3_rest_tf_7.setText(to_open.getPayment());
            r3_rest_tf_8.setText(" ");
            r3_rest_tf_9.setText(to_open.getAverageRating() + "");
            r3_rest_tf_10.setText(to_open.getNumberOfRatings() + "");

            // Set ratings
            r3_index = 1;
            r3_ratings = RatingControl.getRestaurantRatings(to_open.getRestaurantID());
            if (r3_ratings != null && r3_ratings[0] != null) {
                r3_rest_tf_11.setText(RatingControl.getUsername(r3_ratings[0].getUserID()) + "");
                r3_rest_tf_12.setText(r3_ratings[0].getRating() + " stars");
                r3_rest_ta_1.setText(r3_ratings[0].getComment());
            }
            if (r3_ratings != null && r3_ratings.length > 1 && r3_ratings[1] != null) {
                r3_rest_tf_13.setText(RatingControl.getUsername(r3_ratings[1].getUserID()) + "");
                r3_rest_tf_14.setText(r3_ratings[1].getRating() + " stars");
                r3_rest_ta_2.setText(r3_ratings[1].getComment());
            }
            // set the website
            R3_Webaddress = to_open.getWebaddress();

            // set the text areas
            r3_rest_ta_0.setText(to_open.getDescription());

            // set the image
            //R3_photo_path = to_open.getImagePath();
        } else {
            // some error has occured
            JOptionPane.showMessageDialog(null, "Only 3 Restaurant Tabs may be opened at once, please close an existing tab.");
        }

    }

    public void add_r1_tab(String r1_name, int add_r1_index) {
        // open restaurant tab 1
        jTabbedPane1.addTab(r1_name, panel_r1_restaurant);
        System.out.println("opened tab = " + add_r1_index);
        jTabbedPane1.setTabComponentAt(add_r1_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void add_r2_tab(String r2_name, int add_r2_index) {
        // open restaurant tab 2
        jTabbedPane1.addTab(r2_name, panel_r2_restaurant);
        System.out.println("opened tab = " + add_r2_index);
        jTabbedPane1.setTabComponentAt(add_r2_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void add_r3_tab(String r3_name, int add_r3_index) {
        // open restaurant tab 3
        System.out.println("index:" + add_r3_index);
        System.out.println("opened tab = " + add_r3_index);
        jTabbedPane1.addTab(r3_name, panel_r3_restaurant);

        System.out.println("index:" + add_r3_index);
        System.out.println("tab count" + jTabbedPane1.getTabCount());
        jTabbedPane1.setTabComponentAt(add_r3_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void open_new_user_tab(User open_user) {
        // find unused tab
        int found_user_tab = -1;
        for (int find_user_tab = 0; find_user_tab < 3; find_user_tab++) {
            if (user_tab_used[find_user_tab] == 0) {
                found_user_tab = find_user_tab;
                break;
            }
        }

        // return -1 for an error when all tabs are used, otherwise proceed to opening the free tab
        if (found_user_tab == -1) {
            JOptionPane.showMessageDialog(null, "Only 3 User Tabs may be opened at once, please close an existing tab.");
            return;
        } else {
            found_user_tab += 1;
        }

        // determine which tab needs to be open and open it
        if (found_user_tab == 1) {
             Encrypt crypter = new Encrypt();
             String name4 = crypter.decrypt(open_user.getDisplayName());
            if(name4.length() > 8){
               name4 = name4.substring(0, 7) + "..";
            }
             
            add_u1_tab(name4, jTabbedPane1.getTabCount());
            user_tab_used[0] = 1;
            user_tab_index[0] = jTabbedPane1.getTabCount()-1;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
            user1 = open_user;
            // Display Tab Information For User
            u1_user_tf_0.setText(crypter.decrypt(open_user.getDisplayName()));
            u1_user_tf_1.setText(crypter.decrypt(open_user.getEmail()));
            String status = "Active";
            if (open_user.getBlocked()) {
                status = "Blocked";
            }
            u1_user_tf_2.setText(status);


            //Fill history

            try {
            stats = new DBStatsControl();
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Unable to get user history\n" + ex);
                return;
            }

            Rating[] results = RatingControl.getUserRatings(open_user.getUserID());
            for (int i = 0; i < results.length; i++) {
                listMod_u1_user_l_0.add(i,results[i]);
            }

        } else if (found_user_tab == 2) {
            // open restaurant tab 2
             Encrypt crypter = new Encrypt();
             String name5 = crypter.decrypt(open_user.getDisplayName());
            if(name5.length() > 6){
               name5 = name5.substring(0, 6) + "..";
            }

            add_u2_tab(name5, jTabbedPane1.getTabCount());
            user_tab_used[1] = 1;
            user_tab_index[1] = jTabbedPane1.getTabCount()-1;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
            user2 = open_user;

            // Display Tab Information For User
            u2_user_tf_0.setText(crypter.decrypt(open_user.getDisplayName()));
            u2_user_tf_1.setText(crypter.decrypt(open_user.getEmail()));
            String status = "Active";
            if (open_user.getBlocked()) {
                status = "Blocked";
            }
            u2_user_tf_2.setText(status);

            try {
            stats = new DBStatsControl();
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Unable to get user history\n" + ex);
                return;
            }

            Rating[] results = RatingControl.getUserRatings(open_user.getUserID());
            for (int i = 0; i < results.length; i++) {
                listMod_u2_user_l_0.add(i,results[i]);
            }

        } else if (found_user_tab == 3) {
            // open restaurant tab 3
             Encrypt crypter = new Encrypt();
             String name6 = crypter.decrypt(open_user.getDisplayName());
            if(name6.length() > 6){
               name6 = name6.substring(0, 6) + "..";
            }
            add_u3_tab(name6, jTabbedPane1.getTabCount());
            user_tab_used[2] = 1;
            user_tab_index[2] = jTabbedPane1.getTabCount()-1;
            jTabbedPane1.setSelectedIndex(jTabbedPane1.getTabCount()-1);
            user3 = open_user;
            // Display Tab Information For User
            
            u3_user_tf_0.setText(crypter.decrypt(open_user.getDisplayName()));
            u3_user_tf_1.setText(crypter.decrypt(open_user.getEmail()));
            String status = "Active";
            if (open_user.getBlocked()) {
                status = "Blocked";
            }
            u3_user_tf_2.setText(status);

                        try {
            stats = new DBStatsControl();
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Unable to get user history\n" + ex);
                return;
            }

            Rating[] results = RatingControl.getUserRatings(open_user.getUserID());
            for (int i = 0; i < results.length; i++) {
                listMod_u3_user_l_0.add(i,results[i]);
            }

        } else {
            // some error has occured
            JOptionPane.showMessageDialog(null, "Only 3 User Tabs may be opened at once, please close an existing tab.");
        }
    }

    public void add_u1_tab(String u1_name, int add_u1_index) {
        // open restaurant tab 1
        jTabbedPane1.addTab(u1_name, panel_u1_user);
        jTabbedPane1.setTabComponentAt(add_u1_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void add_u2_tab(String u2_name, int add_u2_index) {
        // open restaurant tab 2
        jTabbedPane1.addTab(u2_name, panel_u2_user);
        jTabbedPane1.setTabComponentAt(add_u2_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void add_u3_tab(String u3_name, int add_u3_index) {
        // open restaurant tab 3
        jTabbedPane1.addTab(u3_name, panel_u3_user);
        jTabbedPane1.setTabComponentAt(add_u3_index, new ButtonTabComponent(jTabbedPane1));
    }

    public void setLoggedUser(User toLog) {
        this.loggedUser = toLog;
    }

    public User getLoggedUser() {
        return this.loggedUser;
    }

    /* Component to be used as tabComponent;
     * Contains a JLabel to show the text and
     * a JButton to close the tab it belongs to
     */
    public class ButtonTabComponent extends JPanel {

        private final JTabbedPane pane;

        public ButtonTabComponent(final JTabbedPane pane) {
            //unset default FlowLayout' gaps
            super(new FlowLayout(FlowLayout.LEFT, 0, 0));
            if (pane == null) {
                throw new NullPointerException("TabbedPane is null");
            }
            this.pane = pane;
            setOpaque(false);

            //make JLabel read titles from JTabbedPane
            JLabel label = new JLabel() {

                public String getText() {
                    int i = pane.indexOfTabComponent(ButtonTabComponent.this);
                    if (i != -1) {
                        return pane.getTitleAt(i);
                    }
                    return null;
                }
            };

            add(label);
            //add more space between the label and the button
            label.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
            //tab button
            JButton button = new TabButton();
            add(button);
            //add more space to the top of the component
            setBorder(BorderFactory.createEmptyBorder(2, 0, 0, 0));
        }

        private class TabButton extends JButton implements ActionListener {

            public TabButton() {
                int size = 17;
                setPreferredSize(new Dimension(size, size));
                setToolTipText("close this tab");
                //Make the button looks the same for all Laf's
                setUI(new BasicButtonUI());
                //Make it transparent
                setContentAreaFilled(false);
                //No need to be focusable
                setFocusable(false);
                setBorder(BorderFactory.createEtchedBorder());
                setBorderPainted(false);
                //Making nice rollover effect
                //we use the same listener for all buttons
                addMouseListener(buttonMouseListener);
                setRolloverEnabled(true);
                //Close the proper tab by clicking the button
                addActionListener(this);
            }

            public void actionPerformed(ActionEvent e) {
                int i = pane.indexOfTabComponent(ButtonTabComponent.this);
                if (i != -1) {
                    pane.remove(i);

                    //reset_rest_tab_status();
                    System.out.println("i = " + i);

                    // reset tab status
                    int reset_tabs = 0;
                    for (reset_tabs = 0; reset_tabs < 3; reset_tabs++) {
                        
                        if (restaurant_tab_index[reset_tabs] == i) {
                            restaurant_tab_index[reset_tabs] = -1;
                            restaurant_tab_used[reset_tabs] = 0;
                            //break;

                            //reset based on index
                            if((restaurant_tab_index[0]>0)&&(restaurant_tab_index[0] > i)){
                                restaurant_tab_index[0]-=1;
                            }
                            if((restaurant_tab_index[1]>0)&&(restaurant_tab_index[1]>i)){
                                restaurant_tab_index[1]-=1;
                            }
                            if((restaurant_tab_index[2]>0)&&(restaurant_tab_index[2]>i)){
                                restaurant_tab_index[2]-=1;
                            }

                            if((user_tab_index[0]>0)&&(user_tab_index[0] > i)){
                                user_tab_index[0]-=1;
                            }
                            if((user_tab_index[1]>0)&&(user_tab_index[1]>i)){
                                user_tab_index[1]-=1;
                            }
                            if((user_tab_index[2]>0)&&(user_tab_index[2]>i)){
                                user_tab_index[2]-=1;
                            }
                        }

                        if (user_tab_index[reset_tabs] == i) {
                            user_tab_index[reset_tabs] = -1;
                            user_tab_used[reset_tabs] = 0;
                            //break;
                        }
                                                        //reset based on index
                            if((restaurant_tab_index[0]>0)&&(restaurant_tab_index[0] > i)){
                                restaurant_tab_index[0]-=1;
                            }
                            if((restaurant_tab_index[1]>0)&&(restaurant_tab_index[1]>i)){
                                restaurant_tab_index[1]-=1;
                            }
                            if((restaurant_tab_index[2]>0)&&(restaurant_tab_index[2]>i)){
                                restaurant_tab_index[2]-=1;
                            }

                            if((user_tab_index[0]>0)&&(user_tab_index[0] > i)){
                                user_tab_index[0]-=1;
                            }
                            if((user_tab_index[1]>0)&&(user_tab_index[1]>i)){
                                user_tab_index[1]-=1;
                            }
                            if((user_tab_index[2]>0)&&(user_tab_index[2]>i)){
                                user_tab_index[2]-=1;
                            }
                    }

                }
            }

            //we don't want to update UI for this button
            public void updateUI() {
            }

            //paint the cross
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Graphics2D g2 = (Graphics2D) g.create();
                //shift the image for pressed buttons
                if (getModel().isPressed()) {
                    g2.translate(1, 1);
                }
                g2.setStroke(new BasicStroke(2));
                g2.setColor(Color.BLACK);
                if (getModel().isRollover()) {
                    g2.setColor(Color.MAGENTA);
                }
                int delta = 6;
                g2.drawLine(delta, delta, getWidth() - delta - 1, getHeight() - delta - 1);
                g2.drawLine(getWidth() - delta - 1, delta, delta, getHeight() - delta - 1);
                g2.dispose();
            }
        }
        private final MouseListener buttonMouseListener = new MouseAdapter() {

            public void mouseEntered(MouseEvent e) {
                Component component = e.getComponent();
                if (component instanceof AbstractButton) {
                    AbstractButton button = (AbstractButton) component;
                    button.setBorderPainted(true);
                }
            }

            public void mouseExited(MouseEvent e) {
                Component component = e.getComponent();
                if (component instanceof AbstractButton) {
                    AbstractButton button = (AbstractButton) component;
                    button.setBorderPainted(false);
                }
            }
        };
    }

    public class UI_Handler {

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "MAIN" PAGE
        // -------------------------------------------------------------------------------------------------------
        // get the entries in the text field in the "Main" page with the index provided
        public String main_get_tf(int main_tf_index) {
            if (main_tf_index == 0) {
                return main_tf_0.getText();
            } else if (main_tf_index == 1) {
                return main_tf_1.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entries in the text fields in the "Main" page with the index provided
        public int main_set_tf(int main_tf_index, String main_tf_to_set) {
            if (main_tf_index == 0) {
                main_tf_0.setText(main_tf_to_set);
                return 1;
            } else if (main_tf_index == 1) {
                main_tf_1.setText(main_tf_to_set);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "HOME" TAB
        // -------------------------------------------------------------------------------------------------------
        // set the entries in the lists in the "Home" tab with the index provided
        public int home_set_l(int home_l_index, int home_l_position, String home_l_string) {
            if (home_l_index == 0) {
                listMod_home_l_0.add(home_l_position, home_l_string);
                return 1;
            } else if (home_l_index == 1) {
                listMod_home_l_1.add(home_l_position, home_l_string);
                return 1;
            } else if (home_l_index == 2) {
                listMod_home_l_2.add(home_l_position, home_l_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // set the entries in the text fields in the "Home" tab with the index provided
        public int home_set_tf(int home_tf_index, String home_tf_string) {
            if (home_tf_index == 0) {
                home_tf_0.setText(home_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entries in the text fields in the "Home" tab with the index provided
        public String home_get_tf(int home_tf_index) {
            if (home_tf_index == 0) {
                return home_tf_0.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "SEARCH" TAB
        // -------------------------------------------------------------------------------------------------------
        // set the entry in the text field in the "Search" tab for the index provided
        public int search_set_tf(int search_tf_index, String search_tf_string) {            
            if (search_tf_index == 0) {
                search_tf_0.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 1) {             
                search_tf_1.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 2) {              
                search_tf_2.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 3) {
                search_tf_3.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 4) {
                search_tf_4.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 5) {
                search_tf_5.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 6) {
                search_tf_6.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 7) {
                search_tf_7.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 8) {
                search_tf_8.setText(search_tf_string);
                return 1;
            } else if (search_tf_index == 9) {
                search_tf_9.setText(search_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the text field in the "Search" tab for the index provided
        public String search_get_tf(int search_tf_index) {
            if (search_tf_index == 0) {
                return search_tf_0.getText();
            } else if (search_tf_index == 1) {            
                return search_tf_1.getText();
            } else if (search_tf_index == 2) {
                return search_tf_2.getText();
            } else if (search_tf_index == 3) {
                return search_tf_3.getText();
            } else if (search_tf_index == 4) {
                return search_tf_4.getText();
            } else if (search_tf_index == 5) {
                return search_tf_5.getText();
            } else if (search_tf_index == 6) {
                return search_tf_6.getText();
            } else if (search_tf_index == 7) {
                return search_tf_7.getText();
            } else if (search_tf_index == 8) {
                return search_tf_8.getText();
            } else if (search_tf_index == 9) {
                return search_tf_9.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entry in the list in the "Search" tab for the index provided
        public int search_set_list(int search_l_index, int search_l_position, String search_l_string) {
            if (search_l_index == 0) {
                listMod_search_l_0.add(search_l_position, search_l_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // set the entry in the drop down menu in the "Search" tab for the index provided
        public int search_set_dm(int search_dm_index, int search_set_position) {
            if (search_dm_index == 0) {
                search_dm_0.setSelectedIndex(search_set_position);
                return 1;
            } else if (search_dm_index == 1) {
                search_dm_1.setSelectedIndex(search_set_position);
                return 1;
            } else if (search_dm_index == 2) {
                search_dm_2.setSelectedIndex(search_set_position);
                return 1;
            } else if (search_dm_index == 3) {
                search_dm_3.setSelectedIndex(search_set_position);
                return 1;
            } else if (search_dm_index == 4) {
                search_dm_4.setSelectedIndex(search_set_position);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the drop down menu in the "Search" tab for the index provided
        public int search_get_dm(int search_dm_index) {
            if (search_dm_index == 0) {
                return search_dm_0.getSelectedIndex();
            } else if (search_dm_index == 1) {
                return search_dm_1.getSelectedIndex();
            } else if (search_dm_index == 2) {
                return search_dm_2.getSelectedIndex();
            } else if (search_dm_index == 3) {
                return search_dm_3.getSelectedIndex();
            } else if (search_dm_index == 4) {
                return search_dm_4.getSelectedIndex();
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "ADD" TAB
        // -------------------------------------------------------------------------------------------------------
        // set the entry in the text field in the "Add" tab for the index provided
        public int add_set_tf(int add_tf_index, String add_tf_string) {
            if (add_tf_index == 0) {
                add_tf_0.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 1) {
                add_tf_1.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 2) {
                add_tf_2.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 3) {
                add_tf_3.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 4) {
                add_tf_4.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 5) {
                add_tf_5.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 6) {
                add_tf_6.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 7) {
                add_tf_7.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 8) {
                add_tf_8.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 9) {
                add_tf_9.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 10) {
                add_tf_10.setText(add_tf_string);
                return 1;
            } else if (add_tf_index == 11) {
                add_tf_11.setText(add_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the text field in the "Add" tab for the index provided
        public String add_get_tf(int add_tf_index) {
            if (add_tf_index == 0) {
                return add_tf_0.getText();
            } else if (add_tf_index == 1) {
                return add_tf_1.getText();
            } else if (add_tf_index == 2) {
                return add_tf_2.getText();
            } else if (add_tf_index == 3) {
                return add_tf_3.getText();
            } else if (add_tf_index == 4) {
                return add_tf_4.getText();
            } else if (add_tf_index == 5) {
                return add_tf_5.getText();
            } else if (add_tf_index == 6) {
                return add_tf_6.getText();
            } else if (add_tf_index == 7) {
                return add_tf_7.getText();
            } else if (add_tf_index == 8) {
                return add_tf_8.getText();
            } else if (add_tf_index == 9) {
                return add_tf_9.getText();
            } else if (add_tf_index == 10) {
                return add_tf_10.getText();
            } else if (add_tf_index == 11) {
                return add_tf_11.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entry in the drop down menu in the "Add" tab for the index provided
        public int add_set_dm(int add_dm_index, int add_set_position) {
            if (add_dm_index == 0) {
                add_dm_0.setSelectedIndex(add_set_position);
                return 1;
            } else if (add_dm_index == 1) {
                add_dm_1.setSelectedIndex(add_set_position);
                return 1;
            } else if (add_dm_index == 2) {
                add_dm_2.setSelectedIndex(add_set_position);
                return 1;
            } else if (add_dm_index == 3) {
                add_dm_3.setSelectedIndex(add_set_position);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the drop down menu in the "Add" tab for the index provided
        public int add_get_dm(int add_dm_index) {
            if (add_dm_index == 0) {
                return add_dm_0.getSelectedIndex();
            } else if (add_dm_index == 1) {
                return add_dm_1.getSelectedIndex();
            } else if (add_dm_index == 2) {
                return add_dm_2.getSelectedIndex();
            } else if (add_dm_index == 3) {
                return add_dm_3.getSelectedIndex();
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the text area in the "Add" tab for the index provided
        public String add_get_ta(int add_ta_index) {
            if (add_ta_index == 0) {
                return add_ta_0.getText();
            } else if (add_ta_index == 1) {
                return add_ta_1.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the values in the text areas
        public int add_set_ta(int add_ta_index, String add_ta_string) {
            if (add_ta_index == 0) {
                add_ta_0.setText(add_ta_string);
                return 1;
            } else if (add_ta_index == 1) {
                add_ta_1.setText(add_ta_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "RESTAURANT" TAB
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "Restaurant" tab for the index provided
        public String rest_get_tf(int rest_id, int rest_tf_index) {
            if (rest_id == 1) {
                if (rest_tf_index == 0) {
                    return r1_rest_tf_0.getText();
                } else if (rest_tf_index == 1) {
                    return r1_rest_tf_1.getText();
                } else if (rest_tf_index == 2) {
                    return r1_rest_tf_2.getText();
                } else if (rest_tf_index == 3) {
                    return r1_rest_tf_3.getText();
                } else if (rest_tf_index == 4) {
                    return r1_rest_tf_4.getText();
                } else if (rest_tf_index == 5) {
                    return r1_rest_tf_5.getText();
                } else if (rest_tf_index == 6) {
                    return r1_rest_tf_6.getText();
                } else if (rest_tf_index == 7) {
                    return r1_rest_tf_7.getText();
                } else if (rest_tf_index == 8) {
                    return r1_rest_tf_8.getText();
                } else if (rest_tf_index == 9) {
                    return r1_rest_tf_9.getText();
                } else if (rest_tf_index == 10) {
                    return r1_rest_tf_10.getText();
                } else if (rest_tf_index == 11) {
                    return r1_rest_tf_11.getText();
                } else if (rest_tf_index == 12) {
                    return r1_rest_tf_12.getText();
                } else if (rest_tf_index == 13) {
                    return r1_rest_tf_13.getText();
                } else if (rest_tf_index == 14) {
                    return r1_rest_tf_14.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (rest_id == 2) {
                if (rest_tf_index == 0) {
                    return r2_rest_tf_0.getText();
                } else if (rest_tf_index == 1) {
                    return r2_rest_tf_1.getText();
                } else if (rest_tf_index == 2) {
                    return r2_rest_tf_2.getText();
                } else if (rest_tf_index == 3) {
                    return r2_rest_tf_3.getText();
                } else if (rest_tf_index == 4) {
                    return r2_rest_tf_4.getText();
                } else if (rest_tf_index == 5) {
                    return r2_rest_tf_5.getText();
                } else if (rest_tf_index == 6) {
                    return r2_rest_tf_6.getText();
                } else if (rest_tf_index == 7) {
                    return r2_rest_tf_7.getText();
                } else if (rest_tf_index == 8) {
                    return r2_rest_tf_8.getText();
                } else if (rest_tf_index == 9) {
                    return r2_rest_tf_9.getText();
                } else if (rest_tf_index == 10) {
                    return r2_rest_tf_10.getText();
                } else if (rest_tf_index == 11) {
                    return r2_rest_tf_11.getText();
                } else if (rest_tf_index == 12) {
                    return r2_rest_tf_12.getText();
                } else if (rest_tf_index == 13) {
                    return r2_rest_tf_13.getText();
                } else if (rest_tf_index == 14) {
                    return r2_rest_tf_14.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (rest_id == 3) {
                if (rest_tf_index == 0) {
                    return r3_rest_tf_0.getText();
                } else if (rest_tf_index == 1) {
                    return r3_rest_tf_1.getText();
                } else if (rest_tf_index == 2) {
                    return r3_rest_tf_2.getText();
                } else if (rest_tf_index == 3) {
                    return r3_rest_tf_3.getText();
                } else if (rest_tf_index == 4) {
                    return r3_rest_tf_4.getText();
                } else if (rest_tf_index == 5) {
                    return r3_rest_tf_5.getText();
                } else if (rest_tf_index == 6) {
                    return r3_rest_tf_6.getText();
                } else if (rest_tf_index == 7) {
                    return r3_rest_tf_7.getText();
                } else if (rest_tf_index == 8) {
                    return r3_rest_tf_8.getText();
                } else if (rest_tf_index == 9) {
                    return r3_rest_tf_9.getText();
                } else if (rest_tf_index == 10) {
                    return r3_rest_tf_10.getText();
                } else if (rest_tf_index == 11) {
                    return r3_rest_tf_11.getText();
                } else if (rest_tf_index == 12) {
                    return r3_rest_tf_12.getText();
                } else if (rest_tf_index == 13) {
                    return r3_rest_tf_13.getText();
                } else if (rest_tf_index == 14) {
                    return r3_rest_tf_14.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else {
                return "error";
            }
        }

        // set the entry in the text field in the "Restaurant" tab for the index provided
        public int rest_set_tf(int rest_id, int rest_tf_index, String rest_tf_string) {
            if (rest_id == 1) {
                if (rest_tf_index == 0) {
                    r1_rest_tf_0.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 1) {
                    r1_rest_tf_1.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 2) {
                    r1_rest_tf_2.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 3) {
                    r1_rest_tf_3.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 4) {
                    r1_rest_tf_4.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 5) {
                    r1_rest_tf_5.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 6) {
                    r1_rest_tf_6.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 7) {
                    r1_rest_tf_7.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 8) {
                    r1_rest_tf_8.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 9) {
                    r1_rest_tf_9.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 10) {
                    r1_rest_tf_10.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 11) {
                    r1_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 12) {
                    r1_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 13) {
                    r1_rest_tf_13.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 14) {
                    r1_rest_tf_14.setText(rest_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 2) {
                if (rest_tf_index == 0) {
                    r2_rest_tf_0.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 1) {
                    r2_rest_tf_1.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 2) {
                    r2_rest_tf_2.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 3) {
                    r2_rest_tf_3.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 4) {
                    r2_rest_tf_4.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 5) {
                    r2_rest_tf_5.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 6) {
                    r2_rest_tf_6.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 7) {
                    r2_rest_tf_7.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 8) {
                    r2_rest_tf_8.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 9) {
                    r2_rest_tf_9.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 10) {
                    r2_rest_tf_10.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 11) {
                    r2_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 12) {
                    r2_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 13) {
                    r2_rest_tf_13.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 14) {
                    r2_rest_tf_14.setText(rest_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 3) {
                if (rest_tf_index == 0) {
                    r3_rest_tf_0.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 1) {
                    r3_rest_tf_1.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 2) {
                    r3_rest_tf_2.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 3) {
                    r3_rest_tf_3.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 4) {
                    r3_rest_tf_4.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 5) {
                    r3_rest_tf_5.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 6) {
                    r3_rest_tf_6.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 7) {
                    r3_rest_tf_7.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 8) {
                    r3_rest_tf_8.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 9) {
                    r3_rest_tf_9.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 10) {
                    r3_rest_tf_10.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 11) {
                    r3_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 12) {
                    r3_rest_tf_11.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 13) {
                    r3_rest_tf_13.setText(rest_tf_string);
                    return 1;
                } else if (rest_tf_index == 14) {
                    r3_rest_tf_14.setText(rest_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }
        }

        // get the entry in the text area in the "Restaurant" tab for the index provided
        public String rest_get_ta(int rest_id, int rest_ta_index) {
            if (rest_id == 1) {
                if (rest_ta_index == 0) {
                    return r1_rest_ta_0.getText();
                } else if (rest_ta_index == 1) {
                    return r1_rest_ta_1.getText();
                } else if (rest_ta_index == 2) {
                    return r1_rest_ta_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (rest_id == 2) {
                if (rest_ta_index == 0) {
                    return r2_rest_ta_0.getText();
                } else if (rest_ta_index == 1) {
                    return r2_rest_ta_1.getText();
                } else if (rest_ta_index == 2) {
                    return r2_rest_ta_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (rest_id == 3) {
                if (rest_ta_index == 0) {
                    return r3_rest_ta_0.getText();
                } else if (rest_ta_index == 1) {
                    return r3_rest_ta_1.getText();
                } else if (rest_ta_index == 2) {
                    return r3_rest_ta_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else {
                return "error";
            }
        }

        // set the entry in the text area in the "Restaurant" tab for the index provided
        public int rest_set_ta(int rest_id, int rest_ta_index, String rest_ta_string) {
            if (rest_id == 1) {
                if (rest_ta_index == 0) {
                    r1_rest_ta_0.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 1) {
                    r1_rest_ta_1.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 2) {
                    r1_rest_ta_2.setText(rest_ta_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 2) {
                if (rest_ta_index == 0) {
                    r2_rest_ta_0.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 1) {
                    r2_rest_ta_1.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 2) {
                    r2_rest_ta_2.setText(rest_ta_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 3) {
                if (rest_ta_index == 0) {
                    r3_rest_ta_0.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 1) {
                    r3_rest_ta_1.setText(rest_ta_string);
                    return 1;
                } else if (rest_ta_index == 2) {
                    r3_rest_ta_2.setText(rest_ta_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }

        }

        // set the entry in the drop down menu in the "Restaurant" tab for the index provided
        public int rest_set_dm(int rest_id, int rest_dm_index, int rest_dm_position) {
            if (rest_id == 1) {
                if (rest_dm_index == 0) {
                    r1_rest_dm_0.setSelectedIndex(rest_dm_position);
                    return 1;
                } else if (rest_dm_index == 1) {
                    r1_rest_dm_1.setSelectedIndex(rest_dm_position);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 2) {
                if (rest_dm_index == 0) {
                    r2_rest_dm_0.setSelectedIndex(rest_dm_position);
                    return 1;
                } else if (rest_dm_index == 1) {
                    r2_rest_dm_1.setSelectedIndex(rest_dm_position);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 3) {
                if (rest_dm_index == 0) {
                    r3_rest_dm_0.setSelectedIndex(rest_dm_position);
                    return 1;
                } else if (rest_dm_index == 1) {
                    r3_rest_dm_1.setSelectedIndex(rest_dm_position);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }

        }

        // get the entry in the drop down menu in the "Restaurant" tab for the index provided
        public int rest_get_dm(int rest_id, int rest_dm_index) {
            if (rest_id == 1) {
                if (rest_dm_index == 0) {
                    return r1_rest_dm_0.getSelectedIndex();
                } else if (rest_dm_index == 1) {
                    return r1_rest_dm_1.getSelectedIndex();
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 2) {
                if (rest_dm_index == 0) {
                    return r2_rest_dm_0.getSelectedIndex();
                } else if (rest_dm_index == 1) {
                    return r2_rest_dm_1.getSelectedIndex();
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (rest_id == 3) {
                if (rest_dm_index == 0) {
                    return r3_rest_dm_0.getSelectedIndex();
                } else if (rest_dm_index == 1) {
                    return r3_rest_dm_1.getSelectedIndex();
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }

        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "ACCOUNT" TAB
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "Account" tab for the index provided
        public String account_get_tf(int account_tf_index) {
            if (account_tf_index == 0) {
                return acc_tf_0.getText();
            } else if (account_tf_index == 1) {
                return acc_tf_1.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entry in the text field in the "Account" tab for the index provided
        public int account_set_tf(int account_tf_index, String acc_tf_string) {
            if (account_tf_index == 0) {
                acc_tf_0.setText(acc_tf_string);
                return 1;
            } else if (account_tf_index == 1) {
                acc_tf_1.setText(acc_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the text area in the "Account" tab for the index provided
        public String account_get_ta(int account_ta_index) {
            if (account_ta_index == 0) {
                return acc_ta_0.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entry in the text area in the "Account" tab for the index provided
        public int account_set_ta(int account_ta_index, String account_ta_string) {
            if (account_ta_index == 0) {
                acc_ta_0.setText(account_ta_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // set the entry in the list in the "Account" tab for the index provided
        public int account_set_l(int account_l_index, int account_l_position, String account_l_string) {
            if (account_l_index == 0) {
                listMod_acc_l_0.add(account_l_position, account_l_string);
                return 1;
            } else if (account_l_index == 1) {
                listMod_acc_l_1.add(account_l_position, account_l_string);
                return 1;
            } else if (account_l_index == 2) {
                listMod_acc_l_2.add(account_l_position, account_l_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "ADMIN" TAB
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "Admin" tab for the index provided
        public String admin_get_tf(int admin_tf_index) {
            if (admin_tf_index == 0) {
                return admin_tf_0.getText();
            } else if (admin_tf_index == 1) {
                return admin_tf_1.getText();
            } else if (admin_tf_index == 2) {
                return admin_tf_2.getText();
            } else if (admin_tf_index == 3) {
                return admin_tf_3.getText();
            } else if (admin_tf_index == 4) {
                return admin_tf_4.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // set the entry in the text field in the "Admin" tab for the index provided
        public int admin_set_tf(int admin_tf_index, String admin_tf_string) {
            if (admin_tf_index == 0) {
                admin_tf_0.setText(admin_tf_string);
                return 1;
            } else if (admin_tf_index == 1) {
                admin_tf_1.setText(admin_tf_string);
                return 1;
            } else if (admin_tf_index == 2) {
                admin_tf_2.setText(admin_tf_string);
                return 1;
            } else if (admin_tf_index == 3) {
                admin_tf_3.setText(admin_tf_string);
                return 1;
            } else if (admin_tf_index == 4) {
                admin_tf_4.setText(admin_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // set the entry in the list in the "Admin" tab for the index provided
        public int admin_set_l(int admin_l_index, int admin_l_position, String admin_l_string) {
            if (admin_l_index == 0) {
                listMod_admin_l_0.add(admin_l_position, admin_l_string);
                return 1;
            } else if (admin_l_index == 1) {
                listMod_admin_l_1.add(admin_l_position, admin_l_string);
                return 1;
            } else if (admin_l_index == 1) {
                listMod_admin_l_2.add(admin_l_position, admin_l_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "USER" TAB
        // -------------------------------------------------------------------------------------------------------
        // set the entry in the text field in the "User" tab for the index provided
        public int user_set_tf(int user_tab_id, int user_tf_index, String user_tf_string) {
            if (user_tab_id == 1) {
                if (user_tf_index == 0) {
                    u1_user_tf_0.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 1) {
                    u1_user_tf_1.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 2) {
                    u1_user_tf_2.setText(user_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (user_tab_id == 2) {
                if (user_tf_index == 0) {
                    u2_user_tf_0.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 1) {
                    u2_user_tf_1.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 2) {
                    u2_user_tf_2.setText(user_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (user_tab_id == 3) {
                if (user_tf_index == 0) {
                    u3_user_tf_0.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 1) {
                    u3_user_tf_1.setText(user_tf_string);
                    return 1;
                } else if (user_tf_index == 2) {
                    u3_user_tf_2.setText(user_tf_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }

        }

        // get the entry in the text field in the "User" tab for the index provided
        public String user_get_tf(int user_tab_id, int user_tf_index) {
            if (user_tab_id == 1) {
                if (user_tf_index == 0) {
                    return u1_user_tf_0.getText();
                } else if (user_tf_index == 1) {
                    return u1_user_tf_1.getText();
                } else if (user_tf_index == 2) {
                    return u1_user_tf_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (user_tab_id == 2) {
                if (user_tf_index == 0) {
                    return u2_user_tf_0.getText();
                } else if (user_tf_index == 1) {
                    return u2_user_tf_1.getText();
                } else if (user_tf_index == 2) {
                    return u2_user_tf_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else if (user_tab_id == 3) {
                if (user_tf_index == 0) {
                    return u3_user_tf_0.getText();
                } else if (user_tf_index == 1) {
                    return u3_user_tf_1.getText();
                } else if (user_tf_index == 2) {
                    return u3_user_tf_2.getText();
                } else {
                    // out of bounds, return error
                    return "error";
                }
            } else {
                return "error";
            }

        }

        // set the entry in the list in the "User" tab for the index provided
        public int user_set_l(int user_tab_id, int user_l_index, String user_l_string) {
            if (user_tab_id == 1) {
                if (user_l_index == 0) {
                    listMod_u1_user_l_0.add(user_l_index, user_l_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (user_tab_id == 2) {
                if (user_l_index == 0) {
                    listMod_u2_user_l_0.add(user_l_index, user_l_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else if (user_tab_id == 3) {
                if (user_l_index == 0) {
                    listMod_u3_user_l_0.add(user_l_index, user_l_string);
                    return 1;
                } else {
                    // out of bounds, return error
                    return -1;
                }
            } else {
                return -1;
            }

        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "ADS" TAB
        // -------------------------------------------------------------------------------------------------------
        // set the entry in the text field in the "Ads" tab for the index provided
        public int ads_set_tf(int ads_tf_index, String ads_tf_string) {
            if (ads_tf_index == 0) {
                ads_tf_0.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 1) {
                ads_tf_1.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 2) {
                ads_tf_2.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 3) {
                ads_tf_3.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 4) {
                ads_tf_4.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 5) {
                ads_tf_5.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 6) {
                ads_tf_6.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 7) {
                ads_tf_7.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 8) {
                ads_tf_8.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 9) {
                ads_tf_9.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 10) {
                ads_tf_10.setText(ads_tf_string);
                return 1;
            } else if (ads_tf_index == 11) {
                ads_tf_11.setText(ads_tf_string);
                return 1;
            } else {
                // out of bounds, return error
                return -1;
            }
        }

        // get the entry in the text field in the "Ads" tab for the index provided
        public String ads_get_tf(int ads_tf_index) {
            if (ads_tf_index == 0) {
                return ads_tf_0.getText();
            } else if (ads_tf_index == 1) {
                return ads_tf_1.getText();
            } else if (ads_tf_index == 2) {
                return ads_tf_2.getText();
            } else if (ads_tf_index == 3) {
                return ads_tf_3.getText();
            } else if (ads_tf_index == 4) {
                return ads_tf_4.getText();
            } else if (ads_tf_index == 5) {
                return ads_tf_5.getText();
            } else if (ads_tf_index == 6) {
                return ads_tf_6.getText();
            } else if (ads_tf_index == 7) {
                return ads_tf_7.getText();
            } else if (ads_tf_index == 8) {
                return ads_tf_8.getText();
            } else if (ads_tf_index == 9) {
                return ads_tf_9.getText();
            } else if (ads_tf_index == 10) {
                return ads_tf_10.getText();
            } else if (ads_tf_index == 11) {
                return ads_tf_11.getText();
            } else {
                // out of bounds, return error
                return "error";
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "ADD COMMENT" DIALOG BOX
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "ADD COMMENT" dialog box for the index provided
        public String add_comment_get_ta(int add_comment_ta_index) {
            if (add_comment_ta_index == 0) {
                return add_comment_ta_0.getText();
            } else {
                return "error";
            }
        }

        // set the entry in the text field in the "ADD COMMENT" dialog box for the index provided
        public int add_comment_set_ta(int add_comment_ta_index, String add_comment_ta_string) {
            if (add_comment_ta_index == 0) {
                add_comment_ta_0.setText(add_comment_ta_string);
                return 1;
            } else {
                return -1;
            }
        }

        // set the entry in the drop down menu in the "ADD COMMENT" dialog box for the index provided
        public int add_comment_set_dm(int add_comment_ta_index, int add_comment_set_position) {
            if (add_comment_ta_index == 0) {
                add_comment_dm_0.setSelectedIndex(add_comment_set_position);
                return 1;
            } else {
                return -1;
            }
        }

        // get the entry in the drop down menu in the "ADD COMMENT" dialog box for the index provided
        public int add_comment_get_dm(int add_comment_ta_index) {
            if (add_comment_ta_index == 0) {
                return add_comment_dm_0.getSelectedIndex();
            } else {
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "CHANGE PASSWORD" DIALOG BOX
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "CHANGE PASSWORD" dialog box for the index provided
        public String change_password_get_tf(int change_password_tf_index) {
            if (change_password_tf_index == 0) {
                return change_password_tf_0.getText();
            } else if (change_password_tf_index == 1) {
                return change_password_tf_1.getText();
            } else if (change_password_tf_index == 2) {
                return change_password_tf_2.getText();
            } else {
                return "error";
            }
        }

        // get the entry in the text field in the "CHANGE PASSWORD" dialog box for the index provided
        public int change_password_set_tf(int change_password_tf_index, String change_password_tf_string) {
            if (change_password_tf_index == 0) {
                change_password_tf_0.setText(change_password_tf_string);
                return 1;
            } else if (change_password_tf_index == 1) {
                change_password_tf_1.setText(change_password_tf_string);
                return 1;
            } else if (change_password_tf_index == 2) {
                change_password_tf_2.setText(change_password_tf_string);
                return 1;
            } else {
                return -1;
            }
        }

        // -------------------------------------------------------------------------------------------------------
        //                                    UI HANDLER METHODS FOR THE "REGISTRATION FORM" DIALOG BOX
        // -------------------------------------------------------------------------------------------------------
        // get the entry in the text field in the "REGISTRATION FORM" dialog box for the index provided
        public String registration_form_get_tf(int registration_form_tf_index) {
            if (registration_form_tf_index == 0) {
                return registration_tf_0.getText();
            } else if (registration_form_tf_index == 1) {
                return registration_tf_1.getText();
            } else if (registration_form_tf_index == 2) {
                return registration_tf_2.getText();
            } else if (registration_form_tf_index == 3) {
                return registration_tf_3.getText();
            } else {
                return "error";
            }
        }

        // set the entry in the text field in the "REGISTRATION FORM" dialog box for the index provided
        public int registration_form_set_tf(int registration_form_tf_index, String registration_form_tf_string) {
            if (registration_form_tf_index == 0) {
                registration_tf_0.setText(registration_form_tf_string);
                return 1;
            } else if (registration_form_tf_index == 1) {
                registration_tf_1.setText(registration_form_tf_string);
                return 1;
            } else if (registration_form_tf_index == 2) {
                registration_tf_2.setText(registration_form_tf_string);
                return 1;
            } else if (registration_form_tf_index == 3) {
                registration_tf_3.setText(registration_form_tf_string);
                return 1;
            } else {
                return -1;
            }
        }
    }

// initialize all tabs status variables as unused (i.e. 0)
    public void init_tab_status() {
        for (int count_set = 0; count_set < 3; count_set++) {
            restaurant_tab_used[count_set] = 0;
            user_tab_used[count_set] = 0;
            restaurant_tab_index[count_set] = -1;
            user_tab_index[count_set] = -1;
        }
    }

    public void init_tab_components() {
        // initialize tab status
        init_tab_status();

        // enable Logout Boutton
        main_b_3.setEnabled(false);

        // remove restaurant and user tab panels
        jTabbedPane1.removeTabAt(3);
        jTabbedPane1.removeTabAt(6);
        jTabbedPane1.removeTabAt(7);
        jTabbedPane1.removeTabAt(7);
        jTabbedPane1.removeTabAt(7);
        jTabbedPane1.removeTabAt(7);
        jTabbedPane1.removeTabAt(2);
        jTabbedPane1.removeTabAt(2);
        jTabbedPane1.removeTabAt(3);
        jTabbedPane1.removeTabAt(3);

        // Home Tab - Get Information
        try {
            stats = new DBStatsControl();
        } catch (SQLException ex) {
            // blah
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database.");
        }
        home_l_0_pop = stats.getTopRated(10);
        home_l_1_pop = stats.getRecentlyRated(10);

        // Home Tab - Display Information
        int j1 = 0;
        for (j1 = 0; j1 < (home_l_0_pop.length); j1++) {
            listMod_home_l_0.add(j1, home_l_0_pop[j1].getName());
        }
        int j2 = 0;
        if (home_l_1_pop != null) {
            for (j2 = 0; j2 < (home_l_1_pop.length); j2++) {
                listMod_home_l_1.add(j2, home_l_1_pop[j2].getName());
            }
        }
    }

    public int payment_to_id(String payment) {
        if (payment.equals("Select Payment")) {
            return 0;
        } else if (payment.equals("Credit Card")) {
            return 1;
        } else if (payment.equals("Debit Card")) {
            return 2;
        } else if (payment.equals("Cash")) {
            return 3;
        } else {
            return -1;
        }
    }

    public String id_to_payment(int id) {
        if (id == 0) {
            return "Select Payment";
        } else if (id == 1) {
            return "Credit Card";
        } else if (id == 2) {
            return "Debit Card";
        } else if (id == 3) {
            return "Cash";
        } else {
            return "error";
        }
    }

    public int cuisine_to_id(String cuisine) {
        if (cuisine.equals("Please Select")) {
            return 0;
        } else if (cuisine.equals("American")) {
            return 1;
        } else if (cuisine.equals("Breakfast")) {
            return 2;
        } else if (cuisine.equals("Canadian")) {
            return 3;
        } else if (cuisine.equals("Chinese")) {
            return 4;
        } else if (cuisine.equals("Coffee")) {
            return 5;
        } else if (cuisine.equals("Deli")) {
            return 6;
        } else if (cuisine.equals("French")) {
            return 7;
        } else if (cuisine.equals("German")) {
            return 8;
        } else if (cuisine.equals("Italian")) {
            return 9;
        } else if (cuisine.equals("Japanese")) {
            return 10;
        } else if (cuisine.equals("Mexican")) {
            return 11;
        } else if (cuisine.equals("Seafood")) {
            return 12;
        } else if (cuisine.equals("Tapas")) {
            return 13;
        } else if (cuisine.equals("Thai")) {
            return 14;
        } else if (cuisine.equals("Vegetarian")) {
            return 15;
        } else if (cuisine.equals("Other")) {
            return 16;
        } else {
            return -1;
        }
    }

    public String id_to_cuisine(int cuisine_id) {
        if (cuisine_id == 0) {
            return "Please Select";
        } else if (cuisine_id == 1) {
            return "American";
        } else if (cuisine_id == 2) {
            return "Breakfast";
        } else if (cuisine_id == 3) {
            return "Canadian";
        } else if (cuisine_id == 4) {
            return "Chinese";
        } else if (cuisine_id == 5) {
            return "Coffee";
        } else if (cuisine_id == 6) {
            return "Deli";
        } else if (cuisine_id == 7) {
            return "French";
        } else if (cuisine_id == 8) {
            return "German";
        } else if (cuisine_id == 9) {
            return "Italian";
        } else if (cuisine_id == 10) {
            return "Japanese";
        } else if (cuisine_id == 11) {
            return "Mexican";
        } else if (cuisine_id == 12) {
            return "Seafood";
        } else if (cuisine_id == 13) {
            return "Tapas";
        } else if (cuisine_id == 14) {
            return "Thai";
        } else if (cuisine_id == 15) {
            return "Vegetarian";
        } else if (cuisine_id == 16) {
            return "Other";
        } else {
            return "error";
        }
    }

    public void add_restaurant() {
        int will_open = 0, s_num = 0, max_num = 0;
        
        // Create new restaurant object
        Restaurant temp_rest_store = new Restaurant();

        int new_id = -1;

        if ((add_tf_0.getText().equals("")) || (add_tf_6.getText().equals("")) || (add_tf_7.getText().equals("")) || (add_tf_10.getText().equals("")) || (add_tf_8.getText().equals("")) || (add_tf_9.equals(""))) {
            
            try {
                 s_num = Integer.parseInt(add_tf_6.getText());
            } catch(NumberFormatException nFE) {
                JOptionPane.showMessageDialog(null, "Street Number Must Be An Integer");
                return;
            }

            if(add_tf_5.getText().equals("")){
            } else{
                try {
                    max_num = Integer.valueOf(add_tf_5.getText());
                } catch(NumberFormatException nFE) {
                    JOptionPane.showMessageDialog(null, "Max Price Must Be A Float");
                    return;
                }
            }

            try {
                max_num = Integer.valueOf(add_tf_1.getText());
            } catch(NumberFormatException nFE) {
                JOptionPane.showMessageDialog(null, "Please use only integers for the phone");
                return;
            }

            try{
                if(add_tf_3.getText() != null){
                x = Integer.parseInt(add_tf_3.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for opening hours");
                    return;
                }
                if(x < 0 || x > 12 ){
                    JOptionPane.showMessageDialog(null, "Please use only numbers betweem 0 and 12 for opening hours");
                    x = 0;
                    return;
             }
            try{
                if(add_tf_4.getText() != null){
                x = Integer.parseInt(add_tf_4.getText());
                }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Please use only numbers for opening hours");
                    return;
                }
                if(x < 0 || x > 12 ){
                    JOptionPane.showMessageDialog(null, "Please use only numbers betweem 0 and 12 for opening hours");
                    x = 0;
                    return;
                }


            temp_rest_store.setName(add_tf_0.getText());
            temp_rest_store.setStreetNumber(s_num);
            temp_rest_store.setStreetName(add_tf_7.getText());
            temp_rest_store.setPostalCode(add_tf_10.getText());
            temp_rest_store.setProvince(add_tf_8.getText());
            temp_rest_store.setCountry(add_tf_9.getText());
        } else {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        }

        temp_rest_store.setRestaurantID(new_id);

        String tempText = add_tf_5.getText().replace('$',' ');
        if (tempText.length() != 0) {
            temp_rest_store.setCost(Float.valueOf(max_num));
        }
        temp_rest_store.setPhone(add_tf_1.getText());
        temp_rest_store.setCuisine(id_to_cuisine(add_dm_0.getSelectedIndex()));
        temp_rest_store.setWebaddress(add_tf_2.getText());
        temp_rest_store.setOpenHours(add_tf_3.getText());
        temp_rest_store.setCloseHours(add_tf_4.getText());
        temp_rest_store.setPayment(id_to_payment(add_dm_3.getSelectedIndex()));
        temp_rest_store.setImagePath(add_tf_11.getText());
        temp_rest_store.setDescription(add_ta_0.getText());

        // Store restaurant object to the database
        //try {
            DBRestaurantControl dbrc = new DBRestaurantControl();
//        } catch (SQLException ex) {
//            // blah
//            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database, Please Restart the Application\n" + ex);
//            will_open++;
//        }
        dbrc.setRestaurant(temp_rest_store);
        dbrc.add();
        temp_rest_store = dbrc.getRestaurant();
        // open new restaurant tab for restaurant
        int succeeded_open = 0;
        if (will_open == 0) {
            open_new_restaurant_tab(temp_rest_store);
        }
    }

    public void modify_tabs(int transition_id) {

        int g = 0;
        for(g=0;g<3;g++){
             restaurant_tab_used[g] = 0;
             user_tab_used[g] = 0;
        }

        if (transition_id == 1) {
            // guest -> user
            // close all restaurant tabs
            int i1 = 0, check_i1 = jTabbedPane1.getTabCount();
            if (check_i1 > 3) {
                for (i1 = 0; i1 < (check_i1 - 3); i1++) {
                    jTabbedPane1.removeTabAt(3);
                }
            }

            // open all new required tabs
            jTabbedPane1.addTab("Add", panel_add);
            jTabbedPane1.addTab("Account", panel_account);

            // set new global tab count
            global_tab_count = 5;

        } else if (transition_id == 2) {
            // guest -> admin
            // close all restaurant tabs
            int i2 = 0, check_i2 = jTabbedPane1.getTabCount();
            if (check_i2 > 3) {
                for (i2 = 0; i2 < (check_i2 - 3); i2++) {
                    jTabbedPane1.removeTabAt(3);
                }
            }

            // open all new required tabs
            jTabbedPane1.addTab("Add", panel_add);
            jTabbedPane1.addTab("Account", panel_account);
            jTabbedPane1.addTab("Admin", panel_admin);
            jTabbedPane1.addTab("Ads", panel_ads);

            // set new global tab count
            global_tab_count = 7;


        } else if (transition_id == 3) {
            // user -> guest
            // close all restaurant tabs
            int i3 = 0, check_i3 = jTabbedPane1.getTabCount();
            if (check_i3 > 5) {
                for (i3 = 0; i3 < (check_i3 - 5); i3++) {
                    jTabbedPane1.removeTabAt(5);
                }
            }

            // open all new required tabs
            jTabbedPane1.removeTabAt(3);
            jTabbedPane1.removeTabAt(3);

            // set new global tab count
            global_tab_count = 3;

        } else if (transition_id == 4) {
            // user -> admin
            // close all restaurant and user tabs
            int i4 = 0, check_i4 = jTabbedPane1.getTabCount();
            if (check_i4 > 5) {
                for (i4 = 0; i4 < (check_i4 - 5); i4++) {
                    jTabbedPane1.removeTabAt(5);
                }
            }

            // open all new required tabs
            jTabbedPane1.addTab("Admin", panel_admin);
            jTabbedPane1.addTab("Ads", panel_ads);

            // set new global tab count
            global_tab_count = 7;

        } else if (transition_id == 5) {
            // admin -> guest
            // close all restaurant and user tabs
            int i5 = 0, check_i5 = jTabbedPane1.getTabCount();
            if (check_i5 > 7) {
                for (i5 = 0; i5 < (check_i5 - 7); i5++) {
                    jTabbedPane1.removeTabAt(7);
                }
            }

            // open all new required tabs
            jTabbedPane1.removeTabAt(3);
            jTabbedPane1.removeTabAt(3);
            jTabbedPane1.removeTabAt(3);
            jTabbedPane1.removeTabAt(3);

            // set new global tab count
            global_tab_count = 3;

        } else if (transition_id == 6) {
            // admin -> user
            // close all restaurant and user tabs
            int i6 = 0, check_i6 = jTabbedPane1.getTabCount();
            if (check_i6 > 7) {
                for (i6 = 0; i6 < (check_i6 - 7); i6++) {
                    jTabbedPane1.removeTabAt(7);
                }
            }

            // open all new required tabs
            jTabbedPane1.removeTabAt(5);
            jTabbedPane1.removeTabAt(5);

            // set new global tab count
            global_tab_count = 5;

        } else {
            JOptionPane.showMessageDialog(null, "Error identifying login status.");
        }
    }

    public void populate_home_lists(int user_id) {
        // Home Tab - Get Information
        try {
            stats = new DBStatsControl();
        } catch (SQLException ex) {
            // blah
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database.");
        }
        home_l_0_pop = stats.getTopRated(10);
        home_l_1_pop = stats.getRecentlyRated(10);
        home_l_2_pop = stats.getRecommended(loggedUser);
        // Home Tab - Display Information
        int j1 = 0;
        for (j1 = 0; j1 < (home_l_0_pop.length); j1++) {
            listMod_home_l_0.add(j1, home_l_0_pop[j1].getName());
        }
        int j2 = 0;
        if (home_l_1_pop != null) {
            for (j2 = 0; j2 < (home_l_1_pop.length); j2++) {
                listMod_home_l_1.add(j2, home_l_1_pop[j2].getName());
            }
        }
        if (home_l_2_pop != null) {
            int j3 = 0;
            for (j3 = 0; j3 < (home_l_2_pop.length); j3++) {
                if (home_l_2_pop[j3] != null) {
                    listMod_home_l_2.add(j3, home_l_2_pop[j3].getName());
                }
            }
        }
    }

    public void populate_account_lists() {

        // set text fields
        acc_tf_0.setText(loggedUser.getDisplayName());
        acc_tf_1.setText(loggedUser.getEmail());

        try {
            stats = new DBStatsControl();
        } catch (SQLException ex) {
            // blah
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database.");
        }
        acc_l_0_pop = stats.getTopRated(10, loggedUser.getUserID());
        System.out.println("length of list;" + acc_l_0_pop.length);
        acc_l_1_pop = stats.getRecentlyRated(10, loggedUser.getUserID());
        acc_l_2_pop = stats.getMostActiveRestaurants(10);

        int j1 = 0;
        if (acc_l_0_pop != null) {
            for (j1 = 0; j1 < (acc_l_0_pop.length); j1++) {
                listMod_acc_l_0.add(j1, acc_l_0_pop[j1].getName());
            }
        }
        int j2 = 0;
        if (acc_l_1_pop != null) {
            for (j2 = 0; j2 < (acc_l_1_pop.length); j2++) {
                listMod_acc_l_1.add(j2, acc_l_1_pop[j2].getName());
            }
        }
        if (acc_l_2_pop != null) {
            int j3 = 0;
            for (j3 = 0; j3 < (acc_l_2_pop.length); j3++) {
                if (acc_l_2_pop[j3] != null) {
                    listMod_acc_l_2.add(j3, acc_l_2_pop[j3].getName());
                }
            }
        }
    }

    public void populate_admin_lists() {

        listMod_admin_l_0.removeAllElements();
        listMod_admin_l_1.removeAllElements();
        listMod_admin_l_2.removeAllElements();
        listMod_admin_l_3.removeAllElements();

        try {
            stats = new DBStatsControl();
        } catch (SQLException ex) {
            // blah
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database.");
        }
        admin_l_0_pop = stats.getMostActiveRestaurants(10);
        admin_l_1_pop = stats.getMostActiveUsers(10);

        Encrypt encrypter = new Encrypt();
        //Then get blocked users:

        DBSearchControl dbsc;
        try
        {
           dbsc = new DBSearchControl();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database, Please Restart the Application");
            return;
        }

        String[] srcFields = new String[1];
        srcFields[0] = "blocked";
        String[] srcVals = new String[1];
        srcVals[0] = "1";
        String[] srcComps = new String[1];
        srcComps[0] = "=";
        String[] srcLinks = new String[1];
        srcLinks[0] = ";";

        dbsc.setSearchFields(srcFields);
        dbsc.setSearchValues(srcVals);
        dbsc.setSearchComparisons(srcComps);
        dbsc.setSearchLinkers(srcLinks);
        dbsc.setNoFieldsInSearch(1);

        admin_l_3_pop = dbsc.searchUser();

        //Then get flagged comments:


        srcFields[0] = "flagged";
        srcVals[0] = "'" + 1 + "'";
        srcComps[0] = "=";
        srcLinks[0] = ";";

        dbsc.setSearchFields(srcFields);
        dbsc.setSearchValues(srcVals);
        dbsc.setSearchComparisons(srcComps);
        dbsc.setSearchLinkers(srcLinks);
        dbsc.setNoFieldsInSearch(1);

        admin_l_2_pop = dbsc.searchRating();


        // set text fields information
        admin_tf_0.setText(Integer.toString(stats.getNumberUsers()));
        admin_tf_1.setText(Integer.toString(stats.getNumberRestaurants()));
        admin_tf_2.setText(Integer.toString(stats.getNumberRatings()));
        admin_tf_3.setText(Integer.toString(stats.getNumberRatedRestaurants()));

        //admin_l_2_pop = stats.
        if (admin_l_0_pop != null)
        {
        int k1 = 0;
        for (k1 = 0; k1 < (admin_l_0_pop.length); k1++) {
            listMod_admin_l_0.add(k1, admin_l_0_pop[k1].getName());
        }
        }
        if (admin_l_1_pop != null)
        {
        int k2 = 0;
        
        for (k2 = 0; k2 < (admin_l_1_pop.length); k2++) {
            listMod_admin_l_1.add(k2, encrypter.decrypt(admin_l_1_pop[k2].getDisplayName()));
        }
        }

        if (admin_l_3_pop != null)
        {
        int k3 = 0;
        for(k3=0;k3<(admin_l_3_pop.length);k3++){
            listMod_admin_l_3.add(k3, encrypter.decrypt(admin_l_3_pop[k3].getDisplayName()));
        }
        }

        if (admin_l_2_pop != null)
        {
        int k3 = 0;
        for(k3=0;k3<(admin_l_2_pop.length);k3++){
            listMod_admin_l_2.add(k3, admin_l_2_pop[k3].getComment());
        }
        }

    }

    public void populate_ads_lists() {
        try {
            stats = new DBStatsControl();
        } catch (SQLException ex) {
            // blaha
            JOptionPane.showMessageDialog(null, "Error, Cannot Connect To The Database.");
        }

        //ad adv = new ad();
        //ads_tf_0.setText(adv.getTimesClicked());
    }

    public void init_list_information(int user_access) {
        if (user_access == 1) {
            // GUEST ACCOUNT : populate all information
            // clear all current current information
            clear_tab_information(1);
            clear_tab_information(2);

            // disable restaurant buttons
            r1_rest_b_1.setEnabled(false);
            r1_rest_b_2.setEnabled(false);
            r1_rest_b_3.setEnabled(false);
            r2_rest_b_1.setEnabled(false);
            r2_rest_b_2.setEnabled(false);
            r2_rest_b_3.setEnabled(false);
            r3_rest_b_1.setEnabled(false);
            r3_rest_b_2.setEnabled(false);
            r3_rest_b_3.setEnabled(false);

            // populate new information
            populate_home_lists(loggedUser.getUserID());

        } else if (user_access == 2) {
            // USER ACCOUNT : populate all information
            // clear all current current information
            clear_tab_information(1);
            clear_tab_information(2);
            clear_tab_information(3);
            clear_tab_information(4);
            clear_tab_information(7);
            clear_tab_information(8);
            clear_tab_information(9);

            // enable restaurant buttons
            r1_rest_b_1.setEnabled(true);
            r1_rest_b_2.setEnabled(true);
            r1_rest_b_3.setEnabled(true);
            r2_rest_b_1.setEnabled(true);
            r2_rest_b_2.setEnabled(true);
            r2_rest_b_3.setEnabled(true);
            r3_rest_b_1.setEnabled(true);
            r3_rest_b_2.setEnabled(true);
            r3_rest_b_3.setEnabled(true);

            // populate new information
            populate_home_lists(loggedUser.getUserID());
            populate_account_lists();

        } else if (user_access == 3) {
            // ADMIN ACCOUNT : populate all information
            // clear all current current information
            clear_tab_information(1);
            clear_tab_information(2);
            clear_tab_information(3);
            clear_tab_information(4);
            clear_tab_information(5);
            clear_tab_information(6);
            clear_tab_information(7);
            clear_tab_information(8);
            clear_tab_information(9);
            clear_tab_information(10);
            clear_tab_information(11);
            clear_tab_information(12);

            // enable restaurant buttons
            r1_rest_b_1.setEnabled(true);
            r1_rest_b_2.setEnabled(true);
            r1_rest_b_3.setEnabled(true);
            r2_rest_b_1.setEnabled(true);
            r2_rest_b_2.setEnabled(true);
            r2_rest_b_3.setEnabled(true);
            r3_rest_b_1.setEnabled(true);
            r3_rest_b_2.setEnabled(true);
            r3_rest_b_3.setEnabled(true);

            // populate new information
            populate_home_lists(loggedUser.getUserID());
            populate_account_lists();
            populate_ads_lists();
            populate_admin_lists();

        } else {
            if(this.loggingOut == false){
            System.out.println(loggingOut);
            JOptionPane.showMessageDialog(null, "Error Identifying User Access.");
            }else{
                loggingOut = false;
                return;
            }
        }
    }

    public void clear_tab_information(int tab_id) {
        if (tab_id == 1) {
            // HOME tab
            home_tf_0.setText("");
            listMod_home_l_0.clear();
            listMod_home_l_1.clear();
            listMod_home_l_2.clear();

        } else if (tab_id == 2) {
            // SEARCH tab
            search_tf_0.setText("");
            search_tf_1.setText("");
            search_tf_2.setText("");
            search_tf_3.setText("");
            search_tf_4.setText("");
            search_tf_5.setText("");
            search_tf_6.setText("");
            search_tf_7.setText("");
            search_tf_8.setText("");
            search_tf_9.setText("");
            search_dm_0.setSelectedIndex(0);
            search_dm_1.setSelectedIndex(0);
            search_dm_4.setSelectedIndex(0);
            listMod_search_l_0.clear();

        } else if (tab_id == 3) {
            // ADD tab
            add_tf_0.setText("");
            add_tf_1.setText("");
            add_tf_2.setText("");
            add_tf_3.setText("");
            add_tf_4.setText("");
            add_tf_5.setText("");
            add_tf_6.setText("");
            add_tf_7.setText("");
            add_tf_8.setText("");
            add_tf_9.setText("");
            add_tf_10.setText("");
            add_tf_11.setText("");
            add_dm_0.setSelectedIndex(0);
            add_dm_3.setSelectedIndex(0);
            add_ta_0.setText("");
            add_ta_1.setText("");

        } else if (tab_id == 4) {
            // ACCOUNT tab
            acc_tf_0.setText("");
            acc_tf_1.setText("");
            acc_ta_0.setText("");
            listMod_acc_l_0.clear();
            listMod_acc_l_1.clear();
            listMod_acc_l_2.clear();

        } else if (tab_id == 5) {
            // ADMIN tab
            admin_tf_0.setText("");
            admin_tf_1.setText("");
            admin_tf_2.setText("");
            admin_tf_3.setText("");
            admin_tf_4.setText("");
            listMod_admin_l_0.clear();
            listMod_admin_l_1.clear();
            listMod_admin_l_2.clear();
            listMod_admin_l_3.clear();

        } else if (tab_id == 6) {
            // ADS tab
            ads_tf_0.setText("");
            ads_tf_1.setText("");
            ads_tf_2.setText("");
            ads_tf_3.setText("");
            ads_tf_4.setText("");
            ads_tf_5.setText("");
            ads_tf_6.setText("");
            ads_tf_7.setText("");
            ads_tf_8.setText("");
            ads_tf_9.setText("");
            ads_tf_10.setText("");
            ads_tf_11.setText("");

        } else if (tab_id == 7) {
            // R1 tab
            r1_rest_tf_0.setText("");
            r1_rest_tf_1.setText("");
            r1_rest_tf_2.setText("");
            r1_rest_tf_3.setText("");
            r1_rest_tf_4.setText("");
            r1_rest_tf_5.setText("");
            r1_rest_tf_6.setText("");
            r1_rest_tf_7.setText("");
            r1_rest_tf_8.setText("");
            r1_rest_tf_9.setText("");
            r1_rest_tf_10.setText("");
            r1_rest_tf_11.setText("");
            r1_rest_tf_12.setText("");
            r1_rest_tf_13.setText("");
            r1_rest_tf_14.setText("");
            r1_rest_ta_0.setText("");
            r1_rest_ta_1.setText("");
            r1_rest_ta_2.setText("");

        } else if (tab_id == 8) {
            // R2 tab
            r2_rest_tf_0.setText("");
            r2_rest_tf_1.setText("");
            r2_rest_tf_2.setText("");
            r2_rest_tf_3.setText("");
            r2_rest_tf_4.setText("");
            r2_rest_tf_5.setText("");
            r2_rest_tf_6.setText("");
            r2_rest_tf_7.setText("");
            r2_rest_tf_8.setText("");
            r2_rest_tf_9.setText("");
            r2_rest_tf_10.setText("");
            r2_rest_tf_11.setText("");
            r2_rest_tf_12.setText("");
            r2_rest_tf_13.setText("");
            r2_rest_tf_14.setText("");
            r2_rest_ta_0.setText("");
            r2_rest_ta_1.setText("");
            r2_rest_ta_2.setText("");

        } else if (tab_id == 9) {
            // R3 tab
            r3_rest_tf_0.setText("");
            r3_rest_tf_1.setText("");
            r3_rest_tf_2.setText("");
            r3_rest_tf_3.setText("");
            r3_rest_tf_4.setText("");
            r3_rest_tf_5.setText("");
            r3_rest_tf_6.setText("");
            r3_rest_tf_7.setText("");
            r3_rest_tf_8.setText("");
            r3_rest_tf_9.setText("");
            r3_rest_tf_10.setText("");
            r3_rest_tf_11.setText("");
            r3_rest_tf_12.setText("");
            r3_rest_tf_13.setText("");
            r3_rest_tf_14.setText("");
            r3_rest_ta_0.setText("");
            r3_rest_ta_1.setText("");
            r3_rest_ta_2.setText("");

        } else if (tab_id == 10) {
            // U1 tab
            u1_user_tf_0.setText("");
            u1_user_tf_1.setText("");
            u1_user_tf_2.setText("");
            listMod_u1_user_l_0.clear();

        } else if (tab_id == 11) {
            // U2 tab
            u2_user_tf_0.setText("");
            u2_user_tf_1.setText("");
            u2_user_tf_2.setText("");
            listMod_u2_user_l_0.clear();

        } else if (tab_id == 12) {
            // U3 tab
            u3_user_tf_0.setText("");
            u3_user_tf_1.setText("");
            u3_user_tf_2.setText("");
            listMod_u3_user_l_0.clear();

        } else {
            JOptionPane.showMessageDialog(null, "Invalid index for clear operation.");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acc_b_0;
    private javax.swing.JButton acc_b_1;
    private javax.swing.JList acc_l_0;
    private javax.swing.JList acc_l_1;
    private javax.swing.JList acc_l_2;
    private javax.swing.JTextArea acc_ta_0;
    private javax.swing.JTextField acc_tf_0;
    private javax.swing.JTextField acc_tf_1;
    private javax.swing.JButton add_b_0;
    private javax.swing.JButton add_b_1;
    private javax.swing.JButton add_b_2;
    private javax.swing.JButton add_b_3;
    private javax.swing.JDialog add_comment;
    private javax.swing.JButton add_comment_b_0;
    private javax.swing.JComboBox add_comment_dm_0;
    private javax.swing.JTextArea add_comment_ta_0;
    private javax.swing.JComboBox add_dm_0;
    private javax.swing.JComboBox add_dm_1;
    private javax.swing.JComboBox add_dm_2;
    private javax.swing.JComboBox add_dm_3;
    private javax.swing.JTextArea add_ta_0;
    private javax.swing.JTextArea add_ta_1;
    private javax.swing.JTextField add_tf_0;
    private javax.swing.JTextField add_tf_1;
    private javax.swing.JTextField add_tf_10;
    private javax.swing.JTextField add_tf_11;
    private javax.swing.JTextField add_tf_2;
    private javax.swing.JTextField add_tf_3;
    private javax.swing.JTextField add_tf_4;
    private javax.swing.JTextField add_tf_5;
    private javax.swing.JTextField add_tf_6;
    private javax.swing.JTextField add_tf_7;
    private javax.swing.JTextField add_tf_8;
    private javax.swing.JTextField add_tf_9;
    private javax.swing.JButton admin_b_0;
    private javax.swing.JList admin_l_0;
    private javax.swing.JList admin_l_1;
    private javax.swing.JList admin_l_2;
    private javax.swing.JList admin_l_3;
    private javax.swing.JTextField admin_tf_0;
    private javax.swing.JTextField admin_tf_1;
    private javax.swing.JTextField admin_tf_2;
    private javax.swing.JTextField admin_tf_3;
    private javax.swing.JTextField admin_tf_4;
    private javax.swing.JButton ads_b_0;
    private javax.swing.JButton ads_b_1;
    private javax.swing.JButton ads_b_2;
    private javax.swing.JButton ads_b_3;
    private javax.swing.JButton ads_b_4;
    private javax.swing.JTextField ads_tf_0;
    private javax.swing.JTextField ads_tf_1;
    private javax.swing.JTextField ads_tf_10;
    private javax.swing.JTextField ads_tf_11;
    private javax.swing.JTextField ads_tf_2;
    private javax.swing.JTextField ads_tf_3;
    private javax.swing.JTextField ads_tf_4;
    private javax.swing.JTextField ads_tf_5;
    private javax.swing.JTextField ads_tf_6;
    private javax.swing.JTextField ads_tf_7;
    private javax.swing.JTextField ads_tf_8;
    private javax.swing.JTextField ads_tf_9;
    private javax.swing.JDialog change_password;
    private javax.swing.JButton change_password_b_0;
    private javax.swing.JTextField change_password_tf_0;
    private javax.swing.JPasswordField change_password_tf_1;
    private javax.swing.JPasswordField change_password_tf_2;
    private javax.swing.JButton home_b_0;
    private javax.swing.JList home_l_0;
    private javax.swing.JList home_l_1;
    private javax.swing.JList home_l_2;
    private javax.swing.JTextField home_tf_0;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane24;
    private javax.swing.JScrollPane jScrollPane25;
    private javax.swing.JScrollPane jScrollPane26;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JScrollPane jScrollPane28;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton main_b_0;
    private javax.swing.JButton main_b_1;
    private javax.swing.JButton main_b_2;
    private javax.swing.JButton main_b_3;
    private javax.swing.JTextField main_tf_0;
    private javax.swing.JTextField main_tf_1;
    private javax.swing.JPanel panel_R1_photo;
    private javax.swing.JPanel panel_R2_photo;
    private javax.swing.JPanel panel_R3_photo;
    private javax.swing.JPanel panel_about;
    private javax.swing.JPanel panel_account;
    private javax.swing.JPanel panel_ad_1;
    private javax.swing.JPanel panel_ad_2;
    private javax.swing.JPanel panel_ad_3;
    private javax.swing.JPanel panel_ad_4;
    private javax.swing.JPanel panel_add;
    private javax.swing.JPanel panel_add_comment;
    private javax.swing.JPanel panel_admin;
    private javax.swing.JPanel panel_ads;
    private javax.swing.JPanel panel_change_password;
    private javax.swing.JPanel panel_home;
    private javax.swing.JPanel panel_main;
    private javax.swing.JPanel panel_photo_preview;
    private javax.swing.JPanel panel_r1_restaurant;
    private javax.swing.JPanel panel_r2_restaurant;
    private javax.swing.JPanel panel_r3_restaurant;
    private javax.swing.JPanel panel_registration;
    private javax.swing.JPanel panel_review_comment;
    private javax.swing.JPanel panel_search;
    private javax.swing.JPanel panel_u1_user;
    private javax.swing.JPanel panel_u2_user;
    private javax.swing.JPanel panel_u3_user;
    private javax.swing.JButton r1_rest_b_0;
    private javax.swing.JButton r1_rest_b_1;
    private javax.swing.JButton r1_rest_b_2;
    private javax.swing.JButton r1_rest_b_3;
    private javax.swing.JButton r1_rest_b_4;
    private javax.swing.JButton r1_rest_b_5;
    private javax.swing.JComboBox r1_rest_dm_0;
    private javax.swing.JComboBox r1_rest_dm_1;
    private javax.swing.JTextArea r1_rest_ta_0;
    private javax.swing.JTextArea r1_rest_ta_1;
    private javax.swing.JTextArea r1_rest_ta_2;
    private javax.swing.JTextField r1_rest_tf_0;
    private javax.swing.JTextField r1_rest_tf_1;
    private javax.swing.JTextField r1_rest_tf_10;
    private javax.swing.JTextField r1_rest_tf_11;
    private javax.swing.JTextField r1_rest_tf_12;
    private javax.swing.JTextField r1_rest_tf_13;
    private javax.swing.JTextField r1_rest_tf_14;
    private javax.swing.JTextField r1_rest_tf_2;
    private javax.swing.JTextField r1_rest_tf_3;
    private javax.swing.JTextField r1_rest_tf_4;
    private javax.swing.JTextField r1_rest_tf_5;
    private javax.swing.JTextField r1_rest_tf_6;
    private javax.swing.JTextField r1_rest_tf_7;
    private javax.swing.JTextField r1_rest_tf_8;
    private javax.swing.JTextField r1_rest_tf_9;
    private javax.swing.JButton r2_rest_b_0;
    private javax.swing.JButton r2_rest_b_1;
    private javax.swing.JButton r2_rest_b_2;
    private javax.swing.JButton r2_rest_b_3;
    private javax.swing.JButton r2_rest_b_4;
    private javax.swing.JButton r2_rest_b_5;
    private javax.swing.JComboBox r2_rest_dm_0;
    private javax.swing.JComboBox r2_rest_dm_1;
    private javax.swing.JTextArea r2_rest_ta_0;
    private javax.swing.JTextArea r2_rest_ta_1;
    private javax.swing.JTextArea r2_rest_ta_2;
    private javax.swing.JTextField r2_rest_tf_0;
    private javax.swing.JTextField r2_rest_tf_1;
    private javax.swing.JTextField r2_rest_tf_10;
    private javax.swing.JTextField r2_rest_tf_11;
    private javax.swing.JTextField r2_rest_tf_12;
    private javax.swing.JTextField r2_rest_tf_13;
    private javax.swing.JTextField r2_rest_tf_14;
    private javax.swing.JTextField r2_rest_tf_2;
    private javax.swing.JTextField r2_rest_tf_3;
    private javax.swing.JTextField r2_rest_tf_4;
    private javax.swing.JTextField r2_rest_tf_5;
    private javax.swing.JTextField r2_rest_tf_6;
    private javax.swing.JTextField r2_rest_tf_7;
    private javax.swing.JTextField r2_rest_tf_8;
    private javax.swing.JTextField r2_rest_tf_9;
    private javax.swing.JButton r3_rest_b_0;
    private javax.swing.JButton r3_rest_b_1;
    private javax.swing.JButton r3_rest_b_2;
    private javax.swing.JButton r3_rest_b_3;
    private javax.swing.JButton r3_rest_b_4;
    private javax.swing.JButton r3_rest_b_5;
    private javax.swing.JComboBox r3_rest_dm_0;
    private javax.swing.JComboBox r3_rest_dm_1;
    private javax.swing.JTextArea r3_rest_ta_0;
    private javax.swing.JTextArea r3_rest_ta_1;
    private javax.swing.JTextArea r3_rest_ta_2;
    private javax.swing.JTextField r3_rest_tf_0;
    private javax.swing.JTextField r3_rest_tf_1;
    private javax.swing.JTextField r3_rest_tf_10;
    private javax.swing.JTextField r3_rest_tf_11;
    private javax.swing.JTextField r3_rest_tf_12;
    private javax.swing.JTextField r3_rest_tf_13;
    private javax.swing.JTextField r3_rest_tf_14;
    private javax.swing.JTextField r3_rest_tf_2;
    private javax.swing.JTextField r3_rest_tf_3;
    private javax.swing.JTextField r3_rest_tf_4;
    private javax.swing.JTextField r3_rest_tf_5;
    private javax.swing.JTextField r3_rest_tf_6;
    private javax.swing.JTextField r3_rest_tf_7;
    private javax.swing.JTextField r3_rest_tf_8;
    private javax.swing.JTextField r3_rest_tf_9;
    private javax.swing.JButton registration_b_0;
    private javax.swing.JDialog registration_form;
    private javax.swing.JTextField registration_tf_0;
    private javax.swing.JTextField registration_tf_1;
    private javax.swing.JPasswordField registration_tf_2;
    private javax.swing.JPasswordField registration_tf_3;
    private javax.swing.JDialog review_comment;
    private javax.swing.JButton review_comment_b_0;
    private javax.swing.JButton review_comment_b_1;
    private javax.swing.JComboBox review_comment_dm_0;
    private javax.swing.JTextArea review_comment_ta_0;
    private javax.swing.JButton search_b_0;
    private javax.swing.JButton search_b_1;
    private javax.swing.JComboBox search_dm_0;
    private javax.swing.JComboBox search_dm_1;
    private javax.swing.JComboBox search_dm_2;
    private javax.swing.JComboBox search_dm_3;
    private javax.swing.JComboBox search_dm_4;
    private javax.swing.JList search_l_0;
    private javax.swing.JTextField search_tf_0;
    private javax.swing.JTextField search_tf_1;
    private javax.swing.JTextField search_tf_2;
    private javax.swing.JTextField search_tf_3;
    private javax.swing.JTextField search_tf_4;
    private javax.swing.JTextField search_tf_5;
    private javax.swing.JTextField search_tf_6;
    private javax.swing.JTextField search_tf_7;
    private javax.swing.JTextField search_tf_8;
    private javax.swing.JTextField search_tf_9;
    private javax.swing.JButton u1_user_b_0;
    private javax.swing.JButton u1_user_b_1;
    private javax.swing.JButton u1_user_b_2;
    private javax.swing.JButton u1_user_b_3;
    private javax.swing.JList u1_user_l_0;
    private javax.swing.JTextField u1_user_tf_0;
    private javax.swing.JTextField u1_user_tf_1;
    private javax.swing.JTextField u1_user_tf_2;
    private javax.swing.JButton u2_user_b_0;
    private javax.swing.JButton u2_user_b_1;
    private javax.swing.JButton u2_user_b_2;
    private javax.swing.JButton u2_user_b_3;
    private javax.swing.JList u2_user_l_0;
    private javax.swing.JTextField u2_user_tf_0;
    private javax.swing.JTextField u2_user_tf_1;
    private javax.swing.JTextField u2_user_tf_2;
    private javax.swing.JButton u3_user_b_0;
    private javax.swing.JButton u3_user_b_1;
    private javax.swing.JButton u3_user_b_2;
    private javax.swing.JList u3_user_l_0;
    private javax.swing.JTextField u3_user_tf_0;
    private javax.swing.JTextField u3_user_tf_1;
    private javax.swing.JTextField u3_user_tf_2;
    private javax.swing.JButton u4_user_b_3;
    // End of variables declaration//GEN-END:variables
}
